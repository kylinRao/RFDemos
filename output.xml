<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.3 (Python 3.7.0 on win32)" generated="20181118 11:12:43.654">
<suite id="s1" name="Projects" source="C:\REDX64\projects">
<suite id="s1-s1" name="9.0.0.0" source="C:\REDX64\projects\9.0.0.0">
<suite id="s1-s1-s1" name="remoteLibTest" source="C:\REDX64\projects\9.0.0.0\remoteLibTest.txt">
<test id="s1-s1-s1-t1" name="remoteLibExampleCase">
<kw name="Open Application" library="AppiumLibrary">
<doc>Opens a new application to given Appium server.</doc>
<arguments>
<arg>remote_url=http://127.0.0.1:4723/wd/hub</arg>
<arg>platformName=Android</arg>
<arg>deviceName=ZY223P67ZR</arg>
<arg>appPackage=com.bdvtt.www</arg>
<arg>appActivity=.ui.activity.SplashActivity</arg>
<arg>noReset=True</arg>
<arg>unicodeKeyboard=True</arg>
<arg>resetKeyboard=False</arg>
</arguments>
<status status="PASS" starttime="20181118 11:12:44.956" endtime="20181118 11:13:47.414"></status>
</kw>
<kw name="Get Capability" library="AppiumLibrary">
<doc>Return the desired capability value by desired capability name</doc>
<arguments>
<arg>capability_name=noReset</arg>
</arguments>
<assign>
<var>${noRest}</var>
</assign>
<msg timestamp="20181118 11:13:47.424" level="INFO">${noRest} = True</msg>
<status status="PASS" starttime="20181118 11:13:47.414" endtime="20181118 11:13:47.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${noRest}</arg>
</arguments>
<msg timestamp="20181118 11:13:47.424" level="INFO">True</msg>
<status status="PASS" starttime="20181118 11:13:47.424" endtime="20181118 11:13:47.424"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20181118 11:13:53.442" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20181118 11:13:47.434" endtime="20181118 11:13:53.442"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/iv3</arg>
</arguments>
<status status="PASS" starttime="20181118 11:13:53.442" endtime="20181118 11:13:56.982"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/iv3</arg>
</arguments>
<msg timestamp="20181118 11:13:56.982" level="INFO">Clicking element 'com.bdvtt.www:id/iv3'.</msg>
<status status="PASS" starttime="20181118 11:13:56.982" endtime="20181118 11:13:59.042"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/img_duanzishou</arg>
</arguments>
<msg timestamp="20181118 11:13:59.042" level="INFO">Clicking element 'com.bdvtt.www:id/img_duanzishou'.</msg>
<status status="PASS" starttime="20181118 11:13:59.042" endtime="20181118 11:14:03.908"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/tv_duanzi</arg>
</arguments>
<status status="PASS" starttime="20181118 11:14:03.908" endtime="20181118 11:14:07.300"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/tv_duanzi</arg>
</arguments>
<msg timestamp="20181118 11:14:07.300" level="INFO">Clicking element 'com.bdvtt.www:id/tv_duanzi'.</msg>
<status status="PASS" starttime="20181118 11:14:07.300" endtime="20181118 11:14:09.200"></status>
</kw>
<kw name="${index} IN RANGE [ 1 | 102 ]" type="for">
<kw name="${index} = 1" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:14:09.200" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:14:09.200" endtime="20181118 11:14:09.200"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:14:09.260" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:14:09.200" endtime="20181118 11:14:09.470"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:14:09.480" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:14:09.480" level="INFO">@{queryResults} = [ (1695, '一个醉汉在大街上发酒疯，手里拿着一 叠钞票，大概三四千块，叫嚷着谁陪我 回去睡一晚这钱就是谁的，，话音刚落，只见旁边一 大妈跑过来拉着醉汉就走，醉汉果然把 钱塞进大妈的兜里。正当人们惊叹时， 大妈对醉汉吼到:我怎么就生了你这个 废物。。') ]</msg>
<status status="PASS" starttime="20181118 11:14:09.470" endtime="20181118 11:14:09.480"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:14:09.480" level="INFO">@{results} = [ 1695 | 一个醉汉在大街上发酒疯，手里拿着一 叠钞票，大概三四千块，叫嚷着谁陪我 回去睡一晚这钱就是谁的，，话音刚落，只见旁边一 大妈跑过来拉着醉汉就走，醉汉果然把 钱塞进大妈的兜里。正当人们惊叹时， 大妈对醉汉吼到:我怎么就生了你这个 废物。。 ]</msg>
<status status="PASS" starttime="20181118 11:14:09.480" endtime="20181118 11:14:09.480"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:14:09.480" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1695; </msg>
<status status="PASS" starttime="20181118 11:14:09.480" endtime="20181118 11:14:09.800"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:14:09.800" level="INFO">1695</msg>
<msg timestamp="20181118 11:14:09.800" level="INFO">一个醉汉在大街上发酒疯，手里拿着一 叠钞票，大概三四千块，叫嚷着谁陪我 回去睡一晚这钱就是谁的，，话音刚落，只见旁边一 大妈跑过来拉着醉汉就走，醉汉果然把 钱塞进大妈的兜里。正当人们惊叹时， 大妈对醉汉吼到:我怎么就生了你这个 废物。。</msg>
<status status="PASS" starttime="20181118 11:14:09.800" endtime="20181118 11:14:09.800"></status>
</kw>
<msg timestamp="20181118 11:14:09.800" level="INFO">${aJoke} = 一个醉汉在大街上发酒疯，手里拿着一 叠钞票，大概三四千块，叫嚷着谁陪我 回去睡一晚这钱就是谁的，，话音刚落，只见旁边一 大妈跑过来拉着醉汉就走，醉汉果然把 钱塞进大妈的兜里。正当人们惊叹时， 大妈对醉汉吼到:我怎么就生了你这个 废物。。</msg>
<status status="PASS" starttime="20181118 11:14:09.200" endtime="20181118 11:14:09.800"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:14:09.810" level="INFO">Typing text '一个醉汉在大街上发酒疯，手里拿着一 叠钞票，大概三四千块，叫嚷着谁陪我 回去睡一晚这钱就是谁的，，话音刚落，只见旁边一 大妈跑过来拉着醉汉就走，醉汉果然把 钱塞进大妈的兜里。正当人们惊叹时， 大妈对醉汉吼到:我怎么就生了你这个 废物。。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:14:09.810" endtime="20181118 11:14:22.522"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:14:22.532" endtime="20181118 11:14:26.294"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:14:26.294" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:14:26.294" endtime="20181118 11:14:28.414"></status>
</kw>
<status status="PASS" starttime="20181118 11:14:09.200" endtime="20181118 11:14:28.414"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:14:28.424" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:14:28.424" endtime="20181118 11:14:28.424"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:14:28.424" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:14:28.424" endtime="20181118 11:14:28.454"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:14:28.454" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:14:28.484" level="INFO">@{queryResults} = [ (1696, '话说密集恐惧症的人很辛苦，看到密集的东西就掉一地鸡皮疙瘩，看见自己掉的一地鸡皮疙瘩又掉一地鸡皮疙瘩……') ]</msg>
<status status="PASS" starttime="20181118 11:14:28.454" endtime="20181118 11:14:28.484"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:14:28.484" level="INFO">@{results} = [ 1696 | 话说密集恐惧症的人很辛苦，看到密集的东西就掉一地鸡皮疙瘩，看见自己掉的一地鸡皮疙瘩又掉一地鸡皮疙瘩…… ]</msg>
<status status="PASS" starttime="20181118 11:14:28.484" endtime="20181118 11:14:28.494"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:14:28.494" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1696; </msg>
<status status="PASS" starttime="20181118 11:14:28.494" endtime="20181118 11:14:28.504"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:14:28.504" level="INFO">1696</msg>
<msg timestamp="20181118 11:14:28.504" level="INFO">话说密集恐惧症的人很辛苦，看到密集的东西就掉一地鸡皮疙瘩，看见自己掉的一地鸡皮疙瘩又掉一地鸡皮疙瘩……</msg>
<status status="PASS" starttime="20181118 11:14:28.504" endtime="20181118 11:14:28.504"></status>
</kw>
<msg timestamp="20181118 11:14:28.504" level="INFO">${aJoke} = 话说密集恐惧症的人很辛苦，看到密集的东西就掉一地鸡皮疙瘩，看见自己掉的一地鸡皮疙瘩又掉一地鸡皮疙瘩……</msg>
<status status="PASS" starttime="20181118 11:14:28.424" endtime="20181118 11:14:28.504"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:14:28.514" level="INFO">Typing text '话说密集恐惧症的人很辛苦，看到密集的东西就掉一地鸡皮疙瘩，看见自己掉的一地鸡皮疙瘩又掉一地鸡皮疙瘩……' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:14:28.504" endtime="20181118 11:14:37.074"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:14:37.074" endtime="20181118 11:14:40.456"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:14:40.466" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:14:40.466" endtime="20181118 11:14:43.222"></status>
</kw>
<status status="PASS" starttime="20181118 11:14:28.424" endtime="20181118 11:14:43.222"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:14:43.232" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:14:43.232" endtime="20181118 11:14:43.232"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:14:43.232" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:14:43.232" endtime="20181118 11:14:43.262"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:14:43.262" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:14:43.292" level="INFO">@{queryResults} = [ (1697, '大家是不是觉得牛郎织女每年只有一天的时间见面感觉他们很可怜。但是，你们要知道，天上一天，地下一年啊。我们就这么赤裸裸的被骗了这么多年。。。(第一次发，求过)') ]</msg>
<status status="PASS" starttime="20181118 11:14:43.262" endtime="20181118 11:14:43.292"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:14:43.292" level="INFO">@{results} = [ 1697 | 大家是不是觉得牛郎织女每年只有一天的时间见面感觉他们很可怜。但是，你们要知道，天上一天，地下一年啊。我们就这么赤裸裸的被骗了这么多年。。。(第一次发，求过) ]</msg>
<status status="PASS" starttime="20181118 11:14:43.292" endtime="20181118 11:14:43.292"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:14:43.292" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1697; </msg>
<status status="PASS" starttime="20181118 11:14:43.292" endtime="20181118 11:14:43.592"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:14:43.602" level="INFO">1697</msg>
<msg timestamp="20181118 11:14:43.602" level="INFO">大家是不是觉得牛郎织女每年只有一天的时间见面感觉他们很可怜。但是，你们要知道，天上一天，地下一年啊。我们就这么赤裸裸的被骗了这么多年。。。(第一次发，求过)</msg>
<status status="PASS" starttime="20181118 11:14:43.602" endtime="20181118 11:14:43.602"></status>
</kw>
<msg timestamp="20181118 11:14:43.602" level="INFO">${aJoke} = 大家是不是觉得牛郎织女每年只有一天的时间见面感觉他们很可怜。但是，你们要知道，天上一天，地下一年啊。我们就这么赤裸裸的被骗了这么多年。。。(第一次发，求过)</msg>
<status status="PASS" starttime="20181118 11:14:43.222" endtime="20181118 11:14:43.602"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:14:43.602" level="INFO">Typing text '大家是不是觉得牛郎织女每年只有一天的时间见面感觉他们很可怜。但是，你们要知道，天上一天，地下一年啊。我们就这么赤裸裸的被骗了这么多年。。。(第一次发，求过)' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:14:43.602" endtime="20181118 11:14:54.251"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:14:54.251" endtime="20181118 11:14:57.599"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:14:57.599" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:14:57.599" endtime="20181118 11:14:59.919"></status>
</kw>
<status status="PASS" starttime="20181118 11:14:43.222" endtime="20181118 11:14:59.919"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:14:59.919" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:14:59.919" endtime="20181118 11:14:59.919"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:14:59.929" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:14:59.929" endtime="20181118 11:14:59.969"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:14:59.969" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:14:59.979" level="INFO">@{queryResults} = [ (1698, '今天早上起来晚了，拿着包子边走边往学校走，路口突然窜出来一只大黑狗，跑到我面前冲我使劲叫，顿时吓的我魂飞魄散，一下扔了手里刚咬一口的包子，嗷一声叫了起来，可能是狗被我叫的吓到了，叼起我的肉包子转头就走了，次奥，以为老娘好欺负吗，于是速度抓起一个石子打了它一下，，，，唉，手欠啊，今天没去上课直接医院打了一针狂犬疫苗。') ]</msg>
<status status="PASS" starttime="20181118 11:14:59.969" endtime="20181118 11:14:59.979"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:14:59.989" level="INFO">@{results} = [ 1698 | 今天早上起来晚了，拿着包子边走边往学校走，路口突然窜出来一只大黑狗，跑到我面前冲我使劲叫，顿时吓的我魂飞魄散，一下扔了手里刚咬一口的包子，嗷一声叫了起来，可能是狗被我叫的吓到了，叼起我的肉包子转头就走了，次奥，以为老娘好欺负吗，于是速度抓起一个石子打了它一下，，，，唉，手欠啊，今天没去上课直接医院打了一针狂犬疫苗。 ]</msg>
<status status="PASS" starttime="20181118 11:14:59.979" endtime="20181118 11:14:59.989"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:14:59.989" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1698; </msg>
<status status="PASS" starttime="20181118 11:14:59.989" endtime="20181118 11:15:00.009"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:15:00.009" level="INFO">1698</msg>
<msg timestamp="20181118 11:15:00.009" level="INFO">今天早上起来晚了，拿着包子边走边往学校走，路口突然窜出来一只大黑狗，跑到我面前冲我使劲叫，顿时吓的我魂飞魄散，一下扔了手里刚咬一口的包子，嗷一声叫了起来，可能是狗被我叫的吓到了，叼起我的肉包子转头就走了，次奥，以为老娘好欺负吗，于是速度抓起一个石子打了它一下，，，，唉，手欠啊，今天没去上课直接医院打了一针狂犬疫苗。</msg>
<status status="PASS" starttime="20181118 11:15:00.009" endtime="20181118 11:15:00.009"></status>
</kw>
<msg timestamp="20181118 11:15:00.009" level="INFO">${aJoke} = 今天早上起来晚了，拿着包子边走边往学校走，路口突然窜出来一只大黑狗，跑到我面前冲我使劲叫，顿时吓的我魂飞魄散，一下扔了手里刚咬一口的包子，嗷一声叫了起来，可能是狗被我叫的吓到了，叼起我的肉包子转头就走了，次奥，以为老娘好欺负吗，于是速度抓起一个石子打了它一下，，，，唉，手欠啊，今天没去上课直接医院打了一针狂犬疫苗。</msg>
<status status="PASS" starttime="20181118 11:14:59.919" endtime="20181118 11:15:00.009"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:15:00.009" level="INFO">Typing text '今天早上起来晚了，拿着包子边走边往学校走，路口突然窜出来一只大黑狗，跑到我面前冲我使劲叫，顿时吓的我魂飞魄散，一下扔了手里刚咬一口的包子，嗷一声叫了起来，可能是狗被我叫的吓到了，叼起我的肉包子转头就走了，次奥，以为老娘好欺负吗，于是速度抓起一个石子打了它一下，，，，唉，手欠啊，今天没去上课直接医院打了一针狂犬疫苗。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:15:00.009" endtime="20181118 11:15:12.803"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:15:12.813" endtime="20181118 11:15:16.140"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:15:16.140" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:15:16.140" endtime="20181118 11:15:18.892"></status>
</kw>
<status status="PASS" starttime="20181118 11:14:59.919" endtime="20181118 11:15:18.892"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:15:18.902" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:15:18.902" endtime="20181118 11:15:18.902"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:15:18.902" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:15:18.902" endtime="20181118 11:15:18.992"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:15:18.992" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:15:19.002" level="INFO">@{queryResults} = [ (1699, '刚才在ATM取钱时，前面一妹子好像连续都输错密码，然后卡被吞了...回头看我一眼，问我该怎么办，我说没事，用身份证可以取回！然后看她好像从兜里掏什么，我继续低头玩手机...一分钟后，那妹子回头冲我大喊大叫你个死骗子！我身份证也被吞了！\u3000\u3000为"上墙"而努力。\u3000') ]</msg>
<status status="PASS" starttime="20181118 11:15:18.992" endtime="20181118 11:15:19.002"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:15:19.002" level="INFO">@{results} = [ 1699 | 刚才在ATM取钱时，前面一妹子好像连续都输错密码，然后卡被吞了...回头看我一眼，问我该怎么办，我说没事，用身份证可以取回！然后看她好像从兜里掏什么，我继续低头玩手机...一分钟后，那妹子回头冲我大喊大叫你个死骗子！我身份证也被吞了！　　为"上墙"而努力。　 ]</msg>
<status status="PASS" starttime="20181118 11:15:19.002" endtime="20181118 11:15:19.002"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:15:19.002" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1699; </msg>
<status status="PASS" starttime="20181118 11:15:19.002" endtime="20181118 11:15:19.302"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:15:19.302" level="INFO">1699</msg>
<msg timestamp="20181118 11:15:19.302" level="INFO">刚才在ATM取钱时，前面一妹子好像连续都输错密码，然后卡被吞了...回头看我一眼，问我该怎么办，我说没事，用身份证可以取回！然后看她好像从兜里掏什么，我继续低头玩手机...一分钟后，那妹子回头冲我大喊大叫你个死骗子！我身份证也被吞了！　　为"上墙"而努力。　</msg>
<status status="PASS" starttime="20181118 11:15:19.302" endtime="20181118 11:15:19.302"></status>
</kw>
<msg timestamp="20181118 11:15:19.302" level="INFO">${aJoke} = 刚才在ATM取钱时，前面一妹子好像连续都输错密码，然后卡被吞了...回头看我一眼，问我该怎么办，我说没事，用身份证可以取回！然后看她好像从兜里掏什么，我继续低头玩手机...一分钟后，那妹子回头冲我大喊大叫你个死骗子！我身份证也被吞了！　　为"上墙"而努力。　</msg>
<status status="PASS" starttime="20181118 11:15:18.892" endtime="20181118 11:15:19.302"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:15:19.302" level="INFO">Typing text '刚才在ATM取钱时，前面一妹子好像连续都输错密码，然后卡被吞了...回头看我一眼，问我该怎么办，我说没事，用身份证可以取回！然后看她好像从兜里掏什么，我继续低头玩手机...一分钟后，那妹子回头冲我大喊大叫你个死骗子！我身份证也被吞了！　　为"上墙"而努力。　' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:15:19.302" endtime="20181118 11:15:32.048"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:15:32.048" endtime="20181118 11:15:37.343"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:15:37.343" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:15:37.343" endtime="20181118 11:15:40.533"></status>
</kw>
<status status="PASS" starttime="20181118 11:15:18.892" endtime="20181118 11:15:40.533"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:15:40.543" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:15:40.543" endtime="20181118 11:15:40.543"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:15:40.543" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:15:40.543" endtime="20181118 11:15:40.583"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:15:40.583" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:15:40.623" level="INFO">@{queryResults} = [ (1700, '/难过 一个武士手里拿一条活鱼问禅师：我跟你打一个赌，你猜我手里这个鱼是活的还是死的？禅师心想：如果说是活的，武士就会把鱼捏死。但明知是活的说是死的，就打了诳语。鱼命和原则哪个更重要？禅师沉思了半个小时，终于说道：是死的。武士看了看手中的鱼，说道：麻痹的，半个小时前还是活的。') ]</msg>
<status status="PASS" starttime="20181118 11:15:40.583" endtime="20181118 11:15:40.623"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:15:40.623" level="INFO">@{results} = [ 1700 | /难过 一个武士手里拿一条活鱼问禅师：我跟你打一个赌，你猜我手里这个鱼是活的还是死的？禅师心想：如果说是活的，武士就会把鱼捏死。但明知是活的说是死的，就打了诳语。鱼命和原则哪个更重要？禅师沉思了半个小时，终于说道：是死的。武士看了看手中的鱼，说道：麻痹的，半个小时前还是活的。 ]</msg>
<status status="PASS" starttime="20181118 11:15:40.623" endtime="20181118 11:15:40.623"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:15:40.623" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1700; </msg>
<status status="PASS" starttime="20181118 11:15:40.623" endtime="20181118 11:15:40.923"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:15:40.933" level="INFO">1700</msg>
<msg timestamp="20181118 11:15:40.934" level="INFO">/难过 一个武士手里拿一条活鱼问禅师：我跟你打一个赌，你猜我手里这个鱼是活的还是死的？禅师心想：如果说是活的，武士就会把鱼捏死。但明知是活的说是死的，就打了诳语。鱼命和原则哪个更重要？禅师沉思了半个小时，终于说道：是死的。武士看了看手中的鱼，说道：麻痹的，半个小时前还是活的。</msg>
<status status="PASS" starttime="20181118 11:15:40.923" endtime="20181118 11:15:40.935"></status>
</kw>
<msg timestamp="20181118 11:15:40.935" level="INFO">${aJoke} = /难过 一个武士手里拿一条活鱼问禅师：我跟你打一个赌，你猜我手里这个鱼是活的还是死的？禅师心想：如果说是活的，武士就会把鱼捏死。但明知是活的说是死的，就打了诳语。鱼命和原则哪个更重要？禅师沉思了半个小时，终于说道：是死的。武士看了看手中的鱼，说道：麻痹的，半个小时前还是活的。</msg>
<status status="PASS" starttime="20181118 11:15:40.533" endtime="20181118 11:15:40.935"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:15:40.935" level="INFO">Typing text '/难过 一个武士手里拿一条活鱼问禅师：我跟你打一个赌，你猜我手里这个鱼是活的还是死的？禅师心想：如果说是活的，武士就会把鱼捏死。但明知是活的说是死的，就打了诳语。鱼命和原则哪个更重要？禅师沉思了半个小时，终于说道：是死的。武士看了看手中的鱼，说道：麻痹的，半个小时前还是活的。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:15:40.935" endtime="20181118 11:15:53.577"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:15:53.577" endtime="20181118 11:15:58.350"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:15:58.350" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:15:58.350" endtime="20181118 11:16:01.544"></status>
</kw>
<status status="PASS" starttime="20181118 11:15:40.533" endtime="20181118 11:16:01.544"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:16:01.554" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:16:01.554" endtime="20181118 11:16:01.554"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:16:01.564" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:16:01.554" endtime="20181118 11:16:01.584"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:16:01.584" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:16:01.594" level="INFO">@{queryResults} = [ (1701, '期末考试填空题，问李清照是___派的词人，我实在不知道就写了个武当派。。。卷子发下来的时候老师说有个学生的答案必须得请他家长来看看！！我想我完蛋了，结果是同桌被请家长了，因为他的答案是“蛋黄派”') ]</msg>
<status status="PASS" starttime="20181118 11:16:01.584" endtime="20181118 11:16:01.594"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:16:01.604" level="INFO">@{results} = [ 1701 | 期末考试填空题，问李清照是___派的词人，我实在不知道就写了个武当派。。。卷子发下来的时候老师说有个学生的答案必须得请他家长来看看！！我想我完蛋了，结果是同桌被请家长了，因为他的答案是“蛋黄派” ]</msg>
<status status="PASS" starttime="20181118 11:16:01.594" endtime="20181118 11:16:01.604"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:16:01.604" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1701; </msg>
<status status="PASS" starttime="20181118 11:16:01.604" endtime="20181118 11:16:01.624"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:16:01.624" level="INFO">1701</msg>
<msg timestamp="20181118 11:16:01.624" level="INFO">期末考试填空题，问李清照是___派的词人，我实在不知道就写了个武当派。。。卷子发下来的时候老师说有个学生的答案必须得请他家长来看看！！我想我完蛋了，结果是同桌被请家长了，因为他的答案是“蛋黄派”</msg>
<status status="PASS" starttime="20181118 11:16:01.624" endtime="20181118 11:16:01.624"></status>
</kw>
<msg timestamp="20181118 11:16:01.624" level="INFO">${aJoke} = 期末考试填空题，问李清照是___派的词人，我实在不知道就写了个武当派。。。卷子发下来的时候老师说有个学生的答案必须得请他家长来看看！！我想我完蛋了，结果是同桌被请家长了，因为他的答案是“蛋黄派”</msg>
<status status="PASS" starttime="20181118 11:16:01.544" endtime="20181118 11:16:01.624"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:16:01.634" level="INFO">Typing text '期末考试填空题，问李清照是___派的词人，我实在不知道就写了个武当派。。。卷子发下来的时候老师说有个学生的答案必须得请他家长来看看！！我想我完蛋了，结果是同桌被请家长了，因为他的答案是“蛋黄派”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:16:01.624" endtime="20181118 11:16:14.181"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:16:14.181" endtime="20181118 11:16:20.117"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:16:20.117" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:16:20.117" endtime="20181118 11:16:25.069"></status>
</kw>
<status status="PASS" starttime="20181118 11:16:01.544" endtime="20181118 11:16:25.069"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:16:25.079" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:16:25.079" endtime="20181118 11:16:25.079"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:16:25.079" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:16:25.079" endtime="20181118 11:16:25.129"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:16:25.129" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:16:25.179" level="INFO">@{queryResults} = [ (1702, '1辅导班老师，给学生布置了不少作业。末了他随口说：“做错一题罚两题，做对两题奖励一题。”全班同学都不淡定了…… 2化学老师因为大家成绩不好大怒：“看看你们考的这分，真是让人上火！”后面阴暗的角落接道：“怕上火喝王老吉。” 3大学一个同学眼睛奇小，正常状态下看上去只有一道缝。一日在食堂午饭后聚精会神看电视，食堂一清洁工走过来惊奇地说：“同学，你咋吃完饭就在这儿睡着了？') ]</msg>
<status status="PASS" starttime="20181118 11:16:25.129" endtime="20181118 11:16:25.179"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:16:25.179" level="INFO">@{results} = [ 1702 | 1辅导班老师，给学生布置了不少作业。末了他随口说：“做错一题罚两题，做对两题奖励一题。”全班同学都不淡定了…… 2化学老师因为大家成绩不好大怒：“看看你们考的这分，真是让人上火！”后面阴暗的角落接道：“怕上火喝王老吉。” 3大学一个同学眼睛奇小，正常状态下看上去只有一道缝。一日在食堂午饭后聚精会神看电视，食堂一清洁工走过来惊奇地说：“同学，你咋吃完饭就在这儿睡着了？ ]</msg>
<status status="PASS" starttime="20181118 11:16:25.179" endtime="20181118 11:16:25.179"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:16:25.189" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1702; </msg>
<status status="PASS" starttime="20181118 11:16:25.189" endtime="20181118 11:16:25.219"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:16:25.219" level="INFO">1702</msg>
<msg timestamp="20181118 11:16:25.219" level="INFO">1辅导班老师，给学生布置了不少作业。末了他随口说：“做错一题罚两题，做对两题奖励一题。”全班同学都不淡定了…… 2化学老师因为大家成绩不好大怒：“看看你们考的这分，真是让人上火！”后面阴暗的角落接道：“怕上火喝王老吉。” 3大学一个同学眼睛奇小，正常状态下看上去只有一道缝。一日在食堂午饭后聚精会神看电视，食堂一清洁工走过来惊奇地说：“同学，你咋吃完饭就在这儿睡着了？</msg>
<status status="PASS" starttime="20181118 11:16:25.219" endtime="20181118 11:16:25.219"></status>
</kw>
<msg timestamp="20181118 11:16:25.219" level="INFO">${aJoke} = 1辅导班老师，给学生布置了不少作业。末了他随口说：“做错一题罚两题，做对两题奖励一题。”全班同学都不淡定了…… 2化学老师因为大家成绩不好大怒：“看看你们考的这分，真是让人上火！”后面阴暗的角落接道：“怕上火喝王老吉。” 3大学一个同学眼睛奇小，正常状态下看上去只有一道缝。一日在食堂午饭后聚精会神看电视，食堂一清洁工走过来惊奇地说：“同学，你咋吃完饭就在这儿睡着了？</msg>
<status status="PASS" starttime="20181118 11:16:25.079" endtime="20181118 11:16:25.219"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:16:25.229" level="INFO">Typing text '1辅导班老师，给学生布置了不少作业。末了他随口说：“做错一题罚两题，做对两题奖励一题。”全班同学都不淡定了…… 2化学老师因为大家成绩不好大怒：“看看你们考的这分，真是让人上火！”后面阴暗的角落接道：“怕上火喝王老吉。” 3大学一个同学眼睛奇小，正常状态下看上去只有一道缝。一日在食堂午饭后聚精会神看电视，食堂一清洁工走过来惊奇地说：“同学，你咋吃完饭就在这儿睡着了？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:16:25.229" endtime="20181118 11:16:39.510"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:16:39.510" endtime="20181118 11:16:45.170"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:16:45.180" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:16:45.170" endtime="20181118 11:16:49.206"></status>
</kw>
<status status="PASS" starttime="20181118 11:16:25.079" endtime="20181118 11:16:49.206"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:16:49.206" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:16:49.206" endtime="20181118 11:16:49.206"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:16:49.206" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:16:49.206" endtime="20181118 11:16:49.246"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:16:49.246" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:16:49.266" level="INFO">@{queryResults} = [ (1703, '大学有个女同学特霸道，有天进教室看见有个男生坐在她平时坐的位子上。 过去冲那男生吼：你给我让开，那是我的位子。 男生说：你说位子是你的就是你的？ 女生就说：这位子我都已经坐三年了，就是我的。 男生回答：那我暗恋了你三年，你应该是我的了！') ]</msg>
<status status="PASS" starttime="20181118 11:16:49.246" endtime="20181118 11:16:49.266"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:16:49.266" level="INFO">@{results} = [ 1703 | 大学有个女同学特霸道，有天进教室看见有个男生坐在她平时坐的位子上。 过去冲那男生吼：你给我让开，那是我的位子。 男生说：你说位子是你的就是你的？ 女生就说：这位子我都已经坐三年了，就是我的。 男生回答：那我暗恋了你三年，你应该是我的了！ ]</msg>
<status status="PASS" starttime="20181118 11:16:49.266" endtime="20181118 11:16:49.266"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:16:49.266" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1703; </msg>
<status status="PASS" starttime="20181118 11:16:49.266" endtime="20181118 11:16:49.566"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:16:49.566" level="INFO">1703</msg>
<msg timestamp="20181118 11:16:49.576" level="INFO">大学有个女同学特霸道，有天进教室看见有个男生坐在她平时坐的位子上。 过去冲那男生吼：你给我让开，那是我的位子。 男生说：你说位子是你的就是你的？ 女生就说：这位子我都已经坐三年了，就是我的。 男生回答：那我暗恋了你三年，你应该是我的了！</msg>
<status status="PASS" starttime="20181118 11:16:49.566" endtime="20181118 11:16:49.576"></status>
</kw>
<msg timestamp="20181118 11:16:49.576" level="INFO">${aJoke} = 大学有个女同学特霸道，有天进教室看见有个男生坐在她平时坐的位子上。 过去冲那男生吼：你给我让开，那是我的位子。 男生说：你说位子是你的就是你的？ 女生就说：这位子我都已经坐三年了，就是我的。 男生回答：那我暗恋了你三年，你应该是我的了！</msg>
<status status="PASS" starttime="20181118 11:16:49.206" endtime="20181118 11:16:49.576"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:16:49.576" level="INFO">Typing text '大学有个女同学特霸道，有天进教室看见有个男生坐在她平时坐的位子上。 过去冲那男生吼：你给我让开，那是我的位子。 男生说：你说位子是你的就是你的？ 女生就说：这位子我都已经坐三年了，就是我的。 男生回答：那我暗恋了你三年，你应该是我的了！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:16:49.576" endtime="20181118 11:17:01.527"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:17:01.527" endtime="20181118 11:17:05.026"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:17:05.026" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:17:05.026" endtime="20181118 11:17:07.488"></status>
</kw>
<status status="PASS" starttime="20181118 11:16:49.206" endtime="20181118 11:17:07.498"></status>
</kw>
<kw name="${index} = 10" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:17:07.498" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:17:07.498" endtime="20181118 11:17:07.498"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:17:07.498" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:17:07.498" endtime="20181118 11:17:07.518"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:17:07.518" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:17:07.548" level="INFO">@{queryResults} = [ (1704, '等叶诗文长大了，就嫁给孙杨吧，年龄 相差五岁很合适，相貌也般配，都是杭 州人，都是世界游泳冠军，更关键的 是，他们的下一代会比鱼游得还快。 司仪的台词我都想好了：“现在， 请新郎新娘交换金牌。”') ]</msg>
<status status="PASS" starttime="20181118 11:17:07.518" endtime="20181118 11:17:07.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:17:07.558" level="INFO">@{results} = [ 1704 | 等叶诗文长大了，就嫁给孙杨吧，年龄 相差五岁很合适，相貌也般配，都是杭 州人，都是世界游泳冠军，更关键的 是，他们的下一代会比鱼游得还快。 司仪的台词我都想好了：“现在， 请新郎新娘交换金牌。” ]</msg>
<status status="PASS" starttime="20181118 11:17:07.548" endtime="20181118 11:17:07.558"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:17:07.558" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1704; </msg>
<status status="PASS" starttime="20181118 11:17:07.558" endtime="20181118 11:17:07.838"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:17:07.848" level="INFO">1704</msg>
<msg timestamp="20181118 11:17:07.848" level="INFO">等叶诗文长大了，就嫁给孙杨吧，年龄 相差五岁很合适，相貌也般配，都是杭 州人，都是世界游泳冠军，更关键的 是，他们的下一代会比鱼游得还快。 司仪的台词我都想好了：“现在， 请新郎新娘交换金牌。”</msg>
<status status="PASS" starttime="20181118 11:17:07.838" endtime="20181118 11:17:07.848"></status>
</kw>
<msg timestamp="20181118 11:17:07.848" level="INFO">${aJoke} = 等叶诗文长大了，就嫁给孙杨吧，年龄 相差五岁很合适，相貌也般配，都是杭 州人，都是世界游泳冠军，更关键的 是，他们的下一代会比鱼游得还快。 司仪的台词我都想好了：“现在， 请新郎新娘交换金牌。”</msg>
<status status="PASS" starttime="20181118 11:17:07.498" endtime="20181118 11:17:07.848"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:17:07.848" level="INFO">Typing text '等叶诗文长大了，就嫁给孙杨吧，年龄 相差五岁很合适，相貌也般配，都是杭 州人，都是世界游泳冠军，更关键的 是，他们的下一代会比鱼游得还快。 司仪的台词我都想好了：“现在， 请新郎新娘交换金牌。”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:17:07.848" endtime="20181118 11:17:20.182"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:17:20.182" endtime="20181118 11:17:27.253"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:17:27.253" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:17:27.253" endtime="20181118 11:17:34.256"></status>
</kw>
<status status="PASS" starttime="20181118 11:17:07.498" endtime="20181118 11:17:34.256"></status>
</kw>
<kw name="${index} = 11" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:17:34.266" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:17:34.266" endtime="20181118 11:17:34.266"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:17:34.266" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:17:34.266" endtime="20181118 11:17:34.356"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:17:34.356" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:17:34.376" level="INFO">@{queryResults} = [ (1705, '有一天半夜，一中年男人用微信查找附近的人，加了最近的女孩微信，然后消息说:“美女你好，离你好近呀，有时间一起喝喝茶！”女孩回答:“爸，你换个头像好不好？大晚上的，快睡觉吧！') ]</msg>
<status status="PASS" starttime="20181118 11:17:34.356" endtime="20181118 11:17:34.376"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:17:34.376" level="INFO">@{results} = [ 1705 | 有一天半夜，一中年男人用微信查找附近的人，加了最近的女孩微信，然后消息说:“美女你好，离你好近呀，有时间一起喝喝茶！”女孩回答:“爸，你换个头像好不好？大晚上的，快睡觉吧！ ]</msg>
<status status="PASS" starttime="20181118 11:17:34.376" endtime="20181118 11:17:34.376"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:17:34.386" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1705; </msg>
<status status="PASS" starttime="20181118 11:17:34.376" endtime="20181118 11:17:34.696"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:17:34.696" level="INFO">1705</msg>
<msg timestamp="20181118 11:17:34.696" level="INFO">有一天半夜，一中年男人用微信查找附近的人，加了最近的女孩微信，然后消息说:“美女你好，离你好近呀，有时间一起喝喝茶！”女孩回答:“爸，你换个头像好不好？大晚上的，快睡觉吧！</msg>
<status status="PASS" starttime="20181118 11:17:34.696" endtime="20181118 11:17:34.696"></status>
</kw>
<msg timestamp="20181118 11:17:34.696" level="INFO">${aJoke} = 有一天半夜，一中年男人用微信查找附近的人，加了最近的女孩微信，然后消息说:“美女你好，离你好近呀，有时间一起喝喝茶！”女孩回答:“爸，你换个头像好不好？大晚上的，快睡觉吧！</msg>
<status status="PASS" starttime="20181118 11:17:34.256" endtime="20181118 11:17:34.696"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:17:34.696" level="INFO">Typing text '有一天半夜，一中年男人用微信查找附近的人，加了最近的女孩微信，然后消息说:“美女你好，离你好近呀，有时间一起喝喝茶！”女孩回答:“爸，你换个头像好不好？大晚上的，快睡觉吧！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:17:34.696" endtime="20181118 11:17:47.650"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:17:47.650" endtime="20181118 11:17:54.626"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:17:54.626" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:17:54.626" endtime="20181118 11:17:59.372"></status>
</kw>
<status status="PASS" starttime="20181118 11:17:34.256" endtime="20181118 11:17:59.372"></status>
</kw>
<kw name="${index} = 12" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:17:59.382" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:17:59.372" endtime="20181118 11:17:59.382"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:17:59.382" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:17:59.382" endtime="20181118 11:17:59.442"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:17:59.442" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:17:59.452" level="INFO">@{queryResults} = [ (1706, '本人小女子一枚，回家后，把内衣里的 胸垫随便的丢在了桌上。老妈看见后就 问我这是什么东西？我不屑的说：作为 一个女人，居然连这都不知道！结果换 来我妈一句：“作为一个女人还用这玩 意？！”口气超鄙视！我瞬间觉得被我妈 秒杀了!') ]</msg>
<status status="PASS" starttime="20181118 11:17:59.442" endtime="20181118 11:17:59.452"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:17:59.462" level="INFO">@{results} = [ 1706 | 本人小女子一枚，回家后，把内衣里的 胸垫随便的丢在了桌上。老妈看见后就 问我这是什么东西？我不屑的说：作为 一个女人，居然连这都不知道！结果换 来我妈一句：“作为一个女人还用这玩 意？！”口气超鄙视！我瞬间觉得被我妈 秒杀了! ]</msg>
<status status="PASS" starttime="20181118 11:17:59.462" endtime="20181118 11:17:59.462"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:17:59.462" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1706; </msg>
<status status="PASS" starttime="20181118 11:17:59.462" endtime="20181118 11:17:59.492"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:17:59.492" level="INFO">1706</msg>
<msg timestamp="20181118 11:17:59.492" level="INFO">本人小女子一枚，回家后，把内衣里的 胸垫随便的丢在了桌上。老妈看见后就 问我这是什么东西？我不屑的说：作为 一个女人，居然连这都不知道！结果换 来我妈一句：“作为一个女人还用这玩 意？！”口气超鄙视！我瞬间觉得被我妈 秒杀了!</msg>
<status status="PASS" starttime="20181118 11:17:59.492" endtime="20181118 11:17:59.492"></status>
</kw>
<msg timestamp="20181118 11:17:59.492" level="INFO">${aJoke} = 本人小女子一枚，回家后，把内衣里的 胸垫随便的丢在了桌上。老妈看见后就 问我这是什么东西？我不屑的说：作为 一个女人，居然连这都不知道！结果换 来我妈一句：“作为一个女人还用这玩 意？！”口气超鄙视！我瞬间觉得被我妈 秒杀了!</msg>
<status status="PASS" starttime="20181118 11:17:59.372" endtime="20181118 11:17:59.502"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:17:59.502" level="INFO">Typing text '本人小女子一枚，回家后，把内衣里的 胸垫随便的丢在了桌上。老妈看见后就 问我这是什么东西？我不屑的说：作为 一个女人，居然连这都不知道！结果换 来我妈一句：“作为一个女人还用这玩 意？！”口气超鄙视！我瞬间觉得被我妈 秒杀了!' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:17:59.502" endtime="20181118 11:18:10.826"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:18:10.836" endtime="20181118 11:18:14.239"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:18:14.239" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:18:14.239" endtime="20181118 11:18:16.569"></status>
</kw>
<status status="PASS" starttime="20181118 11:17:59.372" endtime="20181118 11:18:16.569"></status>
</kw>
<kw name="${index} = 13" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:18:16.569" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:18:16.569" endtime="20181118 11:18:16.569"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:18:16.569" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:18:16.569" endtime="20181118 11:18:16.609"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:18:16.609" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:18:16.619" level="INFO">@{queryResults} = [ (1707, '一对父子的聊天记录 儿子：“爸，我女朋友怀孕了，我想和她结婚。” 爸爸“哪个？” 儿子：“还有那个！上次回家不是给你们看了吗？” “啊，有印象，那么漂亮怎么看上你了。” 儿子：“她说我老实可靠。你和我妈商量下，要是可以我过年带回去，商量啥时侯结婚的事。” “你确定她怀的是你的？可别喜当爹啊。” 儿子：“。。。，我心里有数的爸。” “别走爸的老路啊。” 儿子：“放心吧。” 儿子：...</msg>
<status status="PASS" starttime="20181118 11:18:16.609" endtime="20181118 11:18:16.619"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:18:16.619" level="INFO">@{results} = [ 1707 | 一对父子的聊天记录 儿子：“爸，我女朋友怀孕了，我想和她结婚。” 爸爸“哪个？” 儿子：“还有那个！上次回家不是给你们看了吗？” “啊，有印象，那么漂亮怎么看上你了。” 儿子：“她说我老实可靠。你和我妈商量下，要是可以我过年带回去，商量啥时侯结婚的事。” “你确定她怀的是你的？可别喜当爹啊。” 儿子：“。。。，我心里有数的爸。” “别走爸的老路啊。” 儿子：“放心吧。” 儿子：“...</msg>
<status status="PASS" starttime="20181118 11:18:16.619" endtime="20181118 11:18:16.619"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:18:16.619" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1707; </msg>
<status status="PASS" starttime="20181118 11:18:16.619" endtime="20181118 11:18:16.911"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:18:16.921" level="INFO">1707</msg>
<msg timestamp="20181118 11:18:16.921" level="INFO">一对父子的聊天记录 儿子：“爸，我女朋友怀孕了，我想和她结婚。” 爸爸“哪个？” 儿子：“还有那个！上次回家不是给你们看了吗？” “啊，有印象，那么漂亮怎么看上你了。” 儿子：“她说我老实可靠。你和我妈商量下，要是可以我过年带回去，商量啥时侯结婚的事。” “你确定她怀的是你的？可别喜当爹啊。” 儿子：“。。。，我心里有数的爸。” “别走爸的老路啊。” 儿子：“放心吧。” 儿子：“啥？？？爸你刚说啥？？！！！”</msg>
<status status="PASS" starttime="20181118 11:18:16.921" endtime="20181118 11:18:16.921"></status>
</kw>
<msg timestamp="20181118 11:18:16.921" level="INFO">${aJoke} = 一对父子的聊天记录 儿子：“爸，我女朋友怀孕了，我想和她结婚。” 爸爸“哪个？” 儿子：“还有那个！上次回家不是给你们看了吗？” “啊，有印象，那么漂亮怎么看上你了。” 儿子：“她说我老实可靠。你和我妈商量下，要是可以我过年带回去，商量啥时侯结婚的事。” “你确定她怀的是你的？可别喜当爹啊。” 儿子：“。。。，我心里有数的爸。” “别走爸的老路啊。” 儿子：“放心吧。” 儿子：“啥？？？爸你刚说啥...</msg>
<status status="PASS" starttime="20181118 11:18:16.569" endtime="20181118 11:18:16.921"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:18:16.921" level="INFO">Typing text '一对父子的聊天记录 儿子：“爸，我女朋友怀孕了，我想和她结婚。” 爸爸“哪个？” 儿子：“还有那个！上次回家不是给你们看了吗？” “啊，有印象，那么漂亮怎么看上你了。” 儿子：“她说我老实可靠。你和我妈商量下，要是可以我过年带回去，商量啥时侯结婚的事。” “你确定她怀的是你的？可别喜当爹啊。” 儿子：“。。。，我心里有数的爸。” “别走爸的老路啊。” 儿子：“放心吧。” 儿子：“啥？？？爸你刚说啥？？！！！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:18:16.921" endtime="20181118 11:18:31.325"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:18:31.325" endtime="20181118 11:18:35.336"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:18:35.336" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:18:35.336" endtime="20181118 11:18:39.525"></status>
</kw>
<status status="PASS" starttime="20181118 11:18:16.569" endtime="20181118 11:18:39.525"></status>
</kw>
<kw name="${index} = 14" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:18:39.525" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:18:39.525" endtime="20181118 11:18:39.525"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:18:39.535" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:18:39.525" endtime="20181118 11:18:39.555"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:18:39.555" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:18:39.565" level="INFO">@{queryResults} = [ (1708, '小王到海南出差，夜里无聊给老婆打电 话：“老婆，我出来快一周了，憋坏了， 我今晚能找个小姐不？”老婆：“可以啊。 ”小王在那边高兴的说：“谢谢老婆。还是 老婆最善解人意。”老婆：“不用谢，你今 晚怎么花出去的钱，我改天就给你怎么 挣回来！”') ]</msg>
<status status="PASS" starttime="20181118 11:18:39.555" endtime="20181118 11:18:39.565"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:18:39.565" level="INFO">@{results} = [ 1708 | 小王到海南出差，夜里无聊给老婆打电 话：“老婆，我出来快一周了，憋坏了， 我今晚能找个小姐不？”老婆：“可以啊。 ”小王在那边高兴的说：“谢谢老婆。还是 老婆最善解人意。”老婆：“不用谢，你今 晚怎么花出去的钱，我改天就给你怎么 挣回来！” ]</msg>
<status status="PASS" starttime="20181118 11:18:39.565" endtime="20181118 11:18:39.565"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:18:39.565" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1708; </msg>
<status status="PASS" starttime="20181118 11:18:39.565" endtime="20181118 11:18:39.865"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:18:39.865" level="INFO">1708</msg>
<msg timestamp="20181118 11:18:39.865" level="INFO">小王到海南出差，夜里无聊给老婆打电 话：“老婆，我出来快一周了，憋坏了， 我今晚能找个小姐不？”老婆：“可以啊。 ”小王在那边高兴的说：“谢谢老婆。还是 老婆最善解人意。”老婆：“不用谢，你今 晚怎么花出去的钱，我改天就给你怎么 挣回来！”</msg>
<status status="PASS" starttime="20181118 11:18:39.865" endtime="20181118 11:18:39.875"></status>
</kw>
<msg timestamp="20181118 11:18:39.875" level="INFO">${aJoke} = 小王到海南出差，夜里无聊给老婆打电 话：“老婆，我出来快一周了，憋坏了， 我今晚能找个小姐不？”老婆：“可以啊。 ”小王在那边高兴的说：“谢谢老婆。还是 老婆最善解人意。”老婆：“不用谢，你今 晚怎么花出去的钱，我改天就给你怎么 挣回来！”</msg>
<status status="PASS" starttime="20181118 11:18:39.525" endtime="20181118 11:18:39.875"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:18:39.875" level="INFO">Typing text '小王到海南出差，夜里无聊给老婆打电 话：“老婆，我出来快一周了，憋坏了， 我今晚能找个小姐不？”老婆：“可以啊。 ”小王在那边高兴的说：“谢谢老婆。还是 老婆最善解人意。”老婆：“不用谢，你今 晚怎么花出去的钱，我改天就给你怎么 挣回来！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:18:39.875" endtime="20181118 11:18:52.072"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:18:52.072" endtime="20181118 11:18:55.878"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:18:55.888" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:18:55.888" endtime="20181118 11:18:59.780"></status>
</kw>
<status status="PASS" starttime="20181118 11:18:39.525" endtime="20181118 11:18:59.780"></status>
</kw>
<kw name="${index} = 15" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:18:59.790" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:18:59.790" endtime="20181118 11:18:59.790"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:18:59.790" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:18:59.790" endtime="20181118 11:18:59.850"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:18:59.850" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:18:59.870" level="INFO">@{queryResults} = [ (1709, '某男和女朋友回家见家长。女生对男生介绍爸爸的时候说:这是偶爸。男生愣了一下然后特热情的喊了一句:欧巴~然后偷偷的对女朋友说:你哥怎么这么老……') ]</msg>
<status status="PASS" starttime="20181118 11:18:59.850" endtime="20181118 11:18:59.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:18:59.870" level="INFO">@{results} = [ 1709 | 某男和女朋友回家见家长。女生对男生介绍爸爸的时候说:这是偶爸。男生愣了一下然后特热情的喊了一句:欧巴~然后偷偷的对女朋友说:你哥怎么这么老…… ]</msg>
<status status="PASS" starttime="20181118 11:18:59.870" endtime="20181118 11:18:59.870"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:18:59.870" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1709; </msg>
<status status="PASS" starttime="20181118 11:18:59.870" endtime="20181118 11:18:59.890"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:18:59.890" level="INFO">1709</msg>
<msg timestamp="20181118 11:18:59.890" level="INFO">某男和女朋友回家见家长。女生对男生介绍爸爸的时候说:这是偶爸。男生愣了一下然后特热情的喊了一句:欧巴~然后偷偷的对女朋友说:你哥怎么这么老……</msg>
<status status="PASS" starttime="20181118 11:18:59.890" endtime="20181118 11:18:59.890"></status>
</kw>
<msg timestamp="20181118 11:18:59.890" level="INFO">${aJoke} = 某男和女朋友回家见家长。女生对男生介绍爸爸的时候说:这是偶爸。男生愣了一下然后特热情的喊了一句:欧巴~然后偷偷的对女朋友说:你哥怎么这么老……</msg>
<status status="PASS" starttime="20181118 11:18:59.790" endtime="20181118 11:18:59.890"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:18:59.900" level="INFO">Typing text '某男和女朋友回家见家长。女生对男生介绍爸爸的时候说:这是偶爸。男生愣了一下然后特热情的喊了一句:欧巴~然后偷偷的对女朋友说:你哥怎么这么老……' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:18:59.890" endtime="20181118 11:19:11.012"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:19:11.022" endtime="20181118 11:19:15.333"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:19:15.343" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:19:15.333" endtime="20181118 11:19:19.202"></status>
</kw>
<status status="PASS" starttime="20181118 11:18:59.780" endtime="20181118 11:19:19.202"></status>
</kw>
<kw name="${index} = 16" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:19:19.202" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:19:19.202" endtime="20181118 11:19:19.202"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:19:19.202" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:19:19.202" endtime="20181118 11:19:19.272"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:19:19.272" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:19:19.302" level="INFO">@{queryResults} = [ (1710, '昨天晚上上晚自习的时候，班主任先在教室后面坐着管纪律，。然后不知道怎么的爬到桌子上睡着了，然后英语老师进来教课了，讲着讲着发现有人睡觉，就拿了本书狠狠的一下把班主任的脑袋砸了个包，然后就没有然后了。') ]</msg>
<status status="PASS" starttime="20181118 11:19:19.272" endtime="20181118 11:19:19.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:19:19.302" level="INFO">@{results} = [ 1710 | 昨天晚上上晚自习的时候，班主任先在教室后面坐着管纪律，。然后不知道怎么的爬到桌子上睡着了，然后英语老师进来教课了，讲着讲着发现有人睡觉，就拿了本书狠狠的一下把班主任的脑袋砸了个包，然后就没有然后了。 ]</msg>
<status status="PASS" starttime="20181118 11:19:19.302" endtime="20181118 11:19:19.302"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:19:19.302" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1710; </msg>
<status status="PASS" starttime="20181118 11:19:19.302" endtime="20181118 11:19:19.612"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:19:19.612" level="INFO">1710</msg>
<msg timestamp="20181118 11:19:19.612" level="INFO">昨天晚上上晚自习的时候，班主任先在教室后面坐着管纪律，。然后不知道怎么的爬到桌子上睡着了，然后英语老师进来教课了，讲着讲着发现有人睡觉，就拿了本书狠狠的一下把班主任的脑袋砸了个包，然后就没有然后了。</msg>
<status status="PASS" starttime="20181118 11:19:19.612" endtime="20181118 11:19:19.612"></status>
</kw>
<msg timestamp="20181118 11:19:19.622" level="INFO">${aJoke} = 昨天晚上上晚自习的时候，班主任先在教室后面坐着管纪律，。然后不知道怎么的爬到桌子上睡着了，然后英语老师进来教课了，讲着讲着发现有人睡觉，就拿了本书狠狠的一下把班主任的脑袋砸了个包，然后就没有然后了。</msg>
<status status="PASS" starttime="20181118 11:19:19.202" endtime="20181118 11:19:19.622"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:19:19.622" level="INFO">Typing text '昨天晚上上晚自习的时候，班主任先在教室后面坐着管纪律，。然后不知道怎么的爬到桌子上睡着了，然后英语老师进来教课了，讲着讲着发现有人睡觉，就拿了本书狠狠的一下把班主任的脑袋砸了个包，然后就没有然后了。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:19:19.622" endtime="20181118 11:19:31.950"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:19:31.950" endtime="20181118 11:19:37.059"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:19:37.069" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:19:37.059" endtime="20181118 11:19:43.102"></status>
</kw>
<status status="PASS" starttime="20181118 11:19:19.202" endtime="20181118 11:19:43.102"></status>
</kw>
<kw name="${index} = 17" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:19:43.112" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:19:43.102" endtime="20181118 11:19:43.112"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:19:43.112" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:19:43.112" endtime="20181118 11:19:43.172"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:19:43.172" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:19:43.202" level="INFO">@{queryResults} = [ (1711, '老少离家老大归。出门十几年，今天他开着大奔回来了! 老大爷见了他：“你是那个大侄子吧！” “是呀！出门久了，有点不认识了吧！” “那是。出门的时候还是个毛头小子，现在。。。” “现在是不是成熟多了！” 看了看他已经秃了的头顶，大爷道： “不是，现在毛都没有了！”') ]</msg>
<status status="PASS" starttime="20181118 11:19:43.172" endtime="20181118 11:19:43.202"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:19:43.202" level="INFO">@{results} = [ 1711 | 老少离家老大归。出门十几年，今天他开着大奔回来了! 老大爷见了他：“你是那个大侄子吧！” “是呀！出门久了，有点不认识了吧！” “那是。出门的时候还是个毛头小子，现在。。。” “现在是不是成熟多了！” 看了看他已经秃了的头顶，大爷道： “不是，现在毛都没有了！” ]</msg>
<status status="PASS" starttime="20181118 11:19:43.202" endtime="20181118 11:19:43.202"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:19:43.202" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1711; </msg>
<status status="PASS" starttime="20181118 11:19:43.202" endtime="20181118 11:19:43.232"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:19:43.232" level="INFO">1711</msg>
<msg timestamp="20181118 11:19:43.232" level="INFO">老少离家老大归。出门十几年，今天他开着大奔回来了! 老大爷见了他：“你是那个大侄子吧！” “是呀！出门久了，有点不认识了吧！” “那是。出门的时候还是个毛头小子，现在。。。” “现在是不是成熟多了！” 看了看他已经秃了的头顶，大爷道： “不是，现在毛都没有了！”</msg>
<status status="PASS" starttime="20181118 11:19:43.232" endtime="20181118 11:19:43.232"></status>
</kw>
<msg timestamp="20181118 11:19:43.232" level="INFO">${aJoke} = 老少离家老大归。出门十几年，今天他开着大奔回来了! 老大爷见了他：“你是那个大侄子吧！” “是呀！出门久了，有点不认识了吧！” “那是。出门的时候还是个毛头小子，现在。。。” “现在是不是成熟多了！” 看了看他已经秃了的头顶，大爷道： “不是，现在毛都没有了！”</msg>
<status status="PASS" starttime="20181118 11:19:43.102" endtime="20181118 11:19:43.232"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:19:43.232" level="INFO">Typing text '老少离家老大归。出门十几年，今天他开着大奔回来了! 老大爷见了他：“你是那个大侄子吧！” “是呀！出门久了，有点不认识了吧！” “那是。出门的时候还是个毛头小子，现在。。。” “现在是不是成熟多了！” 看了看他已经秃了的头顶，大爷道： “不是，现在毛都没有了！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:19:43.232" endtime="20181118 11:19:55.921"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:19:55.923" endtime="20181118 11:20:00.976"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:20:00.976" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:20:00.976" endtime="20181118 11:20:05.729"></status>
</kw>
<status status="PASS" starttime="20181118 11:19:43.102" endtime="20181118 11:20:05.729"></status>
</kw>
<kw name="${index} = 18" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:20:05.729" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:20:05.729" endtime="20181118 11:20:05.729"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:20:05.739" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:20:05.739" endtime="20181118 11:20:05.759"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:20:05.769" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:20:05.779" level="INFO">@{queryResults} = [ (1712, '好友看着我的皮肤说，你该熬点汤喝，你看你的脸，多么干燥。嗯，回家我就跟老公说，买猪大骨。老公问，干嘛？我说，我要熬汤补充骨胶蛋白，皮肤才能有弹性。老公默默的看了我几秒钟，幽幽的说，沙子，浇再多的水，也变不成泥。') ]</msg>
<status status="PASS" starttime="20181118 11:20:05.759" endtime="20181118 11:20:05.779"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:20:05.779" level="INFO">@{results} = [ 1712 | 好友看着我的皮肤说，你该熬点汤喝，你看你的脸，多么干燥。嗯，回家我就跟老公说，买猪大骨。老公问，干嘛？我说，我要熬汤补充骨胶蛋白，皮肤才能有弹性。老公默默的看了我几秒钟，幽幽的说，沙子，浇再多的水，也变不成泥。 ]</msg>
<status status="PASS" starttime="20181118 11:20:05.779" endtime="20181118 11:20:05.779"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:20:05.779" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1712; </msg>
<status status="PASS" starttime="20181118 11:20:05.779" endtime="20181118 11:20:06.082"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:20:06.082" level="INFO">1712</msg>
<msg timestamp="20181118 11:20:06.082" level="INFO">好友看着我的皮肤说，你该熬点汤喝，你看你的脸，多么干燥。嗯，回家我就跟老公说，买猪大骨。老公问，干嘛？我说，我要熬汤补充骨胶蛋白，皮肤才能有弹性。老公默默的看了我几秒钟，幽幽的说，沙子，浇再多的水，也变不成泥。</msg>
<status status="PASS" starttime="20181118 11:20:06.082" endtime="20181118 11:20:06.082"></status>
</kw>
<msg timestamp="20181118 11:20:06.082" level="INFO">${aJoke} = 好友看着我的皮肤说，你该熬点汤喝，你看你的脸，多么干燥。嗯，回家我就跟老公说，买猪大骨。老公问，干嘛？我说，我要熬汤补充骨胶蛋白，皮肤才能有弹性。老公默默的看了我几秒钟，幽幽的说，沙子，浇再多的水，也变不成泥。</msg>
<status status="PASS" starttime="20181118 11:20:05.729" endtime="20181118 11:20:06.092"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:20:06.092" level="INFO">Typing text '好友看着我的皮肤说，你该熬点汤喝，你看你的脸，多么干燥。嗯，回家我就跟老公说，买猪大骨。老公问，干嘛？我说，我要熬汤补充骨胶蛋白，皮肤才能有弹性。老公默默的看了我几秒钟，幽幽的说，沙子，浇再多的水，也变不成泥。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:20:06.092" endtime="20181118 11:20:18.805"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:20:18.805" endtime="20181118 11:20:23.017"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:20:23.017" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:20:23.017" endtime="20181118 11:20:25.939"></status>
</kw>
<status status="PASS" starttime="20181118 11:20:05.729" endtime="20181118 11:20:25.939"></status>
</kw>
<kw name="${index} = 19" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:20:25.949" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:20:25.949" endtime="20181118 11:20:25.949"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:20:25.949" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:20:25.949" endtime="20181118 11:20:25.969"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:20:25.979" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:20:26.009" level="INFO">@{queryResults} = [ (1713, '每次看到那些初中生高中生谈恋爱，我都会劝导他们：“孩子，人生路还很长，你们这个年龄正是读书的时候，不要学那些不良风气，等你们和叔叔一样大的时候再谈也不迟啊。听叔叔的话，把她们先让给我们，好吗？”') ]</msg>
<status status="PASS" starttime="20181118 11:20:25.979" endtime="20181118 11:20:26.009"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:20:26.009" level="INFO">@{results} = [ 1713 | 每次看到那些初中生高中生谈恋爱，我都会劝导他们：“孩子，人生路还很长，你们这个年龄正是读书的时候，不要学那些不良风气，等你们和叔叔一样大的时候再谈也不迟啊。听叔叔的话，把她们先让给我们，好吗？” ]</msg>
<status status="PASS" starttime="20181118 11:20:26.009" endtime="20181118 11:20:26.009"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:20:26.009" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1713; </msg>
<status status="PASS" starttime="20181118 11:20:26.009" endtime="20181118 11:20:26.049"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:20:26.049" level="INFO">1713</msg>
<msg timestamp="20181118 11:20:26.049" level="INFO">每次看到那些初中生高中生谈恋爱，我都会劝导他们：“孩子，人生路还很长，你们这个年龄正是读书的时候，不要学那些不良风气，等你们和叔叔一样大的时候再谈也不迟啊。听叔叔的话，把她们先让给我们，好吗？”</msg>
<status status="PASS" starttime="20181118 11:20:26.049" endtime="20181118 11:20:26.049"></status>
</kw>
<msg timestamp="20181118 11:20:26.059" level="INFO">${aJoke} = 每次看到那些初中生高中生谈恋爱，我都会劝导他们：“孩子，人生路还很长，你们这个年龄正是读书的时候，不要学那些不良风气，等你们和叔叔一样大的时候再谈也不迟啊。听叔叔的话，把她们先让给我们，好吗？”</msg>
<status status="PASS" starttime="20181118 11:20:25.949" endtime="20181118 11:20:26.059"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:20:26.059" level="INFO">Typing text '每次看到那些初中生高中生谈恋爱，我都会劝导他们：“孩子，人生路还很长，你们这个年龄正是读书的时候，不要学那些不良风气，等你们和叔叔一样大的时候再谈也不迟啊。听叔叔的话，把她们先让给我们，好吗？”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:20:26.059" endtime="20181118 11:20:38.310"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:20:38.310" endtime="20181118 11:20:42.711"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:20:42.721" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:20:42.711" endtime="20181118 11:20:46.661"></status>
</kw>
<status status="PASS" starttime="20181118 11:20:25.939" endtime="20181118 11:20:46.661"></status>
</kw>
<kw name="${index} = 20" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:20:46.671" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:20:46.671" endtime="20181118 11:20:46.671"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:20:46.671" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:20:46.671" endtime="20181118 11:20:46.701"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:20:46.701" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:20:46.721" level="INFO">@{queryResults} = [ (1714, '去一个仰慕已久的单身女同事家，她家门虚掩。我刚推开门，竟然看见她在沙发上用自慰器自慰，我俩相视五秒。突然自慰器没了动静，她娇羞的说“那个…没电了，你能，过来帮我吗”。我二话不说，激动的点点头，连忙跑到楼下给她买了电池。大家说，我这么献殷勤，有机会吗?') ]</msg>
<status status="PASS" starttime="20181118 11:20:46.701" endtime="20181118 11:20:46.721"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:20:46.731" level="INFO">@{results} = [ 1714 | 去一个仰慕已久的单身女同事家，她家门虚掩。我刚推开门，竟然看见她在沙发上用自慰器自慰，我俩相视五秒。突然自慰器没了动静，她娇羞的说“那个…没电了，你能，过来帮我吗”。我二话不说，激动的点点头，连忙跑到楼下给她买了电池。大家说，我这么献殷勤，有机会吗? ]</msg>
<status status="PASS" starttime="20181118 11:20:46.721" endtime="20181118 11:20:46.731"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:20:46.731" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1714; </msg>
<status status="PASS" starttime="20181118 11:20:46.731" endtime="20181118 11:20:47.031"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:20:47.031" level="INFO">1714</msg>
<msg timestamp="20181118 11:20:47.031" level="INFO">去一个仰慕已久的单身女同事家，她家门虚掩。我刚推开门，竟然看见她在沙发上用自慰器自慰，我俩相视五秒。突然自慰器没了动静，她娇羞的说“那个…没电了，你能，过来帮我吗”。我二话不说，激动的点点头，连忙跑到楼下给她买了电池。大家说，我这么献殷勤，有机会吗?</msg>
<status status="PASS" starttime="20181118 11:20:47.031" endtime="20181118 11:20:47.031"></status>
</kw>
<msg timestamp="20181118 11:20:47.041" level="INFO">${aJoke} = 去一个仰慕已久的单身女同事家，她家门虚掩。我刚推开门，竟然看见她在沙发上用自慰器自慰，我俩相视五秒。突然自慰器没了动静，她娇羞的说“那个…没电了，你能，过来帮我吗”。我二话不说，激动的点点头，连忙跑到楼下给她买了电池。大家说，我这么献殷勤，有机会吗?</msg>
<status status="PASS" starttime="20181118 11:20:46.671" endtime="20181118 11:20:47.041"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:20:47.041" level="INFO">Typing text '去一个仰慕已久的单身女同事家，她家门虚掩。我刚推开门，竟然看见她在沙发上用自慰器自慰，我俩相视五秒。突然自慰器没了动静，她娇羞的说“那个…没电了，你能，过来帮我吗”。我二话不说，激动的点点头，连忙跑到楼下给她买了电池。大家说，我这么献殷勤，有机会吗?' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:20:47.041" endtime="20181118 11:21:00.225"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:21:00.225" endtime="20181118 11:21:06.041"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:21:06.041" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:21:06.041" endtime="20181118 11:21:10.088"></status>
</kw>
<status status="PASS" starttime="20181118 11:20:46.661" endtime="20181118 11:21:10.088"></status>
</kw>
<kw name="${index} = 21" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:21:10.088" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:21:10.088" endtime="20181118 11:21:10.088"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:21:10.088" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:21:10.088" endtime="20181118 11:21:10.118"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:21:10.118" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:21:10.148" level="INFO">@{queryResults} = [ (1715, '早上在馄饨店吃早点，看一妹子面前放了一碗豆浆三个茶叶蛋，手拿两个烧饼…… 只见那妹子嘴里塞着茶叶蛋一声巨吼：“老板我的大碗馄饨咋还不上?') ]</msg>
<status status="PASS" starttime="20181118 11:21:10.118" endtime="20181118 11:21:10.148"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:21:10.148" level="INFO">@{results} = [ 1715 | 早上在馄饨店吃早点，看一妹子面前放了一碗豆浆三个茶叶蛋，手拿两个烧饼…… 只见那妹子嘴里塞着茶叶蛋一声巨吼：“老板我的大碗馄饨咋还不上? ]</msg>
<status status="PASS" starttime="20181118 11:21:10.148" endtime="20181118 11:21:10.148"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:21:10.148" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1715; </msg>
<status status="PASS" starttime="20181118 11:21:10.148" endtime="20181118 11:21:10.478"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:21:10.478" level="INFO">1715</msg>
<msg timestamp="20181118 11:21:10.478" level="INFO">早上在馄饨店吃早点，看一妹子面前放了一碗豆浆三个茶叶蛋，手拿两个烧饼…… 只见那妹子嘴里塞着茶叶蛋一声巨吼：“老板我的大碗馄饨咋还不上?</msg>
<status status="PASS" starttime="20181118 11:21:10.478" endtime="20181118 11:21:10.478"></status>
</kw>
<msg timestamp="20181118 11:21:10.478" level="INFO">${aJoke} = 早上在馄饨店吃早点，看一妹子面前放了一碗豆浆三个茶叶蛋，手拿两个烧饼…… 只见那妹子嘴里塞着茶叶蛋一声巨吼：“老板我的大碗馄饨咋还不上?</msg>
<status status="PASS" starttime="20181118 11:21:10.088" endtime="20181118 11:21:10.478"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:21:10.488" level="INFO">Typing text '早上在馄饨店吃早点，看一妹子面前放了一碗豆浆三个茶叶蛋，手拿两个烧饼…… 只见那妹子嘴里塞着茶叶蛋一声巨吼：“老板我的大碗馄饨咋还不上?' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:21:10.478" endtime="20181118 11:21:22.052"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:21:22.062" endtime="20181118 11:21:26.271"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:21:26.271" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:21:26.271" endtime="20181118 11:21:29.738"></status>
</kw>
<status status="PASS" starttime="20181118 11:21:10.088" endtime="20181118 11:21:29.738"></status>
</kw>
<kw name="${index} = 22" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:21:29.738" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:21:29.738" endtime="20181118 11:21:29.748"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:21:29.748" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:21:29.748" endtime="20181118 11:21:29.768"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:21:29.778" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:21:29.798" level="INFO">@{queryResults} = [ (1716, '讲课时女老师裤子拉链开了,一女生站起来提醒:老师,你门没关!老师一摆手:不管它 一会儿教导主任要来参观！') ]</msg>
<status status="PASS" starttime="20181118 11:21:29.778" endtime="20181118 11:21:29.798"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:21:29.798" level="INFO">@{results} = [ 1716 | 讲课时女老师裤子拉链开了,一女生站起来提醒:老师,你门没关!老师一摆手:不管它 一会儿教导主任要来参观！ ]</msg>
<status status="PASS" starttime="20181118 11:21:29.798" endtime="20181118 11:21:29.798"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:21:29.798" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1716; </msg>
<status status="PASS" starttime="20181118 11:21:29.798" endtime="20181118 11:21:29.818"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:21:29.828" level="INFO">1716</msg>
<msg timestamp="20181118 11:21:29.828" level="INFO">讲课时女老师裤子拉链开了,一女生站起来提醒:老师,你门没关!老师一摆手:不管它 一会儿教导主任要来参观！</msg>
<status status="PASS" starttime="20181118 11:21:29.818" endtime="20181118 11:21:29.828"></status>
</kw>
<msg timestamp="20181118 11:21:29.828" level="INFO">${aJoke} = 讲课时女老师裤子拉链开了,一女生站起来提醒:老师,你门没关!老师一摆手:不管它 一会儿教导主任要来参观！</msg>
<status status="PASS" starttime="20181118 11:21:29.738" endtime="20181118 11:21:29.828"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:21:29.828" level="INFO">Typing text '讲课时女老师裤子拉链开了,一女生站起来提醒:老师,你门没关!老师一摆手:不管它 一会儿教导主任要来参观！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:21:29.828" endtime="20181118 11:21:41.263"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:21:41.273" endtime="20181118 11:21:46.082"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:21:46.082" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:21:46.082" endtime="20181118 11:21:51.454"></status>
</kw>
<status status="PASS" starttime="20181118 11:21:29.738" endtime="20181118 11:21:51.454"></status>
</kw>
<kw name="${index} = 23" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:21:51.454" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:21:51.454" endtime="20181118 11:21:51.464"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:21:51.464" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:21:51.464" endtime="20181118 11:21:51.534"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:21:51.534" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:21:51.544" level="INFO">@{queryResults} = [ (1717, '年底了，最近楼道抢劫的多，要注意安全！特别女孩子。现在社会人们都比较冷漠，你要半夜在楼道里遇到坏人，千万不要喊“救命啊！抢劫啊！”不一定有人出来帮你，你就喊 “着火了！着火了！”整楼的人都能出来……切记！切记！ 大家帮转 ！！') ]</msg>
<status status="PASS" starttime="20181118 11:21:51.534" endtime="20181118 11:21:51.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:21:51.554" level="INFO">@{results} = [ 1717 | 年底了，最近楼道抢劫的多，要注意安全！特别女孩子。现在社会人们都比较冷漠，你要半夜在楼道里遇到坏人，千万不要喊“救命啊！抢劫啊！”不一定有人出来帮你，你就喊 “着火了！着火了！”整楼的人都能出来……切记！切记！ 大家帮转 ！！ ]</msg>
<status status="PASS" starttime="20181118 11:21:51.554" endtime="20181118 11:21:51.554"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:21:51.554" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1717; </msg>
<status status="PASS" starttime="20181118 11:21:51.554" endtime="20181118 11:21:51.854"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:21:51.854" level="INFO">1717</msg>
<msg timestamp="20181118 11:21:51.854" level="INFO">年底了，最近楼道抢劫的多，要注意安全！特别女孩子。现在社会人们都比较冷漠，你要半夜在楼道里遇到坏人，千万不要喊“救命啊！抢劫啊！”不一定有人出来帮你，你就喊 “着火了！着火了！”整楼的人都能出来……切记！切记！ 大家帮转 ！！</msg>
<status status="PASS" starttime="20181118 11:21:51.854" endtime="20181118 11:21:51.854"></status>
</kw>
<msg timestamp="20181118 11:21:51.854" level="INFO">${aJoke} = 年底了，最近楼道抢劫的多，要注意安全！特别女孩子。现在社会人们都比较冷漠，你要半夜在楼道里遇到坏人，千万不要喊“救命啊！抢劫啊！”不一定有人出来帮你，你就喊 “着火了！着火了！”整楼的人都能出来……切记！切记！ 大家帮转 ！！</msg>
<status status="PASS" starttime="20181118 11:21:51.454" endtime="20181118 11:21:51.854"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:21:51.864" level="INFO">Typing text '年底了，最近楼道抢劫的多，要注意安全！特别女孩子。现在社会人们都比较冷漠，你要半夜在楼道里遇到坏人，千万不要喊“救命啊！抢劫啊！”不一定有人出来帮你，你就喊 “着火了！着火了！”整楼的人都能出来……切记！切记！ 大家帮转 ！！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:21:51.864" endtime="20181118 11:22:05.699"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:22:05.699" endtime="20181118 11:22:11.601"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:22:11.601" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:22:11.601" endtime="20181118 11:22:16.711"></status>
</kw>
<status status="PASS" starttime="20181118 11:21:51.454" endtime="20181118 11:22:16.711"></status>
</kw>
<kw name="${index} = 24" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:22:16.711" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:22:16.711" endtime="20181118 11:22:16.711"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:22:16.711" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:22:16.711" endtime="20181118 11:22:16.771"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:22:16.771" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:22:16.811" level="INFO">@{queryResults} = [ (1718, '一男子，生性害羞。向女神表白，用折的爱心写上：5201314（我噯祢一生一世）。回过来一张纸条后写着（520+1314）×10倍，此男子欣喜若狂。同事冷冷地说道：“呆子，计算结果是18340（一巴扇死你）！！！”') ]</msg>
<status status="PASS" starttime="20181118 11:22:16.771" endtime="20181118 11:22:16.811"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:22:16.811" level="INFO">@{results} = [ 1718 | 一男子，生性害羞。向女神表白，用折的爱心写上：5201314（我噯祢一生一世）。回过来一张纸条后写着（520+1314）×10倍，此男子欣喜若狂。同事冷冷地说道：“呆子，计算结果是18340（一巴扇死你）！！！” ]</msg>
<status status="PASS" starttime="20181118 11:22:16.811" endtime="20181118 11:22:16.811"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:22:16.811" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1718; </msg>
<status status="PASS" starttime="20181118 11:22:16.811" endtime="20181118 11:22:17.121"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:22:17.121" level="INFO">1718</msg>
<msg timestamp="20181118 11:22:17.121" level="INFO">一男子，生性害羞。向女神表白，用折的爱心写上：5201314（我噯祢一生一世）。回过来一张纸条后写着（520+1314）×10倍，此男子欣喜若狂。同事冷冷地说道：“呆子，计算结果是18340（一巴扇死你）！！！”</msg>
<status status="PASS" starttime="20181118 11:22:17.121" endtime="20181118 11:22:17.121"></status>
</kw>
<msg timestamp="20181118 11:22:17.121" level="INFO">${aJoke} = 一男子，生性害羞。向女神表白，用折的爱心写上：5201314（我噯祢一生一世）。回过来一张纸条后写着（520+1314）×10倍，此男子欣喜若狂。同事冷冷地说道：“呆子，计算结果是18340（一巴扇死你）！！！”</msg>
<status status="PASS" starttime="20181118 11:22:16.711" endtime="20181118 11:22:17.121"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:22:17.121" level="INFO">Typing text '一男子，生性害羞。向女神表白，用折的爱心写上：5201314（我噯祢一生一世）。回过来一张纸条后写着（520+1314）×10倍，此男子欣喜若狂。同事冷冷地说道：“呆子，计算结果是18340（一巴扇死你）！！！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:22:17.121" endtime="20181118 11:22:29.975"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:22:29.975" endtime="20181118 11:22:34.251"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:22:34.261" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:22:34.251" endtime="20181118 11:22:39.044"></status>
</kw>
<status status="PASS" starttime="20181118 11:22:16.711" endtime="20181118 11:22:39.044"></status>
</kw>
<kw name="${index} = 25" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:22:39.054" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:22:39.054" endtime="20181118 11:22:39.054"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:22:39.054" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:22:39.054" endtime="20181118 11:22:39.074"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:22:39.074" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:22:39.084" level="INFO">@{queryResults} = [ (1719, '45.一日上完体育课，肚子饿的不行，跑到餐厅吃饭，人多，太拥挤，也乱，我就对打饭的大婶喊：我的饭速度点啊！，大婶就对里面做饭的人喊：里屋的快点！要饭的等急了```') ]</msg>
<status status="PASS" starttime="20181118 11:22:39.074" endtime="20181118 11:22:39.084"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:22:39.084" level="INFO">@{results} = [ 1719 | 45.一日上完体育课，肚子饿的不行，跑到餐厅吃饭，人多，太拥挤，也乱，我就对打饭的大婶喊：我的饭速度点啊！，大婶就对里面做饭的人喊：里屋的快点！要饭的等急了``` ]</msg>
<status status="PASS" starttime="20181118 11:22:39.084" endtime="20181118 11:22:39.084"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:22:39.084" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1719; </msg>
<status status="PASS" starttime="20181118 11:22:39.084" endtime="20181118 11:22:39.374"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:22:39.374" level="INFO">1719</msg>
<msg timestamp="20181118 11:22:39.374" level="INFO">45.一日上完体育课，肚子饿的不行，跑到餐厅吃饭，人多，太拥挤，也乱，我就对打饭的大婶喊：我的饭速度点啊！，大婶就对里面做饭的人喊：里屋的快点！要饭的等急了```</msg>
<status status="PASS" starttime="20181118 11:22:39.374" endtime="20181118 11:22:39.374"></status>
</kw>
<msg timestamp="20181118 11:22:39.384" level="INFO">${aJoke} = 45.一日上完体育课，肚子饿的不行，跑到餐厅吃饭，人多，太拥挤，也乱，我就对打饭的大婶喊：我的饭速度点啊！，大婶就对里面做饭的人喊：里屋的快点！要饭的等急了```</msg>
<status status="PASS" starttime="20181118 11:22:39.044" endtime="20181118 11:22:39.384"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:22:39.384" level="INFO">Typing text '45.一日上完体育课，肚子饿的不行，跑到餐厅吃饭，人多，太拥挤，也乱，我就对打饭的大婶喊：我的饭速度点啊！，大婶就对里面做饭的人喊：里屋的快点！要饭的等急了```' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:22:39.384" endtime="20181118 11:22:51.654"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:22:51.654" endtime="20181118 11:22:56.334"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:22:56.334" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:22:56.334" endtime="20181118 11:23:01.848"></status>
</kw>
<status status="PASS" starttime="20181118 11:22:39.044" endtime="20181118 11:23:01.858"></status>
</kw>
<kw name="${index} = 26" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:23:01.858" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:23:01.858" endtime="20181118 11:23:01.858"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:23:01.858" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:23:01.858" endtime="20181118 11:23:01.898"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:23:01.898" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:23:01.938" level="INFO">@{queryResults} = [ (1720, '室友和他男朋友有张银行卡，各自输3个数作为密码。昨晚，室友想取600，叫上男朋友去取钱。输了3次，密码都是错误，卡被锁了。室友说，明明两个人的密码都对的吖，怎么就提示错误了。我们异口同声地说：他不想你用钱') ]</msg>
<status status="PASS" starttime="20181118 11:23:01.898" endtime="20181118 11:23:01.938"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:23:01.938" level="INFO">@{results} = [ 1720 | 室友和他男朋友有张银行卡，各自输3个数作为密码。昨晚，室友想取600，叫上男朋友去取钱。输了3次，密码都是错误，卡被锁了。室友说，明明两个人的密码都对的吖，怎么就提示错误了。我们异口同声地说：他不想你用钱 ]</msg>
<status status="PASS" starttime="20181118 11:23:01.938" endtime="20181118 11:23:01.938"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:23:01.938" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1720; </msg>
<status status="PASS" starttime="20181118 11:23:01.938" endtime="20181118 11:23:02.128"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:23:02.128" level="INFO">1720</msg>
<msg timestamp="20181118 11:23:02.128" level="INFO">室友和他男朋友有张银行卡，各自输3个数作为密码。昨晚，室友想取600，叫上男朋友去取钱。输了3次，密码都是错误，卡被锁了。室友说，明明两个人的密码都对的吖，怎么就提示错误了。我们异口同声地说：他不想你用钱</msg>
<status status="PASS" starttime="20181118 11:23:02.128" endtime="20181118 11:23:02.128"></status>
</kw>
<msg timestamp="20181118 11:23:02.128" level="INFO">${aJoke} = 室友和他男朋友有张银行卡，各自输3个数作为密码。昨晚，室友想取600，叫上男朋友去取钱。输了3次，密码都是错误，卡被锁了。室友说，明明两个人的密码都对的吖，怎么就提示错误了。我们异口同声地说：他不想你用钱</msg>
<status status="PASS" starttime="20181118 11:23:01.858" endtime="20181118 11:23:02.128"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:23:02.138" level="INFO">Typing text '室友和他男朋友有张银行卡，各自输3个数作为密码。昨晚，室友想取600，叫上男朋友去取钱。输了3次，密码都是错误，卡被锁了。室友说，明明两个人的密码都对的吖，怎么就提示错误了。我们异口同声地说：他不想你用钱' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:23:02.128" endtime="20181118 11:23:15.310"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:23:15.310" endtime="20181118 11:23:18.983"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:23:18.983" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:23:18.983" endtime="20181118 11:23:22.073"></status>
</kw>
<status status="PASS" starttime="20181118 11:23:01.858" endtime="20181118 11:23:22.073"></status>
</kw>
<kw name="${index} = 27" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:23:22.083" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:23:22.083" endtime="20181118 11:23:22.083"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:23:22.083" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:23:22.083" endtime="20181118 11:23:22.113"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:23:22.113" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:23:22.123" level="INFO">@{queryResults} = [ (1721, '女友：“今天出门，我看到的女的百分之九十都没我年轻没我好看。”男友：“你去养老院了吧？') ]</msg>
<status status="PASS" starttime="20181118 11:23:22.113" endtime="20181118 11:23:22.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:23:22.133" level="INFO">@{results} = [ 1721 | 女友：“今天出门，我看到的女的百分之九十都没我年轻没我好看。”男友：“你去养老院了吧？ ]</msg>
<status status="PASS" starttime="20181118 11:23:22.123" endtime="20181118 11:23:22.133"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:23:22.133" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1721; </msg>
<status status="PASS" starttime="20181118 11:23:22.133" endtime="20181118 11:23:22.453"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:23:22.453" level="INFO">1721</msg>
<msg timestamp="20181118 11:23:22.453" level="INFO">女友：“今天出门，我看到的女的百分之九十都没我年轻没我好看。”男友：“你去养老院了吧？</msg>
<status status="PASS" starttime="20181118 11:23:22.453" endtime="20181118 11:23:22.453"></status>
</kw>
<msg timestamp="20181118 11:23:22.463" level="INFO">${aJoke} = 女友：“今天出门，我看到的女的百分之九十都没我年轻没我好看。”男友：“你去养老院了吧？</msg>
<status status="PASS" starttime="20181118 11:23:22.083" endtime="20181118 11:23:22.463"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:23:22.463" level="INFO">Typing text '女友：“今天出门，我看到的女的百分之九十都没我年轻没我好看。”男友：“你去养老院了吧？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:23:22.463" endtime="20181118 11:23:33.564"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:23:33.564" endtime="20181118 11:23:36.604"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:23:36.604" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:23:36.604" endtime="20181118 11:23:39.554"></status>
</kw>
<status status="PASS" starttime="20181118 11:23:22.073" endtime="20181118 11:23:39.554"></status>
</kw>
<kw name="${index} = 28" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:23:39.564" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:23:39.564" endtime="20181118 11:23:39.564"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:23:39.564" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:23:39.564" endtime="20181118 11:23:39.594"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:23:39.594" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:23:39.604" level="INFO">@{queryResults} = [ (1722, '开车在路上。。。突然，一个sb冲过来撞了一下我的车，然后开始躺在地上，我一想:医药费，食品费，抚养费，生活费，......然后，我吓的踩了油门。。。。。。。事情就是这样的警官。警官:“你可以走了”') ]</msg>
<status status="PASS" starttime="20181118 11:23:39.594" endtime="20181118 11:23:39.604"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:23:39.604" level="INFO">@{results} = [ 1722 | 开车在路上。。。突然，一个sb冲过来撞了一下我的车，然后开始躺在地上，我一想:医药费，食品费，抚养费，生活费，......然后，我吓的踩了油门。。。。。。。事情就是这样的警官。警官:“你可以走了” ]</msg>
<status status="PASS" starttime="20181118 11:23:39.604" endtime="20181118 11:23:39.604"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:23:39.604" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1722; </msg>
<status status="PASS" starttime="20181118 11:23:39.604" endtime="20181118 11:23:39.924"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:23:39.924" level="INFO">1722</msg>
<msg timestamp="20181118 11:23:39.924" level="INFO">开车在路上。。。突然，一个sb冲过来撞了一下我的车，然后开始躺在地上，我一想:医药费，食品费，抚养费，生活费，......然后，我吓的踩了油门。。。。。。。事情就是这样的警官。警官:“你可以走了”</msg>
<status status="PASS" starttime="20181118 11:23:39.924" endtime="20181118 11:23:39.924"></status>
</kw>
<msg timestamp="20181118 11:23:39.934" level="INFO">${aJoke} = 开车在路上。。。突然，一个sb冲过来撞了一下我的车，然后开始躺在地上，我一想:医药费，食品费，抚养费，生活费，......然后，我吓的踩了油门。。。。。。。事情就是这样的警官。警官:“你可以走了”</msg>
<status status="PASS" starttime="20181118 11:23:39.554" endtime="20181118 11:23:39.934"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:23:39.934" level="INFO">Typing text '开车在路上。。。突然，一个sb冲过来撞了一下我的车，然后开始躺在地上，我一想:医药费，食品费，抚养费，生活费，......然后，我吓的踩了油门。。。。。。。事情就是这样的警官。警官:“你可以走了”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:23:39.934" endtime="20181118 11:23:51.256"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:23:51.256" endtime="20181118 11:23:54.996"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:23:54.996" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:23:54.996" endtime="20181118 11:23:58.218"></status>
</kw>
<status status="PASS" starttime="20181118 11:23:39.554" endtime="20181118 11:23:58.218"></status>
</kw>
<kw name="${index} = 29" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:23:58.228" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:23:58.228" endtime="20181118 11:23:58.228"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:23:58.238" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:23:58.228" endtime="20181118 11:23:58.338"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:23:58.338" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:23:58.398" level="INFO">@{queryResults} = [ (1723, '朋友和妹子去相亲，两人看对眼了，聊了很久。临走时朋友非常羞涩而又激动的说：“我想…能不能…让我…亲…亲…”妹子红着脸贴近过去，满心欢喜的点点头：“嗯”朋友：“……亲…亲自送你回家。”我终于明白屌丝单身是有原因的。。。 ”') ]</msg>
<status status="PASS" starttime="20181118 11:23:58.338" endtime="20181118 11:23:58.398"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:23:58.408" level="INFO">@{results} = [ 1723 | 朋友和妹子去相亲，两人看对眼了，聊了很久。临走时朋友非常羞涩而又激动的说：“我想…能不能…让我…亲…亲…”妹子红着脸贴近过去，满心欢喜的点点头：“嗯”朋友：“……亲…亲自送你回家。”我终于明白屌丝单身是有原因的。。。 ” ]</msg>
<status status="PASS" starttime="20181118 11:23:58.398" endtime="20181118 11:23:58.408"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:23:58.408" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1723; </msg>
<status status="PASS" starttime="20181118 11:23:58.408" endtime="20181118 11:23:58.448"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:23:58.448" level="INFO">1723</msg>
<msg timestamp="20181118 11:23:58.448" level="INFO">朋友和妹子去相亲，两人看对眼了，聊了很久。临走时朋友非常羞涩而又激动的说：“我想…能不能…让我…亲…亲…”妹子红着脸贴近过去，满心欢喜的点点头：“嗯”朋友：“……亲…亲自送你回家。”我终于明白屌丝单身是有原因的。。。 ”</msg>
<status status="PASS" starttime="20181118 11:23:58.448" endtime="20181118 11:23:58.448"></status>
</kw>
<msg timestamp="20181118 11:23:58.448" level="INFO">${aJoke} = 朋友和妹子去相亲，两人看对眼了，聊了很久。临走时朋友非常羞涩而又激动的说：“我想…能不能…让我…亲…亲…”妹子红着脸贴近过去，满心欢喜的点点头：“嗯”朋友：“……亲…亲自送你回家。”我终于明白屌丝单身是有原因的。。。 ”</msg>
<status status="PASS" starttime="20181118 11:23:58.228" endtime="20181118 11:23:58.448"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:23:58.458" level="INFO">Typing text '朋友和妹子去相亲，两人看对眼了，聊了很久。临走时朋友非常羞涩而又激动的说：“我想…能不能…让我…亲…亲…”妹子红着脸贴近过去，满心欢喜的点点头：“嗯”朋友：“……亲…亲自送你回家。”我终于明白屌丝单身是有原因的。。。 ”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:23:58.458" endtime="20181118 11:24:10.919"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:24:10.919" endtime="20181118 11:24:14.963"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:24:14.973" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:24:14.963" endtime="20181118 11:24:18.274"></status>
</kw>
<status status="PASS" starttime="20181118 11:23:58.228" endtime="20181118 11:24:18.274"></status>
</kw>
<kw name="${index} = 30" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:24:18.284" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:24:18.274" endtime="20181118 11:24:18.284"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:24:18.284" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:24:18.284" endtime="20181118 11:24:18.374"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:24:18.374" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:24:18.414" level="INFO">@{queryResults} = [ (1724, '就今天上午，本人骑着自行车在路上走的好好的 后面有辆车打喇叭 ，那叫个烦人，当时就想着我就不让你能怎样……………… 事情经过就是这样医生 这条腿还能保得住吗？ 医生：不能') ]</msg>
<status status="PASS" starttime="20181118 11:24:18.374" endtime="20181118 11:24:18.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:24:18.414" level="INFO">@{results} = [ 1724 | 就今天上午，本人骑着自行车在路上走的好好的 后面有辆车打喇叭 ，那叫个烦人，当时就想着我就不让你能怎样……………… 事情经过就是这样医生 这条腿还能保得住吗？ 医生：不能 ]</msg>
<status status="PASS" starttime="20181118 11:24:18.414" endtime="20181118 11:24:18.414"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:24:18.424" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1724; </msg>
<status status="PASS" starttime="20181118 11:24:18.414" endtime="20181118 11:24:18.756"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:24:18.756" level="INFO">1724</msg>
<msg timestamp="20181118 11:24:18.756" level="INFO">就今天上午，本人骑着自行车在路上走的好好的 后面有辆车打喇叭 ，那叫个烦人，当时就想着我就不让你能怎样……………… 事情经过就是这样医生 这条腿还能保得住吗？ 医生：不能</msg>
<status status="PASS" starttime="20181118 11:24:18.756" endtime="20181118 11:24:18.756"></status>
</kw>
<msg timestamp="20181118 11:24:18.766" level="INFO">${aJoke} = 就今天上午，本人骑着自行车在路上走的好好的 后面有辆车打喇叭 ，那叫个烦人，当时就想着我就不让你能怎样……………… 事情经过就是这样医生 这条腿还能保得住吗？ 医生：不能</msg>
<status status="PASS" starttime="20181118 11:24:18.274" endtime="20181118 11:24:18.766"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:24:18.766" level="INFO">Typing text '就今天上午，本人骑着自行车在路上走的好好的 后面有辆车打喇叭 ，那叫个烦人，当时就想着我就不让你能怎样……………… 事情经过就是这样医生 这条腿还能保得住吗？ 医生：不能' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:24:18.766" endtime="20181118 11:24:30.654"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:24:30.654" endtime="20181118 11:24:34.139"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:24:34.139" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:24:34.139" endtime="20181118 11:24:36.984"></status>
</kw>
<status status="PASS" starttime="20181118 11:24:18.274" endtime="20181118 11:24:36.984"></status>
</kw>
<kw name="${index} = 31" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:24:36.994" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:24:36.994" endtime="20181118 11:24:36.994"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:24:36.994" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:24:36.994" endtime="20181118 11:24:37.024"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:24:37.024" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:24:37.034" level="INFO">@{queryResults} = [ (1725, '“明天穿校服知道么？”他打电话给她。“知道了……”她有些不耐烦，“婆婆妈妈的……”第二天，“你耍我！”她发现校园里没有一个人穿校服。“只是想穿情侣装了……”他指了指自己身上的校服，笑得很阳光。\u3000') ]</msg>
<status status="PASS" starttime="20181118 11:24:37.024" endtime="20181118 11:24:37.034"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:24:37.044" level="INFO">@{results} = [ 1725 | “明天穿校服知道么？”他打电话给她。“知道了……”她有些不耐烦，“婆婆妈妈的……”第二天，“你耍我！”她发现校园里没有一个人穿校服。“只是想穿情侣装了……”他指了指自己身上的校服，笑得很阳光。　 ]</msg>
<status status="PASS" starttime="20181118 11:24:37.034" endtime="20181118 11:24:37.044"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:24:37.044" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1725; </msg>
<status status="PASS" starttime="20181118 11:24:37.044" endtime="20181118 11:24:37.344"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:24:37.344" level="INFO">1725</msg>
<msg timestamp="20181118 11:24:37.344" level="INFO">“明天穿校服知道么？”他打电话给她。“知道了……”她有些不耐烦，“婆婆妈妈的……”第二天，“你耍我！”她发现校园里没有一个人穿校服。“只是想穿情侣装了……”他指了指自己身上的校服，笑得很阳光。　</msg>
<status status="PASS" starttime="20181118 11:24:37.344" endtime="20181118 11:24:37.344"></status>
</kw>
<msg timestamp="20181118 11:24:37.344" level="INFO">${aJoke} = “明天穿校服知道么？”他打电话给她。“知道了……”她有些不耐烦，“婆婆妈妈的……”第二天，“你耍我！”她发现校园里没有一个人穿校服。“只是想穿情侣装了……”他指了指自己身上的校服，笑得很阳光。　</msg>
<status status="PASS" starttime="20181118 11:24:36.984" endtime="20181118 11:24:37.344"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:24:37.344" level="INFO">Typing text '“明天穿校服知道么？”他打电话给她。“知道了……”她有些不耐烦，“婆婆妈妈的……”第二天，“你耍我！”她发现校园里没有一个人穿校服。“只是想穿情侣装了……”他指了指自己身上的校服，笑得很阳光。　' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:24:37.344" endtime="20181118 11:24:48.763"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:24:48.763" endtime="20181118 11:24:54.936"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:24:54.946" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:24:54.946" endtime="20181118 11:25:01.883"></status>
</kw>
<status status="PASS" starttime="20181118 11:24:36.984" endtime="20181118 11:25:01.883"></status>
</kw>
<kw name="${index} = 32" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:25:01.893" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:25:01.893" endtime="20181118 11:25:01.893"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:25:01.893" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:25:01.893" endtime="20181118 11:25:01.933"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:25:01.933" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:25:01.963" level="INFO">@{queryResults} = [ (1726, '刚看到报纸上报道，有个14岁的女孩和人打赌说自己能在一年之内和100个男人发生性关系。这个社会是怎么了！真让我感到悲哀！她还是个孩子啊，竟然赌博！') ]</msg>
<status status="PASS" starttime="20181118 11:25:01.933" endtime="20181118 11:25:01.963"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:25:01.963" level="INFO">@{results} = [ 1726 | 刚看到报纸上报道，有个14岁的女孩和人打赌说自己能在一年之内和100个男人发生性关系。这个社会是怎么了！真让我感到悲哀！她还是个孩子啊，竟然赌博！ ]</msg>
<status status="PASS" starttime="20181118 11:25:01.963" endtime="20181118 11:25:01.963"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:25:01.963" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1726; </msg>
<status status="PASS" starttime="20181118 11:25:01.963" endtime="20181118 11:25:01.973"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:25:01.973" level="INFO">1726</msg>
<msg timestamp="20181118 11:25:01.983" level="INFO">刚看到报纸上报道，有个14岁的女孩和人打赌说自己能在一年之内和100个男人发生性关系。这个社会是怎么了！真让我感到悲哀！她还是个孩子啊，竟然赌博！</msg>
<status status="PASS" starttime="20181118 11:25:01.973" endtime="20181118 11:25:01.983"></status>
</kw>
<msg timestamp="20181118 11:25:01.983" level="INFO">${aJoke} = 刚看到报纸上报道，有个14岁的女孩和人打赌说自己能在一年之内和100个男人发生性关系。这个社会是怎么了！真让我感到悲哀！她还是个孩子啊，竟然赌博！</msg>
<status status="PASS" starttime="20181118 11:25:01.883" endtime="20181118 11:25:01.983"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:25:01.983" level="INFO">Typing text '刚看到报纸上报道，有个14岁的女孩和人打赌说自己能在一年之内和100个男人发生性关系。这个社会是怎么了！真让我感到悲哀！她还是个孩子啊，竟然赌博！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:25:01.983" endtime="20181118 11:25:12.326"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:25:12.326" endtime="20181118 11:25:16.297"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:25:16.307" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:25:16.297" endtime="20181118 11:25:20.789"></status>
</kw>
<status status="PASS" starttime="20181118 11:25:01.883" endtime="20181118 11:25:20.789"></status>
</kw>
<kw name="${index} = 33" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:25:20.799" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:25:20.799" endtime="20181118 11:25:20.799"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:25:20.799" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:25:20.799" endtime="20181118 11:25:20.819"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:25:20.819" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:25:20.829" level="INFO">@{queryResults} = [ (1727, '陈大夫半夜被一阵急促的电话声吵醒了，一接，电话那边的三个医生约他出来打麻将，三缺一，陈大夫马上穿上外套，老婆醒了，问:"严重吗？"陈大夫严肃地说:"很严重，已经有三位医生在那了。"') ]</msg>
<status status="PASS" starttime="20181118 11:25:20.819" endtime="20181118 11:25:20.829"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:25:20.839" level="INFO">@{results} = [ 1727 | 陈大夫半夜被一阵急促的电话声吵醒了，一接，电话那边的三个医生约他出来打麻将，三缺一，陈大夫马上穿上外套，老婆醒了，问:"严重吗？"陈大夫严肃地说:"很严重，已经有三位医生在那了。" ]</msg>
<status status="PASS" starttime="20181118 11:25:20.829" endtime="20181118 11:25:20.839"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:25:20.839" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1727; </msg>
<status status="PASS" starttime="20181118 11:25:20.839" endtime="20181118 11:25:21.143"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:25:21.143" level="INFO">1727</msg>
<msg timestamp="20181118 11:25:21.143" level="INFO">陈大夫半夜被一阵急促的电话声吵醒了，一接，电话那边的三个医生约他出来打麻将，三缺一，陈大夫马上穿上外套，老婆醒了，问:"严重吗？"陈大夫严肃地说:"很严重，已经有三位医生在那了。"</msg>
<status status="PASS" starttime="20181118 11:25:21.143" endtime="20181118 11:25:21.143"></status>
</kw>
<msg timestamp="20181118 11:25:21.143" level="INFO">${aJoke} = 陈大夫半夜被一阵急促的电话声吵醒了，一接，电话那边的三个医生约他出来打麻将，三缺一，陈大夫马上穿上外套，老婆醒了，问:"严重吗？"陈大夫严肃地说:"很严重，已经有三位医生在那了。"</msg>
<status status="PASS" starttime="20181118 11:25:20.799" endtime="20181118 11:25:21.143"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:25:21.153" level="INFO">Typing text '陈大夫半夜被一阵急促的电话声吵醒了，一接，电话那边的三个医生约他出来打麻将，三缺一，陈大夫马上穿上外套，老婆醒了，问:"严重吗？"陈大夫严肃地说:"很严重，已经有三位医生在那了。"' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:25:21.143" endtime="20181118 11:25:32.618"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:25:32.618" endtime="20181118 11:25:37.987"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:25:37.989" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:25:37.988" endtime="20181118 11:25:43.194"></status>
</kw>
<status status="PASS" starttime="20181118 11:25:20.789" endtime="20181118 11:25:43.194"></status>
</kw>
<kw name="${index} = 34" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:25:43.204" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:25:43.204" endtime="20181118 11:25:43.204"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:25:43.204" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:25:43.204" endtime="20181118 11:25:43.264"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:25:43.274" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:25:43.284" level="INFO">@{queryResults} = [ (1728, '放学回家，下雨，楼主骑车没雨衣没伞。雨越下越大，有种脱光衣服裸骑的冲动。这时面前出现一对男女，目测初中生，一人一把伞有说有笑，雨中漫步，我立刻加速夺过男生手中伞绝尘而去……哥哥只能帮你到这了。') ]</msg>
<status status="PASS" starttime="20181118 11:25:43.264" endtime="20181118 11:25:43.284"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:25:43.294" level="INFO">@{results} = [ 1728 | 放学回家，下雨，楼主骑车没雨衣没伞。雨越下越大，有种脱光衣服裸骑的冲动。这时面前出现一对男女，目测初中生，一人一把伞有说有笑，雨中漫步，我立刻加速夺过男生手中伞绝尘而去……哥哥只能帮你到这了。 ]</msg>
<status status="PASS" starttime="20181118 11:25:43.294" endtime="20181118 11:25:43.294"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:25:43.294" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1728; </msg>
<status status="PASS" starttime="20181118 11:25:43.294" endtime="20181118 11:25:43.584"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:25:43.584" level="INFO">1728</msg>
<msg timestamp="20181118 11:25:43.594" level="INFO">放学回家，下雨，楼主骑车没雨衣没伞。雨越下越大，有种脱光衣服裸骑的冲动。这时面前出现一对男女，目测初中生，一人一把伞有说有笑，雨中漫步，我立刻加速夺过男生手中伞绝尘而去……哥哥只能帮你到这了。</msg>
<status status="PASS" starttime="20181118 11:25:43.584" endtime="20181118 11:25:43.594"></status>
</kw>
<msg timestamp="20181118 11:25:43.594" level="INFO">${aJoke} = 放学回家，下雨，楼主骑车没雨衣没伞。雨越下越大，有种脱光衣服裸骑的冲动。这时面前出现一对男女，目测初中生，一人一把伞有说有笑，雨中漫步，我立刻加速夺过男生手中伞绝尘而去……哥哥只能帮你到这了。</msg>
<status status="PASS" starttime="20181118 11:25:43.204" endtime="20181118 11:25:43.594"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:25:43.604" level="INFO">Typing text '放学回家，下雨，楼主骑车没雨衣没伞。雨越下越大，有种脱光衣服裸骑的冲动。这时面前出现一对男女，目测初中生，一人一把伞有说有笑，雨中漫步，我立刻加速夺过男生手中伞绝尘而去……哥哥只能帮你到这了。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:25:43.594" endtime="20181118 11:25:56.425"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:25:56.425" endtime="20181118 11:26:01.067"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:26:01.067" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:26:01.067" endtime="20181118 11:26:04.747"></status>
</kw>
<status status="PASS" starttime="20181118 11:25:43.194" endtime="20181118 11:26:04.747"></status>
</kw>
<kw name="${index} = 35" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:26:04.757" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:26:04.757" endtime="20181118 11:26:04.757"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:26:04.757" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:26:04.757" endtime="20181118 11:26:04.787"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:26:04.787" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:26:04.807" level="INFO">@{queryResults} = [ (1729, '从前有位女汉子精忠报国，那年国家打仗她女扮男妆，前去参军打仗。战场上的她大姨妈来了，血顺着大腿流，旁边的同伴看见了前去汇报给长官说她负伤了，女汉子怕露馅了，慌忙说没事没事，长官不依叫人扯下她的裤子。大喊了句：JJ都炸飞了 还说没事。。。') ]</msg>
<status status="PASS" starttime="20181118 11:26:04.787" endtime="20181118 11:26:04.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:26:04.807" level="INFO">@{results} = [ 1729 | 从前有位女汉子精忠报国，那年国家打仗她女扮男妆，前去参军打仗。战场上的她大姨妈来了，血顺着大腿流，旁边的同伴看见了前去汇报给长官说她负伤了，女汉子怕露馅了，慌忙说没事没事，长官不依叫人扯下她的裤子。大喊了句：JJ都炸飞了 还说没事。。。 ]</msg>
<status status="PASS" starttime="20181118 11:26:04.807" endtime="20181118 11:26:04.807"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:26:04.817" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1729; </msg>
<status status="PASS" starttime="20181118 11:26:04.817" endtime="20181118 11:26:05.137"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:26:05.137" level="INFO">1729</msg>
<msg timestamp="20181118 11:26:05.137" level="INFO">从前有位女汉子精忠报国，那年国家打仗她女扮男妆，前去参军打仗。战场上的她大姨妈来了，血顺着大腿流，旁边的同伴看见了前去汇报给长官说她负伤了，女汉子怕露馅了，慌忙说没事没事，长官不依叫人扯下她的裤子。大喊了句：JJ都炸飞了 还说没事。。。</msg>
<status status="PASS" starttime="20181118 11:26:05.137" endtime="20181118 11:26:05.137"></status>
</kw>
<msg timestamp="20181118 11:26:05.137" level="INFO">${aJoke} = 从前有位女汉子精忠报国，那年国家打仗她女扮男妆，前去参军打仗。战场上的她大姨妈来了，血顺着大腿流，旁边的同伴看见了前去汇报给长官说她负伤了，女汉子怕露馅了，慌忙说没事没事，长官不依叫人扯下她的裤子。大喊了句：JJ都炸飞了 还说没事。。。</msg>
<status status="PASS" starttime="20181118 11:26:04.747" endtime="20181118 11:26:05.147"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:26:05.147" level="INFO">Typing text '从前有位女汉子精忠报国，那年国家打仗她女扮男妆，前去参军打仗。战场上的她大姨妈来了，血顺着大腿流，旁边的同伴看见了前去汇报给长官说她负伤了，女汉子怕露馅了，慌忙说没事没事，长官不依叫人扯下她的裤子。大喊了句：JJ都炸飞了 还说没事。。。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:26:05.147" endtime="20181118 11:26:18.175"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:26:18.175" endtime="20181118 11:26:21.695"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:26:21.695" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:26:21.695" endtime="20181118 11:26:24.819"></status>
</kw>
<status status="PASS" starttime="20181118 11:26:04.747" endtime="20181118 11:26:24.819"></status>
</kw>
<kw name="${index} = 36" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:26:24.819" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:26:24.819" endtime="20181118 11:26:24.819"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:26:24.829" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:26:24.829" endtime="20181118 11:26:24.859"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:26:24.859" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:26:24.869" level="INFO">@{queryResults} = [ (1730, '我：“你这是在给谁上香？” 室友：“前女友。” 我：“擦，人家又没死。” 室友：“走的时候，她给我留了一句话：就当我死了！”') ]</msg>
<status status="PASS" starttime="20181118 11:26:24.859" endtime="20181118 11:26:24.869"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:26:24.879" level="INFO">@{results} = [ 1730 | 我：“你这是在给谁上香？” 室友：“前女友。” 我：“擦，人家又没死。” 室友：“走的时候，她给我留了一句话：就当我死了！” ]</msg>
<status status="PASS" starttime="20181118 11:26:24.869" endtime="20181118 11:26:24.879"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:26:24.879" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1730; </msg>
<status status="PASS" starttime="20181118 11:26:24.879" endtime="20181118 11:26:24.889"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:26:24.889" level="INFO">1730</msg>
<msg timestamp="20181118 11:26:24.919" level="INFO">我：“你这是在给谁上香？” 室友：“前女友。” 我：“擦，人家又没死。” 室友：“走的时候，她给我留了一句话：就当我死了！”</msg>
<status status="PASS" starttime="20181118 11:26:24.889" endtime="20181118 11:26:24.919"></status>
</kw>
<msg timestamp="20181118 11:26:24.919" level="INFO">${aJoke} = 我：“你这是在给谁上香？” 室友：“前女友。” 我：“擦，人家又没死。” 室友：“走的时候，她给我留了一句话：就当我死了！”</msg>
<status status="PASS" starttime="20181118 11:26:24.819" endtime="20181118 11:26:24.919"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:26:24.919" level="INFO">Typing text '我：“你这是在给谁上香？” 室友：“前女友。” 我：“擦，人家又没死。” 室友：“走的时候，她给我留了一句话：就当我死了！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:26:24.919" endtime="20181118 11:26:35.486"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:26:35.486" endtime="20181118 11:26:38.876"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:26:38.876" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:26:38.876" endtime="20181118 11:26:42.024"></status>
</kw>
<status status="PASS" starttime="20181118 11:26:24.819" endtime="20181118 11:26:42.024"></status>
</kw>
<kw name="${index} = 37" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:26:42.034" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:26:42.024" endtime="20181118 11:26:42.034"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:26:42.034" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:26:42.034" endtime="20181118 11:26:42.064"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:26:42.064" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:26:42.074" level="INFO">@{queryResults} = [ (1731, '回宿舍路上，室友吹牛说：我三岁习武，五岁成名，八岁打败天下无敌手。。。 听后，旁边另一位悠悠地来了句：享年九岁。') ]</msg>
<status status="PASS" starttime="20181118 11:26:42.064" endtime="20181118 11:26:42.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:26:42.074" level="INFO">@{results} = [ 1731 | 回宿舍路上，室友吹牛说：我三岁习武，五岁成名，八岁打败天下无敌手。。。 听后，旁边另一位悠悠地来了句：享年九岁。 ]</msg>
<status status="PASS" starttime="20181118 11:26:42.074" endtime="20181118 11:26:42.074"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:26:42.084" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1731; </msg>
<status status="PASS" starttime="20181118 11:26:42.074" endtime="20181118 11:26:42.364"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:26:42.364" level="INFO">1731</msg>
<msg timestamp="20181118 11:26:42.364" level="INFO">回宿舍路上，室友吹牛说：我三岁习武，五岁成名，八岁打败天下无敌手。。。 听后，旁边另一位悠悠地来了句：享年九岁。</msg>
<status status="PASS" starttime="20181118 11:26:42.364" endtime="20181118 11:26:42.374"></status>
</kw>
<msg timestamp="20181118 11:26:42.374" level="INFO">${aJoke} = 回宿舍路上，室友吹牛说：我三岁习武，五岁成名，八岁打败天下无敌手。。。 听后，旁边另一位悠悠地来了句：享年九岁。</msg>
<status status="PASS" starttime="20181118 11:26:42.024" endtime="20181118 11:26:42.374"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:26:42.374" level="INFO">Typing text '回宿舍路上，室友吹牛说：我三岁习武，五岁成名，八岁打败天下无敌手。。。 听后，旁边另一位悠悠地来了句：享年九岁。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:26:42.374" endtime="20181118 11:26:53.155"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:26:53.155" endtime="20181118 11:26:57.654"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:26:57.654" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:26:57.654" endtime="20181118 11:27:03.332"></status>
</kw>
<status status="PASS" starttime="20181118 11:26:42.024" endtime="20181118 11:27:03.332"></status>
</kw>
<kw name="${index} = 38" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:27:03.342" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:27:03.342" endtime="20181118 11:27:03.342"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:27:03.342" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:27:03.342" endtime="20181118 11:27:03.392"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:27:03.392" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:27:03.412" level="INFO">@{queryResults} = [ (1732, '本人女，有二货同事一枚（男），前两天去上班，他很认真的看着我说：“我觉得你长得很像一个人。”“谁？”“你有三分之二像苍老师。”当时心里很鸡冻，问：“哪三分之二？”“苍老...”') ]</msg>
<status status="PASS" starttime="20181118 11:27:03.392" endtime="20181118 11:27:03.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:27:03.412" level="INFO">@{results} = [ 1732 | 本人女，有二货同事一枚（男），前两天去上班，他很认真的看着我说：“我觉得你长得很像一个人。”“谁？”“你有三分之二像苍老师。”当时心里很鸡冻，问：“哪三分之二？”“苍老...” ]</msg>
<status status="PASS" starttime="20181118 11:27:03.412" endtime="20181118 11:27:03.412"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:27:03.422" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1732; </msg>
<status status="PASS" starttime="20181118 11:27:03.412" endtime="20181118 11:27:03.712"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:27:03.712" level="INFO">1732</msg>
<msg timestamp="20181118 11:27:03.712" level="INFO">本人女，有二货同事一枚（男），前两天去上班，他很认真的看着我说：“我觉得你长得很像一个人。”“谁？”“你有三分之二像苍老师。”当时心里很鸡冻，问：“哪三分之二？”“苍老...”</msg>
<status status="PASS" starttime="20181118 11:27:03.712" endtime="20181118 11:27:03.712"></status>
</kw>
<msg timestamp="20181118 11:27:03.722" level="INFO">${aJoke} = 本人女，有二货同事一枚（男），前两天去上班，他很认真的看着我说：“我觉得你长得很像一个人。”“谁？”“你有三分之二像苍老师。”当时心里很鸡冻，问：“哪三分之二？”“苍老...”</msg>
<status status="PASS" starttime="20181118 11:27:03.342" endtime="20181118 11:27:03.722"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:27:03.722" level="INFO">Typing text '本人女，有二货同事一枚（男），前两天去上班，他很认真的看着我说：“我觉得你长得很像一个人。”“谁？”“你有三分之二像苍老师。”当时心里很鸡冻，问：“哪三分之二？”“苍老...”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:27:03.722" endtime="20181118 11:27:14.707"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:27:14.707" endtime="20181118 11:27:18.279"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:27:18.279" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:27:18.279" endtime="20181118 11:27:21.351"></status>
</kw>
<status status="PASS" starttime="20181118 11:27:03.332" endtime="20181118 11:27:21.351"></status>
</kw>
<kw name="${index} = 39" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:27:21.361" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:27:21.361" endtime="20181118 11:27:21.361"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:27:21.361" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:27:21.361" endtime="20181118 11:27:21.421"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:27:21.421" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:27:21.431" level="INFO">@{queryResults} = [ (1733, '台风期间，记者冒着风雨采访路过的一位老大妈：大妈请问台风对你们生活有啥影响？ 大妈说：影响可大了，刚才我和我老头出来……艾玛，老头呢？') ]</msg>
<status status="PASS" starttime="20181118 11:27:21.421" endtime="20181118 11:27:21.431"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:27:21.441" level="INFO">@{results} = [ 1733 | 台风期间，记者冒着风雨采访路过的一位老大妈：大妈请问台风对你们生活有啥影响？ 大妈说：影响可大了，刚才我和我老头出来……艾玛，老头呢？ ]</msg>
<status status="PASS" starttime="20181118 11:27:21.441" endtime="20181118 11:27:21.441"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:27:21.441" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1733; </msg>
<status status="PASS" starttime="20181118 11:27:21.441" endtime="20181118 11:27:21.771"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:27:21.771" level="INFO">1733</msg>
<msg timestamp="20181118 11:27:21.771" level="INFO">台风期间，记者冒着风雨采访路过的一位老大妈：大妈请问台风对你们生活有啥影响？ 大妈说：影响可大了，刚才我和我老头出来……艾玛，老头呢？</msg>
<status status="PASS" starttime="20181118 11:27:21.771" endtime="20181118 11:27:21.771"></status>
</kw>
<msg timestamp="20181118 11:27:21.771" level="INFO">${aJoke} = 台风期间，记者冒着风雨采访路过的一位老大妈：大妈请问台风对你们生活有啥影响？ 大妈说：影响可大了，刚才我和我老头出来……艾玛，老头呢？</msg>
<status status="PASS" starttime="20181118 11:27:21.361" endtime="20181118 11:27:21.771"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:27:21.781" level="INFO">Typing text '台风期间，记者冒着风雨采访路过的一位老大妈：大妈请问台风对你们生活有啥影响？ 大妈说：影响可大了，刚才我和我老头出来……艾玛，老头呢？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:27:21.771" endtime="20181118 11:27:32.607"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:27:32.617" endtime="20181118 11:27:37.967"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:27:37.967" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:27:37.967" endtime="20181118 11:27:42.387"></status>
</kw>
<status status="PASS" starttime="20181118 11:27:21.351" endtime="20181118 11:27:42.387"></status>
</kw>
<kw name="${index} = 40" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:27:42.397" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:27:42.397" endtime="20181118 11:27:42.397"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:27:42.407" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:27:42.397" endtime="20181118 11:27:42.437"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:27:42.447" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:27:42.467" level="INFO">@{queryResults} = [ (1734, '学校建了一个雕塑,一个少女左手拿着书,右手高举着一只鸽 子. 全校大会的时候,校长亲自向大家 征询此雕塑的名称,同 学们纷纷表示[和平],校长赞许的看着大家,问道:谁还有其它 想法. 这时只听一同学弱弱的说道[读书顶个鸟用]. 全校师生 瞬间安静了几秒,随后沸腾了,校长脸绿了！！！！') ]</msg>
<status status="PASS" starttime="20181118 11:27:42.447" endtime="20181118 11:27:42.467"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:27:42.467" level="INFO">@{results} = [ 1734 | 学校建了一个雕塑,一个少女左手拿着书,右手高举着一只鸽 子. 全校大会的时候,校长亲自向大家 征询此雕塑的名称,同 学们纷纷表示[和平],校长赞许的看着大家,问道:谁还有其它 想法. 这时只听一同学弱弱的说道[读书顶个鸟用]. 全校师生 瞬间安静了几秒,随后沸腾了,校长脸绿了！！！！ ]</msg>
<status status="PASS" starttime="20181118 11:27:42.467" endtime="20181118 11:27:42.467"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:27:42.467" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1734; </msg>
<status status="PASS" starttime="20181118 11:27:42.467" endtime="20181118 11:27:42.767"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:27:42.767" level="INFO">1734</msg>
<msg timestamp="20181118 11:27:42.767" level="INFO">学校建了一个雕塑,一个少女左手拿着书,右手高举着一只鸽 子. 全校大会的时候,校长亲自向大家 征询此雕塑的名称,同 学们纷纷表示[和平],校长赞许的看着大家,问道:谁还有其它 想法. 这时只听一同学弱弱的说道[读书顶个鸟用]. 全校师生 瞬间安静了几秒,随后沸腾了,校长脸绿了！！！！</msg>
<status status="PASS" starttime="20181118 11:27:42.767" endtime="20181118 11:27:42.767"></status>
</kw>
<msg timestamp="20181118 11:27:42.777" level="INFO">${aJoke} = 学校建了一个雕塑,一个少女左手拿着书,右手高举着一只鸽 子. 全校大会的时候,校长亲自向大家 征询此雕塑的名称,同 学们纷纷表示[和平],校长赞许的看着大家,问道:谁还有其它 想法. 这时只听一同学弱弱的说道[读书顶个鸟用]. 全校师生 瞬间安静了几秒,随后沸腾了,校长脸绿了！！！！</msg>
<status status="PASS" starttime="20181118 11:27:42.397" endtime="20181118 11:27:42.777"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:27:42.777" level="INFO">Typing text '学校建了一个雕塑,一个少女左手拿着书,右手高举着一只鸽 子. 全校大会的时候,校长亲自向大家 征询此雕塑的名称,同 学们纷纷表示[和平],校长赞许的看着大家,问道:谁还有其它 想法. 这时只听一同学弱弱的说道[读书顶个鸟用]. 全校师生 瞬间安静了几秒,随后沸腾了,校长脸绿了！！！！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:27:42.777" endtime="20181118 11:27:55.940"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:27:55.940" endtime="20181118 11:28:01.957"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:28:01.957" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:28:01.957" endtime="20181118 11:28:06.699"></status>
</kw>
<status status="PASS" starttime="20181118 11:27:42.387" endtime="20181118 11:28:06.699"></status>
</kw>
<kw name="${index} = 41" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:28:06.709" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:28:06.709" endtime="20181118 11:28:06.709"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:28:06.709" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:28:06.709" endtime="20181118 11:28:06.749"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:28:06.749" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:28:06.769" level="INFO">@{queryResults} = [ (1735, '为什么我做错了大人可以打我，大人错了我不能打他们？因为你打不过他们，等你打得过了，他们就会跟你开始讲道理了。') ]</msg>
<status status="PASS" starttime="20181118 11:28:06.749" endtime="20181118 11:28:06.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:28:06.769" level="INFO">@{results} = [ 1735 | 为什么我做错了大人可以打我，大人错了我不能打他们？因为你打不过他们，等你打得过了，他们就会跟你开始讲道理了。 ]</msg>
<status status="PASS" starttime="20181118 11:28:06.769" endtime="20181118 11:28:06.769"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:28:06.769" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1735; </msg>
<status status="PASS" starttime="20181118 11:28:06.769" endtime="20181118 11:28:07.085"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:28:07.085" level="INFO">1735</msg>
<msg timestamp="20181118 11:28:07.085" level="INFO">为什么我做错了大人可以打我，大人错了我不能打他们？因为你打不过他们，等你打得过了，他们就会跟你开始讲道理了。</msg>
<status status="PASS" starttime="20181118 11:28:07.085" endtime="20181118 11:28:07.085"></status>
</kw>
<msg timestamp="20181118 11:28:07.085" level="INFO">${aJoke} = 为什么我做错了大人可以打我，大人错了我不能打他们？因为你打不过他们，等你打得过了，他们就会跟你开始讲道理了。</msg>
<status status="PASS" starttime="20181118 11:28:06.709" endtime="20181118 11:28:07.085"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:28:07.085" level="INFO">Typing text '为什么我做错了大人可以打我，大人错了我不能打他们？因为你打不过他们，等你打得过了，他们就会跟你开始讲道理了。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:28:07.085" endtime="20181118 11:28:18.147"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:28:18.147" endtime="20181118 11:28:22.239"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:28:22.249" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:28:22.249" endtime="20181118 11:28:26.258"></status>
</kw>
<status status="PASS" starttime="20181118 11:28:06.709" endtime="20181118 11:28:26.258"></status>
</kw>
<kw name="${index} = 42" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:28:26.268" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:28:26.268" endtime="20181118 11:28:26.268"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:28:26.268" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:28:26.268" endtime="20181118 11:28:26.329"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:28:26.329" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:28:26.369" level="INFO">@{queryResults} = [ (1736, '昨晚9点半，小区超市遇一男 同事，他翻翻我的购物篮，看到盒套 套。同事：“半夜出来买TT，**很幸福 嘛！”我见他拿的是一包卫生纸， 回：“半夜买卫生纸，你**很寂寞 嘛！”这时，门外走进来一漂亮MM。 她走到收银台边上的柜台道：“给我拿 两节电池！”') ]</msg>
<status status="PASS" starttime="20181118 11:28:26.329" endtime="20181118 11:28:26.369"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:28:26.369" level="INFO">@{results} = [ 1736 | 昨晚9点半，小区超市遇一男 同事，他翻翻我的购物篮，看到盒套 套。同事：“半夜出来买TT，**很幸福 嘛！”我见他拿的是一包卫生纸， 回：“半夜买卫生纸，你**很寂寞 嘛！”这时，门外走进来一漂亮MM。 她走到收银台边上的柜台道：“给我拿 两节电池！” ]</msg>
<status status="PASS" starttime="20181118 11:28:26.369" endtime="20181118 11:28:26.369"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:28:26.369" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1736; </msg>
<status status="PASS" starttime="20181118 11:28:26.369" endtime="20181118 11:28:26.409"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:28:26.409" level="INFO">1736</msg>
<msg timestamp="20181118 11:28:26.409" level="INFO">昨晚9点半，小区超市遇一男 同事，他翻翻我的购物篮，看到盒套 套。同事：“半夜出来买TT，**很幸福 嘛！”我见他拿的是一包卫生纸， 回：“半夜买卫生纸，你**很寂寞 嘛！”这时，门外走进来一漂亮MM。 她走到收银台边上的柜台道：“给我拿 两节电池！”</msg>
<status status="PASS" starttime="20181118 11:28:26.409" endtime="20181118 11:28:26.409"></status>
</kw>
<msg timestamp="20181118 11:28:26.409" level="INFO">${aJoke} = 昨晚9点半，小区超市遇一男 同事，他翻翻我的购物篮，看到盒套 套。同事：“半夜出来买TT，**很幸福 嘛！”我见他拿的是一包卫生纸， 回：“半夜买卫生纸，你**很寂寞 嘛！”这时，门外走进来一漂亮MM。 她走到收银台边上的柜台道：“给我拿 两节电池！”</msg>
<status status="PASS" starttime="20181118 11:28:26.268" endtime="20181118 11:28:26.409"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:28:26.419" level="INFO">Typing text '昨晚9点半，小区超市遇一男 同事，他翻翻我的购物篮，看到盒套 套。同事：“半夜出来买TT，**很幸福 嘛！”我见他拿的是一包卫生纸， 回：“半夜买卫生纸，你**很寂寞 嘛！”这时，门外走进来一漂亮MM。 她走到收银台边上的柜台道：“给我拿 两节电池！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:28:26.419" endtime="20181118 11:28:39.871"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:28:39.871" endtime="20181118 11:28:43.905"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:28:43.905" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:28:43.905" endtime="20181118 11:28:47.282"></status>
</kw>
<status status="PASS" starttime="20181118 11:28:26.258" endtime="20181118 11:28:47.282"></status>
</kw>
<kw name="${index} = 43" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:28:47.292" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:28:47.282" endtime="20181118 11:28:47.292"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:28:47.292" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:28:47.292" endtime="20181118 11:28:47.312"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:28:47.312" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:28:47.322" level="INFO">@{queryResults} = [ (1737, '1、中午玩赛车游戏，而且说是和同事比赛，玩着玩着她突然趴在桌上不动了。 我就问她：“你怎么不开了” 她说：“我晕车。。。” 2、躺床上玩手机，突然手一松，手机掉了下来。 还好姐反应快，一个骨碌向旁边滚去。很好，没有被手机砸到。 手机静静地躺在枕头上，我静静地躺在地上…… 3、我们那儿下雪，车难坐。我追公交，刚站稳准备上车，后面还排了好多人，一妹子在后面跑得比较急，过来就一滑铲，...</msg>
<status status="PASS" starttime="20181118 11:28:47.312" endtime="20181118 11:28:47.322"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:28:47.332" level="INFO">@{results} = [ 1737 | 1、中午玩赛车游戏，而且说是和同事比赛，玩着玩着她突然趴在桌上不动了。 我就问她：“你怎么不开了” 她说：“我晕车。。。” 2、躺床上玩手机，突然手一松，手机掉了下来。 还好姐反应快，一个骨碌向旁边滚去。很好，没有被手机砸到。 手机静静地躺在枕头上，我静静地躺在地上…… 3、我们那儿下雪，车难坐。我追公交，刚站稳准备上车，后面还排了好多人，一妹子在后面跑得比较急，过来就一滑铲，我...</msg>
<status status="PASS" starttime="20181118 11:28:47.322" endtime="20181118 11:28:47.332"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:28:47.332" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1737; </msg>
<status status="PASS" starttime="20181118 11:28:47.332" endtime="20181118 11:28:47.632"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:28:47.642" level="INFO">1737</msg>
<msg timestamp="20181118 11:28:47.642" level="INFO">1、中午玩赛车游戏，而且说是和同事比赛，玩着玩着她突然趴在桌上不动了。 我就问她：“你怎么不开了” 她说：“我晕车。。。” 2、躺床上玩手机，突然手一松，手机掉了下来。 还好姐反应快，一个骨碌向旁边滚去。很好，没有被手机砸到。 手机静静地躺在枕头上，我静静地躺在地上…… 3、我们那儿下雪，车难坐。我追公交，刚站稳准备上车，后面还排了好多人，一妹子在后面跑得比较急，过来就一滑铲，我们五六个人一起躺倒，一中学生当时就来了句：“不是吧，打保龄球啊！” 4、学校组织文艺活动，小明专门穿了一套黑礼服戴个黑帽子，伴着音乐模仿了一段MJ的舞步，台下掌声一片。 结束后，校长亲自点评小明：“没想到你模仿卓别林还挺像啊！” 5、在食堂见一极品男冲食堂经理发脾气：“你看看你们食堂的粥，戴着口罩都能喝下去” 6、下次再也不敢坐女司机的车了，老子还是第一次碰见要撞车了不踩刹车而是捂双眼的司机。。。</msg>
<status status="PASS" starttime="20181118 11:28:47.642" endtime="20181118 11:28:47.642"></status>
</kw>
<msg timestamp="20181118 11:28:47.642" level="INFO">${aJoke} = 1、中午玩赛车游戏，而且说是和同事比赛，玩着玩着她突然趴在桌上不动了。 我就问她：“你怎么不开了” 她说：“我晕车。。。” 2、躺床上玩手机，突然手一松，手机掉了下来。 还好姐反应快，一个骨碌向旁边滚去。很好，没有被手机砸到。 手机静静地躺在枕头上，我静静地躺在地上…… 3、我们那儿下雪，车难坐。我追公交，刚站稳准备上车，后面还排了好多人，一妹子在后面跑得比较急，过来就一滑铲，我们五六个人一起躺倒...</msg>
<status status="PASS" starttime="20181118 11:28:47.282" endtime="20181118 11:28:47.642"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:28:47.652" level="INFO">Typing text '1、中午玩赛车游戏，而且说是和同事比赛，玩着玩着她突然趴在桌上不动了。 我就问她：“你怎么不开了” 她说：“我晕车。。。” 2、躺床上玩手机，突然手一松，手机掉了下来。 还好姐反应快，一个骨碌向旁边滚去。很好，没有被手机砸到。 手机静静地躺在枕头上，我静静地躺在地上…… 3、我们那儿下雪，车难坐。我追公交，刚站稳准备上车，后面还排了好多人，一妹子在后面跑得比较急，过来就一滑铲，我们五六个人一起躺倒，一中学生当时就来了句：“不是吧，打保龄球啊！” 4、学校组织文艺活动，小明专门穿了一套黑礼服戴个黑帽子，伴着音乐模仿了一段MJ的舞步，台下掌声一片。 结束后，校长亲自点评小明：“没想到你模仿卓别林还挺像啊！” 5、在食堂见一极品男冲食堂经理发脾气：“你看看你们食堂的粥，戴着口罩都能喝下去” 6、下次再也不敢坐女司机的车了，老子还是第一次碰见要撞车了不踩刹车而是捂双眼的司机。。。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:28:47.642" endtime="20181118 11:29:08.850"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:29:08.850" endtime="20181118 11:29:15.111"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:29:15.111" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:29:15.111" endtime="20181118 11:29:19.567"></status>
</kw>
<status status="PASS" starttime="20181118 11:28:47.282" endtime="20181118 11:29:19.567"></status>
</kw>
<kw name="${index} = 44" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:29:19.577" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:29:19.577" endtime="20181118 11:29:19.577"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:29:19.577" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:29:19.577" endtime="20181118 11:29:19.607"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:29:19.607" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:29:19.627" level="INFO">@{queryResults} = [ (1738, '我掏口袋的时候，一把钥匙掉了，当时没有发现，后来回去找！在路边有对小情侣在 那里，男的突然激动的说：是 谁的？到底是谁的？我当时以为是钥匙，连忙说：我的，我的 ！是我的！！后来才知道，原来那女的怀孕了。。。。可怜我 的脸啊 。。。疼了几天！') ]</msg>
<status status="PASS" starttime="20181118 11:29:19.607" endtime="20181118 11:29:19.627"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:29:19.627" level="INFO">@{results} = [ 1738 | 我掏口袋的时候，一把钥匙掉了，当时没有发现，后来回去找！在路边有对小情侣在 那里，男的突然激动的说：是 谁的？到底是谁的？我当时以为是钥匙，连忙说：我的，我的 ！是我的！！后来才知道，原来那女的怀孕了。。。。可怜我 的脸啊 。。。疼了几天！ ]</msg>
<status status="PASS" starttime="20181118 11:29:19.627" endtime="20181118 11:29:19.627"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:29:19.627" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1738; </msg>
<status status="PASS" starttime="20181118 11:29:19.627" endtime="20181118 11:29:19.937"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:29:19.947" level="INFO">1738</msg>
<msg timestamp="20181118 11:29:19.947" level="INFO">我掏口袋的时候，一把钥匙掉了，当时没有发现，后来回去找！在路边有对小情侣在 那里，男的突然激动的说：是 谁的？到底是谁的？我当时以为是钥匙，连忙说：我的，我的 ！是我的！！后来才知道，原来那女的怀孕了。。。。可怜我 的脸啊 。。。疼了几天！</msg>
<status status="PASS" starttime="20181118 11:29:19.937" endtime="20181118 11:29:19.947"></status>
</kw>
<msg timestamp="20181118 11:29:19.947" level="INFO">${aJoke} = 我掏口袋的时候，一把钥匙掉了，当时没有发现，后来回去找！在路边有对小情侣在 那里，男的突然激动的说：是 谁的？到底是谁的？我当时以为是钥匙，连忙说：我的，我的 ！是我的！！后来才知道，原来那女的怀孕了。。。。可怜我 的脸啊 。。。疼了几天！</msg>
<status status="PASS" starttime="20181118 11:29:19.577" endtime="20181118 11:29:19.947"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:29:19.947" level="INFO">Typing text '我掏口袋的时候，一把钥匙掉了，当时没有发现，后来回去找！在路边有对小情侣在 那里，男的突然激动的说：是 谁的？到底是谁的？我当时以为是钥匙，连忙说：我的，我的 ！是我的！！后来才知道，原来那女的怀孕了。。。。可怜我 的脸啊 。。。疼了几天！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:29:19.947" endtime="20181118 11:29:33.029"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:29:33.029" endtime="20181118 11:29:37.913"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:29:37.913" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:29:37.913" endtime="20181118 11:29:44.076"></status>
</kw>
<status status="PASS" starttime="20181118 11:29:19.567" endtime="20181118 11:29:44.086"></status>
</kw>
<kw name="${index} = 45" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:29:44.086" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:29:44.086" endtime="20181118 11:29:44.086"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:29:44.096" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:29:44.086" endtime="20181118 11:29:44.136"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:29:44.136" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:29:44.146" level="INFO">@{queryResults} = [ (1739, '早上上班碰到女神等电梯，相继 最后两个挤进去，电梯超载了，我走出来 ，电梯还是响，女神走出来了，gc是我特2 的又走进去，结果电梯没响。女神幽怨的看着我的眼神…我知道，我以后没戏了。h') ]</msg>
<status status="PASS" starttime="20181118 11:29:44.136" endtime="20181118 11:29:44.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:29:44.156" level="INFO">@{results} = [ 1739 | 早上上班碰到女神等电梯，相继 最后两个挤进去，电梯超载了，我走出来 ，电梯还是响，女神走出来了，gc是我特2 的又走进去，结果电梯没响。女神幽怨的看着我的眼神…我知道，我以后没戏了。h ]</msg>
<status status="PASS" starttime="20181118 11:29:44.146" endtime="20181118 11:29:44.156"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:29:44.156" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1739; </msg>
<status status="PASS" starttime="20181118 11:29:44.156" endtime="20181118 11:29:44.166"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:29:44.166" level="INFO">1739</msg>
<msg timestamp="20181118 11:29:44.166" level="INFO">早上上班碰到女神等电梯，相继 最后两个挤进去，电梯超载了，我走出来 ，电梯还是响，女神走出来了，gc是我特2 的又走进去，结果电梯没响。女神幽怨的看着我的眼神…我知道，我以后没戏了。h</msg>
<status status="PASS" starttime="20181118 11:29:44.166" endtime="20181118 11:29:44.166"></status>
</kw>
<msg timestamp="20181118 11:29:44.176" level="INFO">${aJoke} = 早上上班碰到女神等电梯，相继 最后两个挤进去，电梯超载了，我走出来 ，电梯还是响，女神走出来了，gc是我特2 的又走进去，结果电梯没响。女神幽怨的看着我的眼神…我知道，我以后没戏了。h</msg>
<status status="PASS" starttime="20181118 11:29:44.086" endtime="20181118 11:29:44.176"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:29:44.176" level="INFO">Typing text '早上上班碰到女神等电梯，相继 最后两个挤进去，电梯超载了，我走出来 ，电梯还是响，女神走出来了，gc是我特2 的又走进去，结果电梯没响。女神幽怨的看着我的眼神…我知道，我以后没戏了。h' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:29:44.176" endtime="20181118 11:29:56.158"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:29:56.168" endtime="20181118 11:30:00.508"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:30:00.508" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:30:00.508" endtime="20181118 11:30:04.517"></status>
</kw>
<status status="PASS" starttime="20181118 11:29:44.086" endtime="20181118 11:30:04.517"></status>
</kw>
<kw name="${index} = 46" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:30:04.527" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:30:04.527" endtime="20181118 11:30:04.527"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:30:04.527" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:30:04.527" endtime="20181118 11:30:04.587"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:30:04.587" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:30:04.617" level="INFO">@{queryResults} = [ (1740, '一男像一女求婚，女的从床底拿出一个箱子说 只要你不打开这个箱子我就嫁给你。男的答应了，结婚三年里他都没打开箱子，终于有一天他没忍住，打开了，只见里面有三个鸡蛋和五千元钱，不解。老婆回来后，他向她承认错误，但他一直想知道箱子里为什么放那些东西。女的有些愧疚，然后坦白了：我每偷情一次，就在里面放一个鸡蛋。男的一想，三年里偷情三次，不多，还可以原谅，那五千元钱是怎么回事？他问。鸡蛋攒...</msg>
<status status="PASS" starttime="20181118 11:30:04.587" endtime="20181118 11:30:04.617"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:30:04.617" level="INFO">@{results} = [ 1740 | 一男像一女求婚，女的从床底拿出一个箱子说 只要你不打开这个箱子我就嫁给你。男的答应了，结婚三年里他都没打开箱子，终于有一天他没忍住，打开了，只见里面有三个鸡蛋和五千元钱，不解。老婆回来后，他向她承认错误，但他一直想知道箱子里为什么放那些东西。女的有些愧疚，然后坦白了：我每偷情一次，就在里面放一个鸡蛋。男的一想，三年里偷情三次，不多，还可以原谅，那五千元钱是怎么回事？他问。鸡蛋攒不...</msg>
<status status="PASS" starttime="20181118 11:30:04.617" endtime="20181118 11:30:04.617"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:30:04.617" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1740; </msg>
<status status="PASS" starttime="20181118 11:30:04.617" endtime="20181118 11:30:04.927"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:30:04.937" level="INFO">1740</msg>
<msg timestamp="20181118 11:30:04.937" level="INFO">一男像一女求婚，女的从床底拿出一个箱子说 只要你不打开这个箱子我就嫁给你。男的答应了，结婚三年里他都没打开箱子，终于有一天他没忍住，打开了，只见里面有三个鸡蛋和五千元钱，不解。老婆回来后，他向她承认错误，但他一直想知道箱子里为什么放那些东西。女的有些愧疚，然后坦白了：我每偷情一次，就在里面放一个鸡蛋。男的一想，三年里偷情三次，不多，还可以原谅，那五千元钱是怎么回事？他问。鸡蛋攒不下我当然要卖了 要卖了 卖了 了。。。。。。。。。</msg>
<status status="PASS" starttime="20181118 11:30:04.927" endtime="20181118 11:30:04.937"></status>
</kw>
<msg timestamp="20181118 11:30:04.937" level="INFO">${aJoke} = 一男像一女求婚，女的从床底拿出一个箱子说 只要你不打开这个箱子我就嫁给你。男的答应了，结婚三年里他都没打开箱子，终于有一天他没忍住，打开了，只见里面有三个鸡蛋和五千元钱，不解。老婆回来后，他向她承认错误，但他一直想知道箱子里为什么放那些东西。女的有些愧疚，然后坦白了：我每偷情一次，就在里面放一个鸡蛋。男的一想，三年里偷情三次，不多，还可以原谅，那五千元钱是怎么回事？他问。鸡蛋攒不下我当然要卖了 要...</msg>
<status status="PASS" starttime="20181118 11:30:04.517" endtime="20181118 11:30:04.937"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:30:04.937" level="INFO">Typing text '一男像一女求婚，女的从床底拿出一个箱子说 只要你不打开这个箱子我就嫁给你。男的答应了，结婚三年里他都没打开箱子，终于有一天他没忍住，打开了，只见里面有三个鸡蛋和五千元钱，不解。老婆回来后，他向她承认错误，但他一直想知道箱子里为什么放那些东西。女的有些愧疚，然后坦白了：我每偷情一次，就在里面放一个鸡蛋。男的一想，三年里偷情三次，不多，还可以原谅，那五千元钱是怎么回事？他问。鸡蛋攒不下我当然要卖了 要卖了 卖了 了。。。。。。。。。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:30:04.937" endtime="20181118 11:30:21.639"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:30:21.639" endtime="20181118 11:30:26.213"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:30:26.213" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:30:26.213" endtime="20181118 11:30:30.095"></status>
</kw>
<status status="PASS" starttime="20181118 11:30:04.517" endtime="20181118 11:30:30.095"></status>
</kw>
<kw name="${index} = 47" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:30:30.095" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:30:30.095" endtime="20181118 11:30:30.095"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:30:30.095" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:30:30.095" endtime="20181118 11:30:30.135"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:30:30.135" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:30:30.165" level="INFO">@{queryResults} = [ (1741, '\u3000\u3000刚刚去超市，结账的时候前面有一对情侣，男的有事要回家，女的对男的撒娇：为了跟你出来这一个小时，我在家化了两个小时的妆呢！我抬头一看，顺嘴说了一句：就化成这样？ \u3000\u3000幸好我跑得快啊！') ]</msg>
<status status="PASS" starttime="20181118 11:30:30.135" endtime="20181118 11:30:30.165"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:30:30.165" level="INFO">@{results} = [ 1741 | 　　刚刚去超市，结账的时候前面有一对情侣，男的有事要回家，女的对男的撒娇：为了跟你出来这一个小时，我在家化了两个小时的妆呢！我抬头一看，顺嘴说了一句：就化成这样？ 　　幸好我跑得快啊！ ]</msg>
<status status="PASS" starttime="20181118 11:30:30.165" endtime="20181118 11:30:30.165"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:30:30.165" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1741; </msg>
<status status="PASS" starttime="20181118 11:30:30.165" endtime="20181118 11:30:30.195"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:30:30.195" level="INFO">1741</msg>
<msg timestamp="20181118 11:30:30.195" level="INFO">　　刚刚去超市，结账的时候前面有一对情侣，男的有事要回家，女的对男的撒娇：为了跟你出来这一个小时，我在家化了两个小时的妆呢！我抬头一看，顺嘴说了一句：就化成这样？ 　　幸好我跑得快啊！</msg>
<status status="PASS" starttime="20181118 11:30:30.195" endtime="20181118 11:30:30.195"></status>
</kw>
<msg timestamp="20181118 11:30:30.195" level="INFO">${aJoke} = 　　刚刚去超市，结账的时候前面有一对情侣，男的有事要回家，女的对男的撒娇：为了跟你出来这一个小时，我在家化了两个小时的妆呢！我抬头一看，顺嘴说了一句：就化成这样？ 　　幸好我跑得快啊！</msg>
<status status="PASS" starttime="20181118 11:30:30.095" endtime="20181118 11:30:30.195"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:30:30.195" level="INFO">Typing text '　　刚刚去超市，结账的时候前面有一对情侣，男的有事要回家，女的对男的撒娇：为了跟你出来这一个小时，我在家化了两个小时的妆呢！我抬头一看，顺嘴说了一句：就化成这样？ 　　幸好我跑得快啊！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:30:30.195" endtime="20181118 11:30:40.787"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:30:40.787" endtime="20181118 11:30:44.704"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:30:44.704" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:30:44.704" endtime="20181118 11:30:49.404"></status>
</kw>
<status status="PASS" starttime="20181118 11:30:30.095" endtime="20181118 11:30:49.404"></status>
</kw>
<kw name="${index} = 48" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:30:49.414" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:30:49.414" endtime="20181118 11:30:49.414"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:30:49.414" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:30:49.414" endtime="20181118 11:30:49.434"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:30:49.434" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:30:49.444" level="INFO">@{queryResults} = [ (1742, '想起上初中时，老师说过最坑爹的话是：这篇文言文，我不要求你们会背，只要你们会默写就行了！') ]</msg>
<status status="PASS" starttime="20181118 11:30:49.434" endtime="20181118 11:30:49.444"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:30:49.444" level="INFO">@{results} = [ 1742 | 想起上初中时，老师说过最坑爹的话是：这篇文言文，我不要求你们会背，只要你们会默写就行了！ ]</msg>
<status status="PASS" starttime="20181118 11:30:49.444" endtime="20181118 11:30:49.444"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:30:49.444" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1742; </msg>
<status status="PASS" starttime="20181118 11:30:49.444" endtime="20181118 11:30:49.754"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:30:49.754" level="INFO">1742</msg>
<msg timestamp="20181118 11:30:49.754" level="INFO">想起上初中时，老师说过最坑爹的话是：这篇文言文，我不要求你们会背，只要你们会默写就行了！</msg>
<status status="PASS" starttime="20181118 11:30:49.754" endtime="20181118 11:30:49.754"></status>
</kw>
<msg timestamp="20181118 11:30:49.754" level="INFO">${aJoke} = 想起上初中时，老师说过最坑爹的话是：这篇文言文，我不要求你们会背，只要你们会默写就行了！</msg>
<status status="PASS" starttime="20181118 11:30:49.414" endtime="20181118 11:30:49.764"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:30:49.764" level="INFO">Typing text '想起上初中时，老师说过最坑爹的话是：这篇文言文，我不要求你们会背，只要你们会默写就行了！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:30:49.764" endtime="20181118 11:31:00.685"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:31:00.685" endtime="20181118 11:31:06.320"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:31:06.320" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:31:06.320" endtime="20181118 11:31:10.414"></status>
</kw>
<status status="PASS" starttime="20181118 11:30:49.404" endtime="20181118 11:31:10.414"></status>
</kw>
<kw name="${index} = 49" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:31:10.424" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:31:10.424" endtime="20181118 11:31:10.424"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:31:10.424" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:31:10.424" endtime="20181118 11:31:10.484"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:31:10.484" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:31:10.514" level="INFO">@{queryResults} = [ (1743, '【征女友】条件一：性别女。条件二：会做饭。如果条件二满足得特别好，条件一可以适当放宽。') ]</msg>
<status status="PASS" starttime="20181118 11:31:10.484" endtime="20181118 11:31:10.514"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:31:10.514" level="INFO">@{results} = [ 1743 | 【征女友】条件一：性别女。条件二：会做饭。如果条件二满足得特别好，条件一可以适当放宽。 ]</msg>
<status status="PASS" starttime="20181118 11:31:10.514" endtime="20181118 11:31:10.514"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:31:10.514" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1743; </msg>
<status status="PASS" starttime="20181118 11:31:10.514" endtime="20181118 11:31:10.848"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:31:10.848" level="INFO">1743</msg>
<msg timestamp="20181118 11:31:10.848" level="INFO">【征女友】条件一：性别女。条件二：会做饭。如果条件二满足得特别好，条件一可以适当放宽。</msg>
<status status="PASS" starttime="20181118 11:31:10.848" endtime="20181118 11:31:10.848"></status>
</kw>
<msg timestamp="20181118 11:31:10.848" level="INFO">${aJoke} = 【征女友】条件一：性别女。条件二：会做饭。如果条件二满足得特别好，条件一可以适当放宽。</msg>
<status status="PASS" starttime="20181118 11:31:10.424" endtime="20181118 11:31:10.848"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:31:10.858" level="INFO">Typing text '【征女友】条件一：性别女。条件二：会做饭。如果条件二满足得特别好，条件一可以适当放宽。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:31:10.858" endtime="20181118 11:31:19.809"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:31:19.809" endtime="20181118 11:31:23.319"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:31:23.319" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:31:23.319" endtime="20181118 11:31:26.091"></status>
</kw>
<status status="PASS" starttime="20181118 11:31:10.414" endtime="20181118 11:31:26.091"></status>
</kw>
<kw name="${index} = 50" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:31:26.101" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:31:26.101" endtime="20181118 11:31:26.101"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:31:26.111" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:31:26.101" endtime="20181118 11:31:26.131"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:31:26.141" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:31:26.171" level="INFO">@{queryResults} = [ (1744, '听了这么一个笑话：两个县争取一个国家级贫困县的名额，最后一个县失败了。记者问那个失败县的县长：为什么会失败？县长含泪回答：因为我们县实在太穷了，拿不出像样的礼品。。。') ]</msg>
<status status="PASS" starttime="20181118 11:31:26.131" endtime="20181118 11:31:26.171"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:31:26.171" level="INFO">@{results} = [ 1744 | 听了这么一个笑话：两个县争取一个国家级贫困县的名额，最后一个县失败了。记者问那个失败县的县长：为什么会失败？县长含泪回答：因为我们县实在太穷了，拿不出像样的礼品。。。 ]</msg>
<status status="PASS" starttime="20181118 11:31:26.171" endtime="20181118 11:31:26.171"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:31:26.171" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1744; </msg>
<status status="PASS" starttime="20181118 11:31:26.171" endtime="20181118 11:31:26.211"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:31:26.221" level="INFO">1744</msg>
<msg timestamp="20181118 11:31:26.221" level="INFO">听了这么一个笑话：两个县争取一个国家级贫困县的名额，最后一个县失败了。记者问那个失败县的县长：为什么会失败？县长含泪回答：因为我们县实在太穷了，拿不出像样的礼品。。。</msg>
<status status="PASS" starttime="20181118 11:31:26.221" endtime="20181118 11:31:26.221"></status>
</kw>
<msg timestamp="20181118 11:31:26.221" level="INFO">${aJoke} = 听了这么一个笑话：两个县争取一个国家级贫困县的名额，最后一个县失败了。记者问那个失败县的县长：为什么会失败？县长含泪回答：因为我们县实在太穷了，拿不出像样的礼品。。。</msg>
<status status="PASS" starttime="20181118 11:31:26.101" endtime="20181118 11:31:26.221"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:31:26.221" level="INFO">Typing text '听了这么一个笑话：两个县争取一个国家级贫困县的名额，最后一个县失败了。记者问那个失败县的县长：为什么会失败？县长含泪回答：因为我们县实在太穷了，拿不出像样的礼品。。。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:31:26.221" endtime="20181118 11:31:37.317"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:31:37.317" endtime="20181118 11:31:40.924"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:31:40.924" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:31:40.924" endtime="20181118 11:31:43.807"></status>
</kw>
<status status="PASS" starttime="20181118 11:31:26.101" endtime="20181118 11:31:43.807"></status>
</kw>
<kw name="${index} = 51" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:31:43.807" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:31:43.807" endtime="20181118 11:31:43.807"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:31:43.817" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:31:43.807" endtime="20181118 11:31:43.847"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:31:43.847" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:31:43.857" level="INFO">@{queryResults} = [ (1745, '李小马：王尼玛你擦屁股是用左手还是右手？ 王尼玛（好像没什么不对）：有时左手，有时右手。。 李小马：我们都用纸擦，，你居然用手！！ v 王尼玛：我操操操操。。。。我要把我的双手塞进你的嘴里。。。。。') ]</msg>
<status status="PASS" starttime="20181118 11:31:43.847" endtime="20181118 11:31:43.857"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:31:43.867" level="INFO">@{results} = [ 1745 | 李小马：王尼玛你擦屁股是用左手还是右手？ 王尼玛（好像没什么不对）：有时左手，有时右手。。 李小马：我们都用纸擦，，你居然用手！！ v 王尼玛：我操操操操。。。。我要把我的双手塞进你的嘴里。。。。。 ]</msg>
<status status="PASS" starttime="20181118 11:31:43.867" endtime="20181118 11:31:43.867"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:31:43.867" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1745; </msg>
<status status="PASS" starttime="20181118 11:31:43.867" endtime="20181118 11:31:44.197"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:31:44.197" level="INFO">1745</msg>
<msg timestamp="20181118 11:31:44.197" level="INFO">李小马：王尼玛你擦屁股是用左手还是右手？ 王尼玛（好像没什么不对）：有时左手，有时右手。。 李小马：我们都用纸擦，，你居然用手！！ v 王尼玛：我操操操操。。。。我要把我的双手塞进你的嘴里。。。。。</msg>
<status status="PASS" starttime="20181118 11:31:44.197" endtime="20181118 11:31:44.197"></status>
</kw>
<msg timestamp="20181118 11:31:44.197" level="INFO">${aJoke} = 李小马：王尼玛你擦屁股是用左手还是右手？ 王尼玛（好像没什么不对）：有时左手，有时右手。。 李小马：我们都用纸擦，，你居然用手！！ v 王尼玛：我操操操操。。。。我要把我的双手塞进你的嘴里。。。。。</msg>
<status status="PASS" starttime="20181118 11:31:43.807" endtime="20181118 11:31:44.197"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:31:44.197" level="INFO">Typing text '李小马：王尼玛你擦屁股是用左手还是右手？ 王尼玛（好像没什么不对）：有时左手，有时右手。。 李小马：我们都用纸擦，，你居然用手！！ v 王尼玛：我操操操操。。。。我要把我的双手塞进你的嘴里。。。。。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:31:44.197" endtime="20181118 11:31:55.240"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:31:55.240" endtime="20181118 11:31:58.749"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:31:58.749" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:31:58.749" endtime="20181118 11:32:01.680"></status>
</kw>
<status status="PASS" starttime="20181118 11:31:43.807" endtime="20181118 11:32:01.680"></status>
</kw>
<kw name="${index} = 52" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:32:01.690" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:32:01.690" endtime="20181118 11:32:01.690"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:32:01.690" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:32:01.690" endtime="20181118 11:32:01.760"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:32:01.770" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:32:01.800" level="INFO">@{queryResults} = [ (1746, '上课老师说：找个八十斤女朋友是骨感， 找个100斤的女朋友是性感，找个120斤的 女朋友是肉感，找个140斤的女朋友是情感 ，找个180斤的女朋友，你那是幽默感') ]</msg>
<status status="PASS" starttime="20181118 11:32:01.770" endtime="20181118 11:32:01.800"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:32:01.800" level="INFO">@{results} = [ 1746 | 上课老师说：找个八十斤女朋友是骨感， 找个100斤的女朋友是性感，找个120斤的 女朋友是肉感，找个140斤的女朋友是情感 ，找个180斤的女朋友，你那是幽默感 ]</msg>
<status status="PASS" starttime="20181118 11:32:01.800" endtime="20181118 11:32:01.800"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:32:01.811" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1746; </msg>
<status status="PASS" starttime="20181118 11:32:01.811" endtime="20181118 11:32:01.861"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:32:01.861" level="INFO">1746</msg>
<msg timestamp="20181118 11:32:01.861" level="INFO">上课老师说：找个八十斤女朋友是骨感， 找个100斤的女朋友是性感，找个120斤的 女朋友是肉感，找个140斤的女朋友是情感 ，找个180斤的女朋友，你那是幽默感</msg>
<status status="PASS" starttime="20181118 11:32:01.861" endtime="20181118 11:32:01.861"></status>
</kw>
<msg timestamp="20181118 11:32:01.861" level="INFO">${aJoke} = 上课老师说：找个八十斤女朋友是骨感， 找个100斤的女朋友是性感，找个120斤的 女朋友是肉感，找个140斤的女朋友是情感 ，找个180斤的女朋友，你那是幽默感</msg>
<status status="PASS" starttime="20181118 11:32:01.690" endtime="20181118 11:32:01.861"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:32:01.871" level="INFO">Typing text '上课老师说：找个八十斤女朋友是骨感， 找个100斤的女朋友是性感，找个120斤的 女朋友是肉感，找个140斤的女朋友是情感 ，找个180斤的女朋友，你那是幽默感' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:32:01.861" endtime="20181118 11:32:12.419"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:32:12.419" endtime="20181118 11:32:19.547"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:32:19.557" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:32:19.547" endtime="20181118 11:32:26.179"></status>
</kw>
<status status="PASS" starttime="20181118 11:32:01.680" endtime="20181118 11:32:26.179"></status>
</kw>
<kw name="${index} = 53" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:32:26.189" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:32:26.189" endtime="20181118 11:32:26.189"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:32:26.189" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:32:26.189" endtime="20181118 11:32:26.219"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:32:26.219" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:32:26.259" level="INFO">@{queryResults} = [ (1747, '一姑凉和一个帅锅合租。一天晚上回来，姑凉失恋心情很沮丧，然后那个帅锅就很体贴地给她烧了碗面吃，她觉得很温馨，于是很感动地说：“我们就这么凑合过算了～”没想到帅锅却从凳子上跳起来说道：“那可不行，你没男人要，我可有男人要的！”\u3000') ]</msg>
<status status="PASS" starttime="20181118 11:32:26.219" endtime="20181118 11:32:26.259"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:32:26.259" level="INFO">@{results} = [ 1747 | 一姑凉和一个帅锅合租。一天晚上回来，姑凉失恋心情很沮丧，然后那个帅锅就很体贴地给她烧了碗面吃，她觉得很温馨，于是很感动地说：“我们就这么凑合过算了～”没想到帅锅却从凳子上跳起来说道：“那可不行，你没男人要，我可有男人要的！”　 ]</msg>
<status status="PASS" starttime="20181118 11:32:26.259" endtime="20181118 11:32:26.259"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:32:26.259" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1747; </msg>
<status status="PASS" starttime="20181118 11:32:26.259" endtime="20181118 11:32:26.299"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:32:26.299" level="INFO">1747</msg>
<msg timestamp="20181118 11:32:26.299" level="INFO">一姑凉和一个帅锅合租。一天晚上回来，姑凉失恋心情很沮丧，然后那个帅锅就很体贴地给她烧了碗面吃，她觉得很温馨，于是很感动地说：“我们就这么凑合过算了～”没想到帅锅却从凳子上跳起来说道：“那可不行，你没男人要，我可有男人要的！”　</msg>
<status status="PASS" starttime="20181118 11:32:26.299" endtime="20181118 11:32:26.299"></status>
</kw>
<msg timestamp="20181118 11:32:26.299" level="INFO">${aJoke} = 一姑凉和一个帅锅合租。一天晚上回来，姑凉失恋心情很沮丧，然后那个帅锅就很体贴地给她烧了碗面吃，她觉得很温馨，于是很感动地说：“我们就这么凑合过算了～”没想到帅锅却从凳子上跳起来说道：“那可不行，你没男人要，我可有男人要的！”　</msg>
<status status="PASS" starttime="20181118 11:32:26.189" endtime="20181118 11:32:26.299"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:32:26.309" level="INFO">Typing text '一姑凉和一个帅锅合租。一天晚上回来，姑凉失恋心情很沮丧，然后那个帅锅就很体贴地给她烧了碗面吃，她觉得很温馨，于是很感动地说：“我们就这么凑合过算了～”没想到帅锅却从凳子上跳起来说道：“那可不行，你没男人要，我可有男人要的！”　' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:32:26.309" endtime="20181118 11:32:38.387"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:32:38.387" endtime="20181118 11:32:41.909"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:32:41.909" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:32:41.909" endtime="20181118 11:32:44.255"></status>
</kw>
<status status="PASS" starttime="20181118 11:32:26.179" endtime="20181118 11:32:44.255"></status>
</kw>
<kw name="${index} = 54" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:32:44.255" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:32:44.255" endtime="20181118 11:32:44.255"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:32:44.255" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:32:44.255" endtime="20181118 11:32:44.275"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:32:44.275" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:32:44.305" level="INFO">@{queryResults} = [ (1748, '大学某女为报复男友提出的分手要求，遂与男友寝室哥们拍拖，出双入对卿卿我我。终于将前男友激怒，前男友指着她鼻子骂道：你个贱货，都分手了，你还来抢我男人！。') ]</msg>
<status status="PASS" starttime="20181118 11:32:44.275" endtime="20181118 11:32:44.305"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:32:44.305" level="INFO">@{results} = [ 1748 | 大学某女为报复男友提出的分手要求，遂与男友寝室哥们拍拖，出双入对卿卿我我。终于将前男友激怒，前男友指着她鼻子骂道：你个贱货，都分手了，你还来抢我男人！。 ]</msg>
<status status="PASS" starttime="20181118 11:32:44.305" endtime="20181118 11:32:44.315"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:32:44.315" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1748; </msg>
<status status="PASS" starttime="20181118 11:32:44.315" endtime="20181118 11:32:44.605"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:32:44.605" level="INFO">1748</msg>
<msg timestamp="20181118 11:32:44.615" level="INFO">大学某女为报复男友提出的分手要求，遂与男友寝室哥们拍拖，出双入对卿卿我我。终于将前男友激怒，前男友指着她鼻子骂道：你个贱货，都分手了，你还来抢我男人！。</msg>
<status status="PASS" starttime="20181118 11:32:44.605" endtime="20181118 11:32:44.615"></status>
</kw>
<msg timestamp="20181118 11:32:44.615" level="INFO">${aJoke} = 大学某女为报复男友提出的分手要求，遂与男友寝室哥们拍拖，出双入对卿卿我我。终于将前男友激怒，前男友指着她鼻子骂道：你个贱货，都分手了，你还来抢我男人！。</msg>
<status status="PASS" starttime="20181118 11:32:44.255" endtime="20181118 11:32:44.615"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:32:44.615" level="INFO">Typing text '大学某女为报复男友提出的分手要求，遂与男友寝室哥们拍拖，出双入对卿卿我我。终于将前男友激怒，前男友指着她鼻子骂道：你个贱货，都分手了，你还来抢我男人！。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:32:44.615" endtime="20181118 11:32:58.501"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:32:58.501" endtime="20181118 11:33:02.319"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:33:02.319" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:33:02.319" endtime="20181118 11:33:05.473"></status>
</kw>
<status status="PASS" starttime="20181118 11:32:44.255" endtime="20181118 11:33:05.473"></status>
</kw>
<kw name="${index} = 55" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:33:05.473" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:33:05.473" endtime="20181118 11:33:05.473"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:33:05.483" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:33:05.483" endtime="20181118 11:33:05.503"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:33:05.503" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:33:05.513" level="INFO">@{queryResults} = [ (1749, '"每天和女友一起坐地铁下班，不知何时开始，地铁口总有个帅哥倚在跑车上对她眉目传情，女友先是无视，但帅哥和跑车每天准时出现，渐渐女友脸上写满期待，对我越来越冷淡。一天，帅哥捧着红玫瑰问女友：“离开他好吗？”“当然”女友很兴奋。帅哥转向我：“她不爱你了，做我男朋友吧！”我接过了花束。"') ]</msg>
<status status="PASS" starttime="20181118 11:33:05.503" endtime="20181118 11:33:05.513"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:33:05.513" level="INFO">@{results} = [ 1749 | "每天和女友一起坐地铁下班，不知何时开始，地铁口总有个帅哥倚在跑车上对她眉目传情，女友先是无视，但帅哥和跑车每天准时出现，渐渐女友脸上写满期待，对我越来越冷淡。一天，帅哥捧着红玫瑰问女友：“离开他好吗？”“当然”女友很兴奋。帅哥转向我：“她不爱你了，做我男朋友吧！”我接过了花束。" ]</msg>
<status status="PASS" starttime="20181118 11:33:05.513" endtime="20181118 11:33:05.513"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:33:05.523" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1749; </msg>
<status status="PASS" starttime="20181118 11:33:05.513" endtime="20181118 11:33:05.808"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:33:05.808" level="INFO">1749</msg>
<msg timestamp="20181118 11:33:05.808" level="INFO">"每天和女友一起坐地铁下班，不知何时开始，地铁口总有个帅哥倚在跑车上对她眉目传情，女友先是无视，但帅哥和跑车每天准时出现，渐渐女友脸上写满期待，对我越来越冷淡。一天，帅哥捧着红玫瑰问女友：“离开他好吗？”“当然”女友很兴奋。帅哥转向我：“她不爱你了，做我男朋友吧！”我接过了花束。"</msg>
<status status="PASS" starttime="20181118 11:33:05.808" endtime="20181118 11:33:05.808"></status>
</kw>
<msg timestamp="20181118 11:33:05.808" level="INFO">${aJoke} = "每天和女友一起坐地铁下班，不知何时开始，地铁口总有个帅哥倚在跑车上对她眉目传情，女友先是无视，但帅哥和跑车每天准时出现，渐渐女友脸上写满期待，对我越来越冷淡。一天，帅哥捧着红玫瑰问女友：“离开他好吗？”“当然”女友很兴奋。帅哥转向我：“她不爱你了，做我男朋友吧！”我接过了花束。"</msg>
<status status="PASS" starttime="20181118 11:33:05.473" endtime="20181118 11:33:05.808"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:33:05.818" level="INFO">Typing text '"每天和女友一起坐地铁下班，不知何时开始，地铁口总有个帅哥倚在跑车上对她眉目传情，女友先是无视，但帅哥和跑车每天准时出现，渐渐女友脸上写满期待，对我越来越冷淡。一天，帅哥捧着红玫瑰问女友：“离开他好吗？”“当然”女友很兴奋。帅哥转向我：“她不爱你了，做我男朋友吧！”我接过了花束。"' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:33:05.818" endtime="20181118 11:33:18.774"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:33:18.774" endtime="20181118 11:33:22.511"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:33:22.511" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:33:22.511" endtime="20181118 11:33:25.414"></status>
</kw>
<status status="PASS" starttime="20181118 11:33:05.473" endtime="20181118 11:33:25.414"></status>
</kw>
<kw name="${index} = 56" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:33:25.424" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:33:25.424" endtime="20181118 11:33:25.424"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:33:25.424" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:33:25.424" endtime="20181118 11:33:25.504"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:33:25.504" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:33:25.544" level="INFO">@{queryResults} = [ (1750, '话说悟空买个手机天天给唐僧打电话，这天又拿起电话给他打，刚放到耳边就把电话摔地下了，八戒问：怎么了大师兄？悟空气愤说：MB的不想接老子电话，也不至于把彩铃换成紧箍咒啊...') ]</msg>
<status status="PASS" starttime="20181118 11:33:25.504" endtime="20181118 11:33:25.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:33:25.544" level="INFO">@{results} = [ 1750 | 话说悟空买个手机天天给唐僧打电话，这天又拿起电话给他打，刚放到耳边就把电话摔地下了，八戒问：怎么了大师兄？悟空气愤说：MB的不想接老子电话，也不至于把彩铃换成紧箍咒啊... ]</msg>
<status status="PASS" starttime="20181118 11:33:25.544" endtime="20181118 11:33:25.544"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:33:25.544" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1750; </msg>
<status status="PASS" starttime="20181118 11:33:25.544" endtime="20181118 11:33:25.574"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:33:25.574" level="INFO">1750</msg>
<msg timestamp="20181118 11:33:25.574" level="INFO">话说悟空买个手机天天给唐僧打电话，这天又拿起电话给他打，刚放到耳边就把电话摔地下了，八戒问：怎么了大师兄？悟空气愤说：MB的不想接老子电话，也不至于把彩铃换成紧箍咒啊...</msg>
<status status="PASS" starttime="20181118 11:33:25.574" endtime="20181118 11:33:25.574"></status>
</kw>
<msg timestamp="20181118 11:33:25.574" level="INFO">${aJoke} = 话说悟空买个手机天天给唐僧打电话，这天又拿起电话给他打，刚放到耳边就把电话摔地下了，八戒问：怎么了大师兄？悟空气愤说：MB的不想接老子电话，也不至于把彩铃换成紧箍咒啊...</msg>
<status status="PASS" starttime="20181118 11:33:25.414" endtime="20181118 11:33:25.574"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:33:25.584" level="INFO">Typing text '话说悟空买个手机天天给唐僧打电话，这天又拿起电话给他打，刚放到耳边就把电话摔地下了，八戒问：怎么了大师兄？悟空气愤说：MB的不想接老子电话，也不至于把彩铃换成紧箍咒啊...' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:33:25.584" endtime="20181118 11:33:36.902"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:33:36.902" endtime="20181118 11:33:40.636"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:33:40.636" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:33:40.636" endtime="20181118 11:33:46.096"></status>
</kw>
<status status="PASS" starttime="20181118 11:33:25.414" endtime="20181118 11:33:46.106"></status>
</kw>
<kw name="${index} = 57" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:33:46.106" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:33:46.106" endtime="20181118 11:33:46.106"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:33:46.116" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:33:46.106" endtime="20181118 11:33:46.166"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:33:46.166" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:33:46.196" level="INFO">@{queryResults} = [ (1751, '小白兔：“快问我快问我‘你是小白兔么？’” 大灰狼:“你是小白兔么？” 小白兔:“对啊对啊，我就是小白兔” 小白兔：“快问我快问我‘你是长颈鹿么？’” 大灰狼:“你是长颈鹿么？” 小白兔:“你傻啊，都告诉你我是小白兔了！” 大灰狼:“……”') ]</msg>
<status status="PASS" starttime="20181118 11:33:46.166" endtime="20181118 11:33:46.196"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:33:46.196" level="INFO">@{results} = [ 1751 | 小白兔：“快问我快问我‘你是小白兔么？’” 大灰狼:“你是小白兔么？” 小白兔:“对啊对啊，我就是小白兔” 小白兔：“快问我快问我‘你是长颈鹿么？’” 大灰狼:“你是长颈鹿么？” 小白兔:“你傻啊，都告诉你我是小白兔了！” 大灰狼:“……” ]</msg>
<status status="PASS" starttime="20181118 11:33:46.196" endtime="20181118 11:33:46.196"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:33:46.206" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1751; </msg>
<status status="PASS" starttime="20181118 11:33:46.196" endtime="20181118 11:33:46.497"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:33:46.497" level="INFO">1751</msg>
<msg timestamp="20181118 11:33:46.497" level="INFO">小白兔：“快问我快问我‘你是小白兔么？’” 大灰狼:“你是小白兔么？” 小白兔:“对啊对啊，我就是小白兔” 小白兔：“快问我快问我‘你是长颈鹿么？’” 大灰狼:“你是长颈鹿么？” 小白兔:“你傻啊，都告诉你我是小白兔了！” 大灰狼:“……”</msg>
<status status="PASS" starttime="20181118 11:33:46.497" endtime="20181118 11:33:46.497"></status>
</kw>
<msg timestamp="20181118 11:33:46.507" level="INFO">${aJoke} = 小白兔：“快问我快问我‘你是小白兔么？’” 大灰狼:“你是小白兔么？” 小白兔:“对啊对啊，我就是小白兔” 小白兔：“快问我快问我‘你是长颈鹿么？’” 大灰狼:“你是长颈鹿么？” 小白兔:“你傻啊，都告诉你我是小白兔了！” 大灰狼:“……”</msg>
<status status="PASS" starttime="20181118 11:33:46.106" endtime="20181118 11:33:46.507"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:33:46.507" level="INFO">Typing text '小白兔：“快问我快问我‘你是小白兔么？’” 大灰狼:“你是小白兔么？” 小白兔:“对啊对啊，我就是小白兔” 小白兔：“快问我快问我‘你是长颈鹿么？’” 大灰狼:“你是长颈鹿么？” 小白兔:“你傻啊，都告诉你我是小白兔了！” 大灰狼:“……”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:33:46.507" endtime="20181118 11:34:01.054"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:34:01.054" endtime="20181118 11:34:07.135"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:34:07.135" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:34:07.135" endtime="20181118 11:34:12.616"></status>
</kw>
<status status="PASS" starttime="20181118 11:33:46.106" endtime="20181118 11:34:12.616"></status>
</kw>
<kw name="${index} = 58" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:34:12.626" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:34:12.626" endtime="20181118 11:34:12.626"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:34:12.626" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:34:12.626" endtime="20181118 11:34:12.646"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:34:12.656" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:34:12.686" level="INFO">@{queryResults} = [ (1752, '今天和女友逛街，逛的实在太累了想回家休息但又不想扫女友性质，无奈中发现路边有一个地摊小贩在卖镀金的手镯项链之类的首饰，每条十元，我备着女友买了条很粗的“黄金项链”跟女友说：前面有个女的掉了条项链我捡到了，我们该怎么办。于是女友二话没说拉着我冲向回家的公交车站') ]</msg>
<status status="PASS" starttime="20181118 11:34:12.656" endtime="20181118 11:34:12.686"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:34:12.686" level="INFO">@{results} = [ 1752 | 今天和女友逛街，逛的实在太累了想回家休息但又不想扫女友性质，无奈中发现路边有一个地摊小贩在卖镀金的手镯项链之类的首饰，每条十元，我备着女友买了条很粗的“黄金项链”跟女友说：前面有个女的掉了条项链我捡到了，我们该怎么办。于是女友二话没说拉着我冲向回家的公交车站 ]</msg>
<status status="PASS" starttime="20181118 11:34:12.686" endtime="20181118 11:34:12.686"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:34:12.696" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1752; </msg>
<status status="PASS" starttime="20181118 11:34:12.696" endtime="20181118 11:34:13.016"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:34:13.016" level="INFO">1752</msg>
<msg timestamp="20181118 11:34:13.016" level="INFO">今天和女友逛街，逛的实在太累了想回家休息但又不想扫女友性质，无奈中发现路边有一个地摊小贩在卖镀金的手镯项链之类的首饰，每条十元，我备着女友买了条很粗的“黄金项链”跟女友说：前面有个女的掉了条项链我捡到了，我们该怎么办。于是女友二话没说拉着我冲向回家的公交车站</msg>
<status status="PASS" starttime="20181118 11:34:13.016" endtime="20181118 11:34:13.016"></status>
</kw>
<msg timestamp="20181118 11:34:13.016" level="INFO">${aJoke} = 今天和女友逛街，逛的实在太累了想回家休息但又不想扫女友性质，无奈中发现路边有一个地摊小贩在卖镀金的手镯项链之类的首饰，每条十元，我备着女友买了条很粗的“黄金项链”跟女友说：前面有个女的掉了条项链我捡到了，我们该怎么办。于是女友二话没说拉着我冲向回家的公交车站</msg>
<status status="PASS" starttime="20181118 11:34:12.616" endtime="20181118 11:34:13.016"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:34:13.026" level="INFO">Typing text '今天和女友逛街，逛的实在太累了想回家休息但又不想扫女友性质，无奈中发现路边有一个地摊小贩在卖镀金的手镯项链之类的首饰，每条十元，我备着女友买了条很粗的“黄金项链”跟女友说：前面有个女的掉了条项链我捡到了，我们该怎么办。于是女友二话没说拉着我冲向回家的公交车站' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:34:13.016" endtime="20181118 11:34:26.143"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:34:26.143" endtime="20181118 11:34:31.815"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:34:31.825" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:34:31.815" endtime="20181118 11:34:35.209"></status>
</kw>
<status status="PASS" starttime="20181118 11:34:12.616" endtime="20181118 11:34:35.209"></status>
</kw>
<kw name="${index} = 59" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:34:35.209" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:34:35.209" endtime="20181118 11:34:35.209"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:34:35.219" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:34:35.209" endtime="20181118 11:34:35.279"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:34:35.289" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:34:35.299" level="INFO">@{queryResults} = [ (1753, '寝室最小的哥们终于决定跟女朋友开房了，不过，他害羞的不敢去买tt，就求寝室老大帮着买于是乎，出现了以下场景：两个男生来到药店外，一个进去买tt，另一个羞涩的在门口等买完以后，两个人急匆匆地走了哎！老大一世英明就这么毁了！') ]</msg>
<status status="PASS" starttime="20181118 11:34:35.279" endtime="20181118 11:34:35.299"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:34:35.309" level="INFO">@{results} = [ 1753 | 寝室最小的哥们终于决定跟女朋友开房了，不过，他害羞的不敢去买tt，就求寝室老大帮着买于是乎，出现了以下场景：两个男生来到药店外，一个进去买tt，另一个羞涩的在门口等买完以后，两个人急匆匆地走了哎！老大一世英明就这么毁了！ ]</msg>
<status status="PASS" starttime="20181118 11:34:35.299" endtime="20181118 11:34:35.309"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:34:35.309" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1753; </msg>
<status status="PASS" starttime="20181118 11:34:35.309" endtime="20181118 11:34:35.669"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:34:35.679" level="INFO">1753</msg>
<msg timestamp="20181118 11:34:35.679" level="INFO">寝室最小的哥们终于决定跟女朋友开房了，不过，他害羞的不敢去买tt，就求寝室老大帮着买于是乎，出现了以下场景：两个男生来到药店外，一个进去买tt，另一个羞涩的在门口等买完以后，两个人急匆匆地走了哎！老大一世英明就这么毁了！</msg>
<status status="PASS" starttime="20181118 11:34:35.679" endtime="20181118 11:34:35.679"></status>
</kw>
<msg timestamp="20181118 11:34:35.679" level="INFO">${aJoke} = 寝室最小的哥们终于决定跟女朋友开房了，不过，他害羞的不敢去买tt，就求寝室老大帮着买于是乎，出现了以下场景：两个男生来到药店外，一个进去买tt，另一个羞涩的在门口等买完以后，两个人急匆匆地走了哎！老大一世英明就这么毁了！</msg>
<status status="PASS" starttime="20181118 11:34:35.209" endtime="20181118 11:34:35.679"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:34:35.679" level="INFO">Typing text '寝室最小的哥们终于决定跟女朋友开房了，不过，他害羞的不敢去买tt，就求寝室老大帮着买于是乎，出现了以下场景：两个男生来到药店外，一个进去买tt，另一个羞涩的在门口等买完以后，两个人急匆匆地走了哎！老大一世英明就这么毁了！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:34:35.679" endtime="20181118 11:34:47.792"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:34:47.792" endtime="20181118 11:34:51.559"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:34:51.559" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:34:51.559" endtime="20181118 11:34:55.348"></status>
</kw>
<status status="PASS" starttime="20181118 11:34:35.209" endtime="20181118 11:34:55.348"></status>
</kw>
<kw name="${index} = 60" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:34:55.358" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:34:55.358" endtime="20181118 11:34:55.358"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:34:55.358" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:34:55.358" endtime="20181118 11:34:55.388"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:34:55.388" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:34:55.418" level="INFO">@{queryResults} = [ (1754, '小明: 医生 我是不是有精神病 医生: 没有 你很正常 听到这句话后 ，小明松了一口气， 把架在医生脖子上的刀放了下来.') ]</msg>
<status status="PASS" starttime="20181118 11:34:55.388" endtime="20181118 11:34:55.418"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:34:55.418" level="INFO">@{results} = [ 1754 | 小明: 医生 我是不是有精神病 医生: 没有 你很正常 听到这句话后 ，小明松了一口气， 把架在医生脖子上的刀放了下来. ]</msg>
<status status="PASS" starttime="20181118 11:34:55.418" endtime="20181118 11:34:55.418"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:34:55.418" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1754; </msg>
<status status="PASS" starttime="20181118 11:34:55.418" endtime="20181118 11:34:55.458"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:34:55.458" level="INFO">1754</msg>
<msg timestamp="20181118 11:34:55.458" level="INFO">小明: 医生 我是不是有精神病 医生: 没有 你很正常 听到这句话后 ，小明松了一口气， 把架在医生脖子上的刀放了下来.</msg>
<status status="PASS" starttime="20181118 11:34:55.458" endtime="20181118 11:34:55.458"></status>
</kw>
<msg timestamp="20181118 11:34:55.458" level="INFO">${aJoke} = 小明: 医生 我是不是有精神病 医生: 没有 你很正常 听到这句话后 ，小明松了一口气， 把架在医生脖子上的刀放了下来.</msg>
<status status="PASS" starttime="20181118 11:34:55.358" endtime="20181118 11:34:55.458"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:34:55.458" level="INFO">Typing text '小明: 医生 我是不是有精神病 医生: 没有 你很正常 听到这句话后 ，小明松了一口气， 把架在医生脖子上的刀放了下来.' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:34:55.458" endtime="20181118 11:35:05.436"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:35:05.436" endtime="20181118 11:35:10.932"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:35:10.932" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:35:10.932" endtime="20181118 11:35:14.192"></status>
</kw>
<status status="PASS" starttime="20181118 11:34:55.348" endtime="20181118 11:35:14.192"></status>
</kw>
<kw name="${index} = 61" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:35:14.192" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:35:14.192" endtime="20181118 11:35:14.192"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:35:14.192" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:35:14.192" endtime="20181118 11:35:14.232"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:35:14.232" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:35:14.262" level="INFO">@{queryResults} = [ (1755, '最近一哥们聊天总是给我回拼音，我终于忍不住了，让他用汉字回复，他直接来了一句：没办法，最近雾霾太大，麻痹连输入法都看不见了。当时我就跪了…') ]</msg>
<status status="PASS" starttime="20181118 11:35:14.232" endtime="20181118 11:35:14.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:35:14.262" level="INFO">@{results} = [ 1755 | 最近一哥们聊天总是给我回拼音，我终于忍不住了，让他用汉字回复，他直接来了一句：没办法，最近雾霾太大，麻痹连输入法都看不见了。当时我就跪了… ]</msg>
<status status="PASS" starttime="20181118 11:35:14.262" endtime="20181118 11:35:14.262"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:35:14.262" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1755; </msg>
<status status="PASS" starttime="20181118 11:35:14.262" endtime="20181118 11:35:14.562"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:35:14.562" level="INFO">1755</msg>
<msg timestamp="20181118 11:35:14.562" level="INFO">最近一哥们聊天总是给我回拼音，我终于忍不住了，让他用汉字回复，他直接来了一句：没办法，最近雾霾太大，麻痹连输入法都看不见了。当时我就跪了…</msg>
<status status="PASS" starttime="20181118 11:35:14.562" endtime="20181118 11:35:14.562"></status>
</kw>
<msg timestamp="20181118 11:35:14.562" level="INFO">${aJoke} = 最近一哥们聊天总是给我回拼音，我终于忍不住了，让他用汉字回复，他直接来了一句：没办法，最近雾霾太大，麻痹连输入法都看不见了。当时我就跪了…</msg>
<status status="PASS" starttime="20181118 11:35:14.192" endtime="20181118 11:35:14.562"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:35:14.562" level="INFO">Typing text '最近一哥们聊天总是给我回拼音，我终于忍不住了，让他用汉字回复，他直接来了一句：没办法，最近雾霾太大，麻痹连输入法都看不见了。当时我就跪了…' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:35:14.562" endtime="20181118 11:35:28.013"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:35:28.013" endtime="20181118 11:35:34.441"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:35:34.441" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:35:34.441" endtime="20181118 11:35:39.052"></status>
</kw>
<status status="PASS" starttime="20181118 11:35:14.192" endtime="20181118 11:35:39.052"></status>
</kw>
<kw name="${index} = 62" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:35:39.052" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:35:39.052" endtime="20181118 11:35:39.062"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:35:39.062" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:35:39.062" endtime="20181118 11:35:39.092"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:35:39.092" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:35:39.112" level="INFO">@{queryResults} = [ (1756, '一青年问禅师，我叫吴瑙灿，因为我的名字，身边的人都管我叫脑残，我很苦恼，禅师:小施主名字只是个代号罢了，不用太在意，他们叫你脑残，只要你自己知道你不脑残就行了，只要你努力工作，做出点好成绩给他们看看，让叫你脑残的人连脑残都不如，美好的生活就在前方等着你，青年:听了大师的教诲突然茅塞顿开，多谢大师指点，敢问大师法号？老衲法号:智障！') ]</msg>
<status status="PASS" starttime="20181118 11:35:39.092" endtime="20181118 11:35:39.112"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:35:39.112" level="INFO">@{results} = [ 1756 | 一青年问禅师，我叫吴瑙灿，因为我的名字，身边的人都管我叫脑残，我很苦恼，禅师:小施主名字只是个代号罢了，不用太在意，他们叫你脑残，只要你自己知道你不脑残就行了，只要你努力工作，做出点好成绩给他们看看，让叫你脑残的人连脑残都不如，美好的生活就在前方等着你，青年:听了大师的教诲突然茅塞顿开，多谢大师指点，敢问大师法号？老衲法号:智障！ ]</msg>
<status status="PASS" starttime="20181118 11:35:39.112" endtime="20181118 11:35:39.112"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:35:39.112" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1756; </msg>
<status status="PASS" starttime="20181118 11:35:39.112" endtime="20181118 11:35:39.412"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:35:39.412" level="INFO">1756</msg>
<msg timestamp="20181118 11:35:39.422" level="INFO">一青年问禅师，我叫吴瑙灿，因为我的名字，身边的人都管我叫脑残，我很苦恼，禅师:小施主名字只是个代号罢了，不用太在意，他们叫你脑残，只要你自己知道你不脑残就行了，只要你努力工作，做出点好成绩给他们看看，让叫你脑残的人连脑残都不如，美好的生活就在前方等着你，青年:听了大师的教诲突然茅塞顿开，多谢大师指点，敢问大师法号？老衲法号:智障！</msg>
<status status="PASS" starttime="20181118 11:35:39.412" endtime="20181118 11:35:39.422"></status>
</kw>
<msg timestamp="20181118 11:35:39.422" level="INFO">${aJoke} = 一青年问禅师，我叫吴瑙灿，因为我的名字，身边的人都管我叫脑残，我很苦恼，禅师:小施主名字只是个代号罢了，不用太在意，他们叫你脑残，只要你自己知道你不脑残就行了，只要你努力工作，做出点好成绩给他们看看，让叫你脑残的人连脑残都不如，美好的生活就在前方等着你，青年:听了大师的教诲突然茅塞顿开，多谢大师指点，敢问大师法号？老衲法号:智障！</msg>
<status status="PASS" starttime="20181118 11:35:39.052" endtime="20181118 11:35:39.422"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:35:39.422" level="INFO">Typing text '一青年问禅师，我叫吴瑙灿，因为我的名字，身边的人都管我叫脑残，我很苦恼，禅师:小施主名字只是个代号罢了，不用太在意，他们叫你脑残，只要你自己知道你不脑残就行了，只要你努力工作，做出点好成绩给他们看看，让叫你脑残的人连脑残都不如，美好的生活就在前方等着你，青年:听了大师的教诲突然茅塞顿开，多谢大师指点，敢问大师法号？老衲法号:智障！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:35:39.422" endtime="20181118 11:35:54.178"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:35:54.178" endtime="20181118 11:35:58.830"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:35:58.830" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:35:58.830" endtime="20181118 11:36:03.882"></status>
</kw>
<status status="PASS" starttime="20181118 11:35:39.052" endtime="20181118 11:36:03.882"></status>
</kw>
<kw name="${index} = 63" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:36:03.882" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:36:03.882" endtime="20181118 11:36:03.882"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:36:03.892" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:36:03.882" endtime="20181118 11:36:03.922"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:36:03.922" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:36:03.952" level="INFO">@{queryResults} = [ (1757, '本人学渣一枚，考试中.试卷坑坑洼洼一大把没写，忽见学长递过一张纸条， 上面写满了答案。立马抄完.考完后问学长：“为什么把答案给我？” 答曰：“你试卷没写完，我看着难受.”') ]</msg>
<status status="PASS" starttime="20181118 11:36:03.922" endtime="20181118 11:36:03.952"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:36:03.952" level="INFO">@{results} = [ 1757 | 本人学渣一枚，考试中.试卷坑坑洼洼一大把没写，忽见学长递过一张纸条， 上面写满了答案。立马抄完.考完后问学长：“为什么把答案给我？” 答曰：“你试卷没写完，我看着难受.” ]</msg>
<status status="PASS" starttime="20181118 11:36:03.952" endtime="20181118 11:36:03.952"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:36:03.952" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1757; </msg>
<status status="PASS" starttime="20181118 11:36:03.952" endtime="20181118 11:36:04.232"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:36:04.242" level="INFO">1757</msg>
<msg timestamp="20181118 11:36:04.242" level="INFO">本人学渣一枚，考试中.试卷坑坑洼洼一大把没写，忽见学长递过一张纸条， 上面写满了答案。立马抄完.考完后问学长：“为什么把答案给我？” 答曰：“你试卷没写完，我看着难受.”</msg>
<status status="PASS" starttime="20181118 11:36:04.242" endtime="20181118 11:36:04.242"></status>
</kw>
<msg timestamp="20181118 11:36:04.242" level="INFO">${aJoke} = 本人学渣一枚，考试中.试卷坑坑洼洼一大把没写，忽见学长递过一张纸条， 上面写满了答案。立马抄完.考完后问学长：“为什么把答案给我？” 答曰：“你试卷没写完，我看着难受.”</msg>
<status status="PASS" starttime="20181118 11:36:03.882" endtime="20181118 11:36:04.242"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:36:04.242" level="INFO">Typing text '本人学渣一枚，考试中.试卷坑坑洼洼一大把没写，忽见学长递过一张纸条， 上面写满了答案。立马抄完.考完后问学长：“为什么把答案给我？” 答曰：“你试卷没写完，我看着难受.”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:36:04.242" endtime="20181118 11:36:16.564"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:36:16.564" endtime="20181118 11:36:20.863"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:36:20.863" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:36:20.863" endtime="20181118 11:36:24.411"></status>
</kw>
<status status="PASS" starttime="20181118 11:36:03.882" endtime="20181118 11:36:24.421"></status>
</kw>
<kw name="${index} = 64" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:36:24.421" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:36:24.421" endtime="20181118 11:36:24.421"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:36:24.421" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:36:24.421" endtime="20181118 11:36:24.451"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:36:24.451" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:36:24.461" level="INFO">@{queryResults} = [ (1758, '护士：“医生，出事了，刚给打完针的病人一出门晕倒了！” 医生：“快把她的身体调个位置，摆成要进门的样！”') ]</msg>
<status status="PASS" starttime="20181118 11:36:24.451" endtime="20181118 11:36:24.461"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:36:24.461" level="INFO">@{results} = [ 1758 | 护士：“医生，出事了，刚给打完针的病人一出门晕倒了！” 医生：“快把她的身体调个位置，摆成要进门的样！” ]</msg>
<status status="PASS" starttime="20181118 11:36:24.461" endtime="20181118 11:36:24.461"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:36:24.461" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1758; </msg>
<status status="PASS" starttime="20181118 11:36:24.461" endtime="20181118 11:36:24.511"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:36:24.511" level="INFO">1758</msg>
<msg timestamp="20181118 11:36:24.511" level="INFO">护士：“医生，出事了，刚给打完针的病人一出门晕倒了！” 医生：“快把她的身体调个位置，摆成要进门的样！”</msg>
<status status="PASS" starttime="20181118 11:36:24.511" endtime="20181118 11:36:24.511"></status>
</kw>
<msg timestamp="20181118 11:36:24.511" level="INFO">${aJoke} = 护士：“医生，出事了，刚给打完针的病人一出门晕倒了！” 医生：“快把她的身体调个位置，摆成要进门的样！”</msg>
<status status="PASS" starttime="20181118 11:36:24.421" endtime="20181118 11:36:24.511"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:36:24.511" level="INFO">Typing text '护士：“医生，出事了，刚给打完针的病人一出门晕倒了！” 医生：“快把她的身体调个位置，摆成要进门的样！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:36:24.511" endtime="20181118 11:36:34.288"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:36:34.288" endtime="20181118 11:36:38.904"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:36:38.904" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:36:38.904" endtime="20181118 11:36:43.397"></status>
</kw>
<status status="PASS" starttime="20181118 11:36:24.421" endtime="20181118 11:36:43.397"></status>
</kw>
<kw name="${index} = 65" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:36:43.407" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:36:43.407" endtime="20181118 11:36:43.407"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:36:43.407" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:36:43.407" endtime="20181118 11:36:43.427"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:36:43.427" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:36:43.457" level="INFO">@{queryResults} = [ (1759, '铃声响起，准备收卷。。。小明在空白的试卷里夹上1000块钱。然后写上10元一分 第二天，小明拿到了59分的试卷和找回来的410元。') ]</msg>
<status status="PASS" starttime="20181118 11:36:43.427" endtime="20181118 11:36:43.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:36:43.457" level="INFO">@{results} = [ 1759 | 铃声响起，准备收卷。。。小明在空白的试卷里夹上1000块钱。然后写上10元一分 第二天，小明拿到了59分的试卷和找回来的410元。 ]</msg>
<status status="PASS" starttime="20181118 11:36:43.457" endtime="20181118 11:36:43.457"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:36:43.457" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1759; </msg>
<status status="PASS" starttime="20181118 11:36:43.457" endtime="20181118 11:36:43.777"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:36:43.787" level="INFO">1759</msg>
<msg timestamp="20181118 11:36:43.787" level="INFO">铃声响起，准备收卷。。。小明在空白的试卷里夹上1000块钱。然后写上10元一分 第二天，小明拿到了59分的试卷和找回来的410元。</msg>
<status status="PASS" starttime="20181118 11:36:43.777" endtime="20181118 11:36:43.787"></status>
</kw>
<msg timestamp="20181118 11:36:43.787" level="INFO">${aJoke} = 铃声响起，准备收卷。。。小明在空白的试卷里夹上1000块钱。然后写上10元一分 第二天，小明拿到了59分的试卷和找回来的410元。</msg>
<status status="PASS" starttime="20181118 11:36:43.407" endtime="20181118 11:36:43.787"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:36:43.787" level="INFO">Typing text '铃声响起，准备收卷。。。小明在空白的试卷里夹上1000块钱。然后写上10元一分 第二天，小明拿到了59分的试卷和找回来的410元。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:36:43.787" endtime="20181118 11:36:54.978"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:36:54.978" endtime="20181118 11:36:59.187"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:36:59.197" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:36:59.187" endtime="20181118 11:37:03.238"></status>
</kw>
<status status="PASS" starttime="20181118 11:36:43.397" endtime="20181118 11:37:03.238"></status>
</kw>
<kw name="${index} = 66" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:37:03.248" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:37:03.248" endtime="20181118 11:37:03.248"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:37:03.248" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:37:03.248" endtime="20181118 11:37:03.268"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:37:03.268" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:37:03.278" level="INFO">@{queryResults} = [ (1760, '公交车上大多都是医学院的美女，这时上来一男的，手里拿着5S，各种玩各种炫耀，咱有点烦，到站我要下车时故意问他，你这手机多少钱？他故意把声音说的很大说6000多。尼玛，于是我也放大声音说，我草，这么贵，快赶上我半月工资了。然后我就下车了，那哥们还在看我！下车的还有几个美女，在我后边，然后我就装B进了我市有名酒店，就听见后面女的说这男的干嘛的，真有钱！进了酒店我走到收银台问:美女，...</msg>
<status status="PASS" starttime="20181118 11:37:03.268" endtime="20181118 11:37:03.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:37:03.278" level="INFO">@{results} = [ 1760 | 公交车上大多都是医学院的美女，这时上来一男的，手里拿着5S，各种玩各种炫耀，咱有点烦，到站我要下车时故意问他，你这手机多少钱？他故意把声音说的很大说6000多。尼玛，于是我也放大声音说，我草，这么贵，快赶上我半月工资了。然后我就下车了，那哥们还在看我！下车的还有几个美女，在我后边，然后我就装B进了我市有名酒店，就听见后面女的说这男的干嘛的，真有钱！进了酒店我走到收银台问:美女，酒...</msg>
<status status="PASS" starttime="20181118 11:37:03.278" endtime="20181118 11:37:03.278"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:37:03.278" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1760; </msg>
<status status="PASS" starttime="20181118 11:37:03.278" endtime="20181118 11:37:03.568"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:37:03.568" level="INFO">1760</msg>
<msg timestamp="20181118 11:37:03.568" level="INFO">公交车上大多都是医学院的美女，这时上来一男的，手里拿着5S，各种玩各种炫耀，咱有点烦，到站我要下车时故意问他，你这手机多少钱？他故意把声音说的很大说6000多。尼玛，于是我也放大声音说，我草，这么贵，快赶上我半月工资了。然后我就下车了，那哥们还在看我！下车的还有几个美女，在我后边，然后我就装B进了我市有名酒店，就听见后面女的说这男的干嘛的，真有钱！进了酒店我走到收银台问:美女，酒店招服务生吗？？</msg>
<status status="PASS" starttime="20181118 11:37:03.568" endtime="20181118 11:37:03.578"></status>
</kw>
<msg timestamp="20181118 11:37:03.578" level="INFO">${aJoke} = 公交车上大多都是医学院的美女，这时上来一男的，手里拿着5S，各种玩各种炫耀，咱有点烦，到站我要下车时故意问他，你这手机多少钱？他故意把声音说的很大说6000多。尼玛，于是我也放大声音说，我草，这么贵，快赶上我半月工资了。然后我就下车了，那哥们还在看我！下车的还有几个美女，在我后边，然后我就装B进了我市有名酒店，就听见后面女的说这男的干嘛的，真有钱！进了酒店我走到收银台问:美女，酒店招服务生吗？？</msg>
<status status="PASS" starttime="20181118 11:37:03.248" endtime="20181118 11:37:03.578"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:37:03.578" level="INFO">Typing text '公交车上大多都是医学院的美女，这时上来一男的，手里拿着5S，各种玩各种炫耀，咱有点烦，到站我要下车时故意问他，你这手机多少钱？他故意把声音说的很大说6000多。尼玛，于是我也放大声音说，我草，这么贵，快赶上我半月工资了。然后我就下车了，那哥们还在看我！下车的还有几个美女，在我后边，然后我就装B进了我市有名酒店，就听见后面女的说这男的干嘛的，真有钱！进了酒店我走到收银台问:美女，酒店招服务生吗？？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:37:03.578" endtime="20181118 11:37:19.448"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:37:19.448" endtime="20181118 11:37:23.758"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:37:23.758" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:37:23.758" endtime="20181118 11:37:26.776"></status>
</kw>
<status status="PASS" starttime="20181118 11:37:03.238" endtime="20181118 11:37:26.776"></status>
</kw>
<kw name="${index} = 67" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:37:26.786" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:37:26.786" endtime="20181118 11:37:26.786"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:37:26.796" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:37:26.786" endtime="20181118 11:37:26.816"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:37:26.816" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:37:26.829" level="INFO">@{queryResults} = [ (1761, '有一次我在地铁上假装睡着了，说白了就是想靠靠旁边的美女闻闻人家的香味，假装慢慢的靠近 没想到一大巴掌扇了过来，说“装你妈啊！ 刚进地铁坐下没1分钟就睡着了？') ]</msg>
<status status="PASS" starttime="20181118 11:37:26.816" endtime="20181118 11:37:26.829"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:37:26.829" level="INFO">@{results} = [ 1761 | 有一次我在地铁上假装睡着了，说白了就是想靠靠旁边的美女闻闻人家的香味，假装慢慢的靠近 没想到一大巴掌扇了过来，说“装你妈啊！ 刚进地铁坐下没1分钟就睡着了？ ]</msg>
<status status="PASS" starttime="20181118 11:37:26.829" endtime="20181118 11:37:26.829"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:37:26.829" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1761; </msg>
<status status="PASS" starttime="20181118 11:37:26.829" endtime="20181118 11:37:26.859"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:37:26.859" level="INFO">1761</msg>
<msg timestamp="20181118 11:37:26.859" level="INFO">有一次我在地铁上假装睡着了，说白了就是想靠靠旁边的美女闻闻人家的香味，假装慢慢的靠近 没想到一大巴掌扇了过来，说“装你妈啊！ 刚进地铁坐下没1分钟就睡着了？</msg>
<status status="PASS" starttime="20181118 11:37:26.859" endtime="20181118 11:37:26.859"></status>
</kw>
<msg timestamp="20181118 11:37:26.859" level="INFO">${aJoke} = 有一次我在地铁上假装睡着了，说白了就是想靠靠旁边的美女闻闻人家的香味，假装慢慢的靠近 没想到一大巴掌扇了过来，说“装你妈啊！ 刚进地铁坐下没1分钟就睡着了？</msg>
<status status="PASS" starttime="20181118 11:37:26.786" endtime="20181118 11:37:26.859"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:37:26.869" level="INFO">Typing text '有一次我在地铁上假装睡着了，说白了就是想靠靠旁边的美女闻闻人家的香味，假装慢慢的靠近 没想到一大巴掌扇了过来，说“装你妈啊！ 刚进地铁坐下没1分钟就睡着了？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:37:26.859" endtime="20181118 11:37:38.678"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:37:38.678" endtime="20181118 11:37:42.762"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:37:42.762" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:37:42.762" endtime="20181118 11:37:46.768"></status>
</kw>
<status status="PASS" starttime="20181118 11:37:26.786" endtime="20181118 11:37:46.768"></status>
</kw>
<kw name="${index} = 68" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:37:46.778" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:37:46.768" endtime="20181118 11:37:46.778"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:37:46.778" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:37:46.778" endtime="20181118 11:37:46.870"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:37:46.880" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:37:46.890" level="INFO">@{queryResults} = [ (1762, '她睁开眼，昨夜的醉意已经褪去，发现房子是新的，门口停的蘭博基尼是新的，淡蓝色的齐B小短裙凌乱地散在床边，而陌生的男人已经系好爱马仕腰带正要开门离去。她突然有些忧伤，脱口而出：我还不知道你的名字呢。男人回头，温柔笑道：就叫我干爹吧') ]</msg>
<status status="PASS" starttime="20181118 11:37:46.870" endtime="20181118 11:37:46.890"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:37:46.890" level="INFO">@{results} = [ 1762 | 她睁开眼，昨夜的醉意已经褪去，发现房子是新的，门口停的蘭博基尼是新的，淡蓝色的齐B小短裙凌乱地散在床边，而陌生的男人已经系好爱马仕腰带正要开门离去。她突然有些忧伤，脱口而出：我还不知道你的名字呢。男人回头，温柔笑道：就叫我干爹吧 ]</msg>
<status status="PASS" starttime="20181118 11:37:46.890" endtime="20181118 11:37:46.890"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:37:46.900" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1762; </msg>
<status status="PASS" starttime="20181118 11:37:46.890" endtime="20181118 11:37:47.192"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:37:47.202" level="INFO">1762</msg>
<msg timestamp="20181118 11:37:47.202" level="INFO">她睁开眼，昨夜的醉意已经褪去，发现房子是新的，门口停的蘭博基尼是新的，淡蓝色的齐B小短裙凌乱地散在床边，而陌生的男人已经系好爱马仕腰带正要开门离去。她突然有些忧伤，脱口而出：我还不知道你的名字呢。男人回头，温柔笑道：就叫我干爹吧</msg>
<status status="PASS" starttime="20181118 11:37:47.202" endtime="20181118 11:37:47.202"></status>
</kw>
<msg timestamp="20181118 11:37:47.202" level="INFO">${aJoke} = 她睁开眼，昨夜的醉意已经褪去，发现房子是新的，门口停的蘭博基尼是新的，淡蓝色的齐B小短裙凌乱地散在床边，而陌生的男人已经系好爱马仕腰带正要开门离去。她突然有些忧伤，脱口而出：我还不知道你的名字呢。男人回头，温柔笑道：就叫我干爹吧</msg>
<status status="PASS" starttime="20181118 11:37:46.768" endtime="20181118 11:37:47.202"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:37:47.202" level="INFO">Typing text '她睁开眼，昨夜的醉意已经褪去，发现房子是新的，门口停的蘭博基尼是新的，淡蓝色的齐B小短裙凌乱地散在床边，而陌生的男人已经系好爱马仕腰带正要开门离去。她突然有些忧伤，脱口而出：我还不知道你的名字呢。男人回头，温柔笑道：就叫我干爹吧' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:37:47.202" endtime="20181118 11:38:00.989"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:38:00.989" endtime="20181118 11:38:05.300"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:38:05.300" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:38:05.300" endtime="20181118 11:38:09.033"></status>
</kw>
<status status="PASS" starttime="20181118 11:37:46.768" endtime="20181118 11:38:09.033"></status>
</kw>
<kw name="${index} = 69" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:38:09.033" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:38:09.033" endtime="20181118 11:38:09.033"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:38:09.043" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:38:09.043" endtime="20181118 11:38:09.073"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:38:09.083" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:38:09.113" level="INFO">@{queryResults} = [ (1763, '因为和领导吵架，老子被炒鱿鱼后在夜市摆地摊卖鞋垫，结果碰到前女友，她可怜的眼光望着我问我鞋垫多少钱，我感觉我的自尊受到伤害，头也不抬的说100!结果她放下一张毛爷就走了。我旁边是个卖小百货的妹子，一个人拿起花露水问她多少钱，她居然效仿我跟人家说100,结果人家看了她几眼说：神经病啊.!') ]</msg>
<status status="PASS" starttime="20181118 11:38:09.073" endtime="20181118 11:38:09.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:38:09.113" level="INFO">@{results} = [ 1763 | 因为和领导吵架，老子被炒鱿鱼后在夜市摆地摊卖鞋垫，结果碰到前女友，她可怜的眼光望着我问我鞋垫多少钱，我感觉我的自尊受到伤害，头也不抬的说100!结果她放下一张毛爷就走了。我旁边是个卖小百货的妹子，一个人拿起花露水问她多少钱，她居然效仿我跟人家说100,结果人家看了她几眼说：神经病啊.! ]</msg>
<status status="PASS" starttime="20181118 11:38:09.113" endtime="20181118 11:38:09.113"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:38:09.113" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1763; </msg>
<status status="PASS" starttime="20181118 11:38:09.113" endtime="20181118 11:38:09.453"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:38:09.453" level="INFO">1763</msg>
<msg timestamp="20181118 11:38:09.453" level="INFO">因为和领导吵架，老子被炒鱿鱼后在夜市摆地摊卖鞋垫，结果碰到前女友，她可怜的眼光望着我问我鞋垫多少钱，我感觉我的自尊受到伤害，头也不抬的说100!结果她放下一张毛爷就走了。我旁边是个卖小百货的妹子，一个人拿起花露水问她多少钱，她居然效仿我跟人家说100,结果人家看了她几眼说：神经病啊.!</msg>
<status status="PASS" starttime="20181118 11:38:09.453" endtime="20181118 11:38:09.453"></status>
</kw>
<msg timestamp="20181118 11:38:09.453" level="INFO">${aJoke} = 因为和领导吵架，老子被炒鱿鱼后在夜市摆地摊卖鞋垫，结果碰到前女友，她可怜的眼光望着我问我鞋垫多少钱，我感觉我的自尊受到伤害，头也不抬的说100!结果她放下一张毛爷就走了。我旁边是个卖小百货的妹子，一个人拿起花露水问她多少钱，她居然效仿我跟人家说100,结果人家看了她几眼说：神经病啊.!</msg>
<status status="PASS" starttime="20181118 11:38:09.033" endtime="20181118 11:38:09.453"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:38:09.463" level="INFO">Typing text '因为和领导吵架，老子被炒鱿鱼后在夜市摆地摊卖鞋垫，结果碰到前女友，她可怜的眼光望着我问我鞋垫多少钱，我感觉我的自尊受到伤害，头也不抬的说100!结果她放下一张毛爷就走了。我旁边是个卖小百货的妹子，一个人拿起花露水问她多少钱，她居然效仿我跟人家说100,结果人家看了她几眼说：神经病啊.!' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:38:09.463" endtime="20181118 11:38:23.715"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:38:23.715" endtime="20181118 11:38:28.504"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:38:28.504" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:38:28.504" endtime="20181118 11:38:32.396"></status>
</kw>
<status status="PASS" starttime="20181118 11:38:09.033" endtime="20181118 11:38:32.396"></status>
</kw>
<kw name="${index} = 70" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:38:32.406" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:38:32.406" endtime="20181118 11:38:32.406"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:38:32.416" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:38:32.416" endtime="20181118 11:38:32.436"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:38:32.436" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:38:32.446" level="INFO">@{queryResults} = [ (1764, '今天看到一幕，卖烧饼的是外地的。有个人去买了。说了句话免费送他很多烧饼，他说给我俩鲜烧饼我给我妈妈带的，那俩卖烧饼的顿时说不出话了，最后说了也哭了他们说卖了13年烧饼了只见过给儿子女朋友带的，从没人想到过妈妈，顿时围观的人都跟鼻息了一样安静急了。。。！？') ]</msg>
<status status="PASS" starttime="20181118 11:38:32.436" endtime="20181118 11:38:32.446"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:38:32.446" level="INFO">@{results} = [ 1764 | 今天看到一幕，卖烧饼的是外地的。有个人去买了。说了句话免费送他很多烧饼，他说给我俩鲜烧饼我给我妈妈带的，那俩卖烧饼的顿时说不出话了，最后说了也哭了他们说卖了13年烧饼了只见过给儿子女朋友带的，从没人想到过妈妈，顿时围观的人都跟鼻息了一样安静急了。。。！？ ]</msg>
<status status="PASS" starttime="20181118 11:38:32.446" endtime="20181118 11:38:32.446"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:38:32.456" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1764; </msg>
<status status="PASS" starttime="20181118 11:38:32.456" endtime="20181118 11:38:32.746"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:38:32.746" level="INFO">1764</msg>
<msg timestamp="20181118 11:38:32.746" level="INFO">今天看到一幕，卖烧饼的是外地的。有个人去买了。说了句话免费送他很多烧饼，他说给我俩鲜烧饼我给我妈妈带的，那俩卖烧饼的顿时说不出话了，最后说了也哭了他们说卖了13年烧饼了只见过给儿子女朋友带的，从没人想到过妈妈，顿时围观的人都跟鼻息了一样安静急了。。。！？</msg>
<status status="PASS" starttime="20181118 11:38:32.746" endtime="20181118 11:38:32.746"></status>
</kw>
<msg timestamp="20181118 11:38:32.746" level="INFO">${aJoke} = 今天看到一幕，卖烧饼的是外地的。有个人去买了。说了句话免费送他很多烧饼，他说给我俩鲜烧饼我给我妈妈带的，那俩卖烧饼的顿时说不出话了，最后说了也哭了他们说卖了13年烧饼了只见过给儿子女朋友带的，从没人想到过妈妈，顿时围观的人都跟鼻息了一样安静急了。。。！？</msg>
<status status="PASS" starttime="20181118 11:38:32.406" endtime="20181118 11:38:32.746"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:38:32.756" level="INFO">Typing text '今天看到一幕，卖烧饼的是外地的。有个人去买了。说了句话免费送他很多烧饼，他说给我俩鲜烧饼我给我妈妈带的，那俩卖烧饼的顿时说不出话了，最后说了也哭了他们说卖了13年烧饼了只见过给儿子女朋友带的，从没人想到过妈妈，顿时围观的人都跟鼻息了一样安静急了。。。！？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:38:32.756" endtime="20181118 11:38:47.236"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:38:47.236" endtime="20181118 11:38:51.088"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:38:51.088" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:38:51.088" endtime="20181118 11:38:54.108"></status>
</kw>
<status status="PASS" starttime="20181118 11:38:32.396" endtime="20181118 11:38:54.108"></status>
</kw>
<kw name="${index} = 71" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:38:54.118" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:38:54.118" endtime="20181118 11:38:54.118"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:38:54.118" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:38:54.118" endtime="20181118 11:38:54.198"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:38:54.208" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:38:54.218" level="INFO">@{queryResults} = [ (1765, '昨天晚上喝大了坐出租车回家，在车上头痛又想吐，就和师傅说了一句：“师傅你开慢点，我头晕！”师傅来了句：“哥们，我们正堵车呢！”') ]</msg>
<status status="PASS" starttime="20181118 11:38:54.208" endtime="20181118 11:38:54.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:38:54.218" level="INFO">@{results} = [ 1765 | 昨天晚上喝大了坐出租车回家，在车上头痛又想吐，就和师傅说了一句：“师傅你开慢点，我头晕！”师傅来了句：“哥们，我们正堵车呢！” ]</msg>
<status status="PASS" starttime="20181118 11:38:54.218" endtime="20181118 11:38:54.218"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:38:54.228" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1765; </msg>
<status status="PASS" starttime="20181118 11:38:54.218" endtime="20181118 11:38:54.238"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:38:54.238" level="INFO">1765</msg>
<msg timestamp="20181118 11:38:54.238" level="INFO">昨天晚上喝大了坐出租车回家，在车上头痛又想吐，就和师傅说了一句：“师傅你开慢点，我头晕！”师傅来了句：“哥们，我们正堵车呢！”</msg>
<status status="PASS" starttime="20181118 11:38:54.238" endtime="20181118 11:38:54.238"></status>
</kw>
<msg timestamp="20181118 11:38:54.238" level="INFO">${aJoke} = 昨天晚上喝大了坐出租车回家，在车上头痛又想吐，就和师傅说了一句：“师傅你开慢点，我头晕！”师傅来了句：“哥们，我们正堵车呢！”</msg>
<status status="PASS" starttime="20181118 11:38:54.118" endtime="20181118 11:38:54.238"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:38:54.238" level="INFO">Typing text '昨天晚上喝大了坐出租车回家，在车上头痛又想吐，就和师傅说了一句：“师傅你开慢点，我头晕！”师傅来了句：“哥们，我们正堵车呢！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:38:54.238" endtime="20181118 11:39:05.531"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:39:05.531" endtime="20181118 11:39:11.214"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:39:11.224" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:39:11.214" endtime="20181118 11:39:15.361"></status>
</kw>
<status status="PASS" starttime="20181118 11:38:54.108" endtime="20181118 11:39:15.361"></status>
</kw>
<kw name="${index} = 72" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:39:15.371" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:39:15.371" endtime="20181118 11:39:15.371"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:39:15.371" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:39:15.371" endtime="20181118 11:39:15.401"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:39:15.401" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:39:15.421" level="INFO">@{queryResults} = [ (1766, '今天在超市看见个男的买苏菲，本来别人没多想，结果这人估计心里作用，怕人质疑，撕开拿了两片，把鞋子脱了，直接垫鞋子里边了！！尼玛，刚刚发现还有这功能，哥们太有才了') ]</msg>
<status status="PASS" starttime="20181118 11:39:15.401" endtime="20181118 11:39:15.421"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:39:15.421" level="INFO">@{results} = [ 1766 | 今天在超市看见个男的买苏菲，本来别人没多想，结果这人估计心里作用，怕人质疑，撕开拿了两片，把鞋子脱了，直接垫鞋子里边了！！尼玛，刚刚发现还有这功能，哥们太有才了 ]</msg>
<status status="PASS" starttime="20181118 11:39:15.421" endtime="20181118 11:39:15.421"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:39:15.431" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1766; </msg>
<status status="PASS" starttime="20181118 11:39:15.431" endtime="20181118 11:39:15.721"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:39:15.731" level="INFO">1766</msg>
<msg timestamp="20181118 11:39:15.731" level="INFO">今天在超市看见个男的买苏菲，本来别人没多想，结果这人估计心里作用，怕人质疑，撕开拿了两片，把鞋子脱了，直接垫鞋子里边了！！尼玛，刚刚发现还有这功能，哥们太有才了</msg>
<status status="PASS" starttime="20181118 11:39:15.721" endtime="20181118 11:39:15.731"></status>
</kw>
<msg timestamp="20181118 11:39:15.731" level="INFO">${aJoke} = 今天在超市看见个男的买苏菲，本来别人没多想，结果这人估计心里作用，怕人质疑，撕开拿了两片，把鞋子脱了，直接垫鞋子里边了！！尼玛，刚刚发现还有这功能，哥们太有才了</msg>
<status status="PASS" starttime="20181118 11:39:15.361" endtime="20181118 11:39:15.731"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:39:15.731" level="INFO">Typing text '今天在超市看见个男的买苏菲，本来别人没多想，结果这人估计心里作用，怕人质疑，撕开拿了两片，把鞋子脱了，直接垫鞋子里边了！！尼玛，刚刚发现还有这功能，哥们太有才了' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:39:15.731" endtime="20181118 11:39:28.139"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:39:28.139" endtime="20181118 11:39:33.316"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:39:33.326" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:39:33.326" endtime="20181118 11:39:38.707"></status>
</kw>
<status status="PASS" starttime="20181118 11:39:15.361" endtime="20181118 11:39:38.707"></status>
</kw>
<kw name="${index} = 73" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:39:38.717" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:39:38.717" endtime="20181118 11:39:38.717"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:39:38.727" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:39:38.727" endtime="20181118 11:39:38.747"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:39:38.747" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:39:38.767" level="INFO">@{queryResults} = [ (1767, '每年夏天我们厂都会准备冰的酸梅汤来降温解渴，一天我拿着杯子去打酸梅汤正好有个老大爷也在打着喝，旁边一位阿姨问老大爷你喝的酸梅汤什么味道的？老大爷淡定的说草莓味的，我去……') ]</msg>
<status status="PASS" starttime="20181118 11:39:38.747" endtime="20181118 11:39:38.767"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:39:38.767" level="INFO">@{results} = [ 1767 | 每年夏天我们厂都会准备冰的酸梅汤来降温解渴，一天我拿着杯子去打酸梅汤正好有个老大爷也在打着喝，旁边一位阿姨问老大爷你喝的酸梅汤什么味道的？老大爷淡定的说草莓味的，我去…… ]</msg>
<status status="PASS" starttime="20181118 11:39:38.767" endtime="20181118 11:39:38.767"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:39:38.767" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1767; </msg>
<status status="PASS" starttime="20181118 11:39:38.767" endtime="20181118 11:39:39.087"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:39:39.087" level="INFO">1767</msg>
<msg timestamp="20181118 11:39:39.087" level="INFO">每年夏天我们厂都会准备冰的酸梅汤来降温解渴，一天我拿着杯子去打酸梅汤正好有个老大爷也在打着喝，旁边一位阿姨问老大爷你喝的酸梅汤什么味道的？老大爷淡定的说草莓味的，我去……</msg>
<status status="PASS" starttime="20181118 11:39:39.087" endtime="20181118 11:39:39.087"></status>
</kw>
<msg timestamp="20181118 11:39:39.097" level="INFO">${aJoke} = 每年夏天我们厂都会准备冰的酸梅汤来降温解渴，一天我拿着杯子去打酸梅汤正好有个老大爷也在打着喝，旁边一位阿姨问老大爷你喝的酸梅汤什么味道的？老大爷淡定的说草莓味的，我去……</msg>
<status status="PASS" starttime="20181118 11:39:38.717" endtime="20181118 11:39:39.097"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:39:39.097" level="INFO">Typing text '每年夏天我们厂都会准备冰的酸梅汤来降温解渴，一天我拿着杯子去打酸梅汤正好有个老大爷也在打着喝，旁边一位阿姨问老大爷你喝的酸梅汤什么味道的？老大爷淡定的说草莓味的，我去……' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:39:39.097" endtime="20181118 11:39:51.516"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:39:51.516" endtime="20181118 11:39:55.251"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:39:55.261" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:39:55.251" endtime="20181118 11:39:58.261"></status>
</kw>
<status status="PASS" starttime="20181118 11:39:38.707" endtime="20181118 11:39:58.261"></status>
</kw>
<kw name="${index} = 74" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:39:58.261" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:39:58.261" endtime="20181118 11:39:58.261"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:39:58.271" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:39:58.261" endtime="20181118 11:39:58.361"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:39:58.361" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:39:58.381" level="INFO">@{queryResults} = [ (1768, '刚刚看到的一条动态： 把你捧在手心是杯子，放开手你就是玻璃渣子 下面统一回复： 煞笔，我是塑料') ]</msg>
<status status="PASS" starttime="20181118 11:39:58.361" endtime="20181118 11:39:58.381"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:39:58.391" level="INFO">@{results} = [ 1768 | 刚刚看到的一条动态： 把你捧在手心是杯子，放开手你就是玻璃渣子 下面统一回复： 煞笔，我是塑料 ]</msg>
<status status="PASS" starttime="20181118 11:39:58.381" endtime="20181118 11:39:58.391"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:39:58.391" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1768; </msg>
<status status="PASS" starttime="20181118 11:39:58.391" endtime="20181118 11:39:58.401"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:39:58.401" level="INFO">1768</msg>
<msg timestamp="20181118 11:39:58.401" level="INFO">刚刚看到的一条动态： 把你捧在手心是杯子，放开手你就是玻璃渣子 下面统一回复： 煞笔，我是塑料</msg>
<status status="PASS" starttime="20181118 11:39:58.401" endtime="20181118 11:39:58.401"></status>
</kw>
<msg timestamp="20181118 11:39:58.411" level="INFO">${aJoke} = 刚刚看到的一条动态： 把你捧在手心是杯子，放开手你就是玻璃渣子 下面统一回复： 煞笔，我是塑料</msg>
<status status="PASS" starttime="20181118 11:39:58.261" endtime="20181118 11:39:58.411"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:39:58.411" level="INFO">Typing text '刚刚看到的一条动态： 把你捧在手心是杯子，放开手你就是玻璃渣子 下面统一回复： 煞笔，我是塑料' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:39:58.411" endtime="20181118 11:40:09.876"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:40:09.876" endtime="20181118 11:40:14.018"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:40:14.018" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:40:14.018" endtime="20181118 11:40:17.647"></status>
</kw>
<status status="PASS" starttime="20181118 11:39:58.261" endtime="20181118 11:40:17.657"></status>
</kw>
<kw name="${index} = 75" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:40:17.657" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:40:17.657" endtime="20181118 11:40:17.657"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:40:17.667" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:40:17.667" endtime="20181118 11:40:17.687"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:40:17.697" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:40:17.707" level="INFO">@{queryResults} = [ (1769, '有个同学叫覃奀垚(qín ēn yáo)。 第一天开学老师拿花名册点名，点到他名字都快哭了，一个字都特么不认识啊！ 最后含着泪问了句，谁家的熊孩子叫，西早不大三个土……') ]</msg>
<status status="PASS" starttime="20181118 11:40:17.687" endtime="20181118 11:40:17.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:40:17.707" level="INFO">@{results} = [ 1769 | 有个同学叫覃奀垚(qín ēn yáo)。 第一天开学老师拿花名册点名，点到他名字都快哭了，一个字都特么不认识啊！ 最后含着泪问了句，谁家的熊孩子叫，西早不大三个土…… ]</msg>
<status status="PASS" starttime="20181118 11:40:17.707" endtime="20181118 11:40:17.707"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:40:17.717" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1769; </msg>
<status status="PASS" starttime="20181118 11:40:17.707" endtime="20181118 11:40:18.018"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:40:18.018" level="INFO">1769</msg>
<msg timestamp="20181118 11:40:18.018" level="INFO">有个同学叫覃奀垚(qín ēn yáo)。 第一天开学老师拿花名册点名，点到他名字都快哭了，一个字都特么不认识啊！ 最后含着泪问了句，谁家的熊孩子叫，西早不大三个土……</msg>
<status status="PASS" starttime="20181118 11:40:18.018" endtime="20181118 11:40:18.018"></status>
</kw>
<msg timestamp="20181118 11:40:18.018" level="INFO">${aJoke} = 有个同学叫覃奀垚(qín ēn yáo)。 第一天开学老师拿花名册点名，点到他名字都快哭了，一个字都特么不认识啊！ 最后含着泪问了句，谁家的熊孩子叫，西早不大三个土……</msg>
<status status="PASS" starttime="20181118 11:40:17.657" endtime="20181118 11:40:18.018"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:40:18.018" level="INFO">Typing text '有个同学叫覃奀垚(qín ēn yáo)。 第一天开学老师拿花名册点名，点到他名字都快哭了，一个字都特么不认识啊！ 最后含着泪问了句，谁家的熊孩子叫，西早不大三个土……' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:40:18.018" endtime="20181118 11:40:29.941"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:40:29.941" endtime="20181118 11:40:35.201"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:40:35.201" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:40:35.201" endtime="20181118 11:40:40.601"></status>
</kw>
<status status="PASS" starttime="20181118 11:40:17.657" endtime="20181118 11:40:40.601"></status>
</kw>
<kw name="${index} = 76" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:40:40.611" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:40:40.611" endtime="20181118 11:40:40.611"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:40:40.611" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:40:40.611" endtime="20181118 11:40:40.641"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:40:40.641" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:40:40.651" level="INFO">@{queryResults} = [ (1770, '徒弟对师傅说，最近有好多烦心事啊！ 师傅问他说，什么事。 徒弟说，最近有两个女孩同时追求我。 师傅说，这是好事呀！有什么好烦心的！ 徒弟说，她们一个长的漂亮但没钱，另一个有钱却不漂亮。 师傅说，这个年代，钱有什么重要的？当然是选漂亮的。 徒弟说，嗯，师傅我记住了。那我去找她了。 刚走没两步就听师傅说，把那个丑女人的地址给我。') ]</msg>
<status status="PASS" starttime="20181118 11:40:40.641" endtime="20181118 11:40:40.651"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:40:40.661" level="INFO">@{results} = [ 1770 | 徒弟对师傅说，最近有好多烦心事啊！ 师傅问他说，什么事。 徒弟说，最近有两个女孩同时追求我。 师傅说，这是好事呀！有什么好烦心的！ 徒弟说，她们一个长的漂亮但没钱，另一个有钱却不漂亮。 师傅说，这个年代，钱有什么重要的？当然是选漂亮的。 徒弟说，嗯，师傅我记住了。那我去找她了。 刚走没两步就听师傅说，把那个丑女人的地址给我。 ]</msg>
<status status="PASS" starttime="20181118 11:40:40.651" endtime="20181118 11:40:40.661"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:40:40.661" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1770; </msg>
<status status="PASS" starttime="20181118 11:40:40.661" endtime="20181118 11:40:40.971"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:40:40.971" level="INFO">1770</msg>
<msg timestamp="20181118 11:40:40.971" level="INFO">徒弟对师傅说，最近有好多烦心事啊！ 师傅问他说，什么事。 徒弟说，最近有两个女孩同时追求我。 师傅说，这是好事呀！有什么好烦心的！ 徒弟说，她们一个长的漂亮但没钱，另一个有钱却不漂亮。 师傅说，这个年代，钱有什么重要的？当然是选漂亮的。 徒弟说，嗯，师傅我记住了。那我去找她了。 刚走没两步就听师傅说，把那个丑女人的地址给我。</msg>
<status status="PASS" starttime="20181118 11:40:40.971" endtime="20181118 11:40:40.971"></status>
</kw>
<msg timestamp="20181118 11:40:40.981" level="INFO">${aJoke} = 徒弟对师傅说，最近有好多烦心事啊！ 师傅问他说，什么事。 徒弟说，最近有两个女孩同时追求我。 师傅说，这是好事呀！有什么好烦心的！ 徒弟说，她们一个长的漂亮但没钱，另一个有钱却不漂亮。 师傅说，这个年代，钱有什么重要的？当然是选漂亮的。 徒弟说，嗯，师傅我记住了。那我去找她了。 刚走没两步就听师傅说，把那个丑女人的地址给我。</msg>
<status status="PASS" starttime="20181118 11:40:40.611" endtime="20181118 11:40:40.981"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:40:40.981" level="INFO">Typing text '徒弟对师傅说，最近有好多烦心事啊！ 师傅问他说，什么事。 徒弟说，最近有两个女孩同时追求我。 师傅说，这是好事呀！有什么好烦心的！ 徒弟说，她们一个长的漂亮但没钱，另一个有钱却不漂亮。 师傅说，这个年代，钱有什么重要的？当然是选漂亮的。 徒弟说，嗯，师傅我记住了。那我去找她了。 刚走没两步就听师傅说，把那个丑女人的地址给我。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:40:40.981" endtime="20181118 11:40:55.631"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:40:55.631" endtime="20181118 11:40:59.907"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:40:59.907" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:40:59.907" endtime="20181118 11:41:02.847"></status>
</kw>
<status status="PASS" starttime="20181118 11:40:40.601" endtime="20181118 11:41:02.847"></status>
</kw>
<kw name="${index} = 77" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:41:02.857" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:41:02.857" endtime="20181118 11:41:02.857"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:41:02.857" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:41:02.857" endtime="20181118 11:41:02.877"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:41:02.877" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:41:02.887" level="INFO">@{queryResults} = [ (1771, '1.等车时身边一个女孩中暑晕倒了，我把她抱到通风的地方，解开了她的衣服。在准备人工呼吸的时候她醒了，然后对我笑了笑：谢谢你，现在我醒了就不需要人工呼吸了。我也对她笑了笑，伸手摸起了地上的砖头…… 2.就刚刚,在公交车上，手里的两个硬币掉地上了，我刚准备去捡，坐我旁边的大爷捡起来了，我以为他会还给我，没想到他直接装兜里了！我心想大爷可能没钱坐车，算了吧……一会售票员过来了，我又拿...</msg>
<status status="PASS" starttime="20181118 11:41:02.877" endtime="20181118 11:41:02.887"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:41:02.897" level="INFO">@{results} = [ 1771 | 1.等车时身边一个女孩中暑晕倒了，我把她抱到通风的地方，解开了她的衣服。在准备人工呼吸的时候她醒了，然后对我笑了笑：谢谢你，现在我醒了就不需要人工呼吸了。我也对她笑了笑，伸手摸起了地上的砖头…… 2.就刚刚,在公交车上，手里的两个硬币掉地上了，我刚准备去捡，坐我旁边的大爷捡起来了，我以为他会还给我，没想到他直接装兜里了！我心想大爷可能没钱坐车，算了吧……一会售票员过来了，我又拿出...</msg>
<status status="PASS" starttime="20181118 11:41:02.887" endtime="20181118 11:41:02.897"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:41:02.897" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1771; </msg>
<status status="PASS" starttime="20181118 11:41:02.897" endtime="20181118 11:41:03.187"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:41:03.187" level="INFO">1771</msg>
<msg timestamp="20181118 11:41:03.187" level="INFO">1.等车时身边一个女孩中暑晕倒了，我把她抱到通风的地方，解开了她的衣服。在准备人工呼吸的时候她醒了，然后对我笑了笑：谢谢你，现在我醒了就不需要人工呼吸了。我也对她笑了笑，伸手摸起了地上的砖头…… 2.就刚刚,在公交车上，手里的两个硬币掉地上了，我刚准备去捡，坐我旁边的大爷捡起来了，我以为他会还给我，没想到他直接装兜里了！我心想大爷可能没钱坐车，算了吧……一会售票员过来了，我又拿出两个硬币要递给售票员时，大爷从口袋掏出四个硬币，悠悠的来一句：这姑娘的车费我一起付了！大爷，您这是要闹哪样…… 3.商贩：“大姐，要黄瓜吗？刚掐秧的，嫩着呢，您看这颗粒，这毛刺，这手感，这分量……”正在挑拣菜的女的：“滚！老娘有男朋友！”</msg>
<status status="PASS" starttime="20181118 11:41:03.187" endtime="20181118 11:41:03.187"></status>
</kw>
<msg timestamp="20181118 11:41:03.187" level="INFO">${aJoke} = 1.等车时身边一个女孩中暑晕倒了，我把她抱到通风的地方，解开了她的衣服。在准备人工呼吸的时候她醒了，然后对我笑了笑：谢谢你，现在我醒了就不需要人工呼吸了。我也对她笑了笑，伸手摸起了地上的砖头…… 2.就刚刚,在公交车上，手里的两个硬币掉地上了，我刚准备去捡，坐我旁边的大爷捡起来了，我以为他会还给我，没想到他直接装兜里了！我心想大爷可能没钱坐车，算了吧……一会售票员过来了，我又拿出两个硬币要递给售票...</msg>
<status status="PASS" starttime="20181118 11:41:02.857" endtime="20181118 11:41:03.187"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:41:03.197" level="INFO">Typing text '1.等车时身边一个女孩中暑晕倒了，我把她抱到通风的地方，解开了她的衣服。在准备人工呼吸的时候她醒了，然后对我笑了笑：谢谢你，现在我醒了就不需要人工呼吸了。我也对她笑了笑，伸手摸起了地上的砖头…… 2.就刚刚,在公交车上，手里的两个硬币掉地上了，我刚准备去捡，坐我旁边的大爷捡起来了，我以为他会还给我，没想到他直接装兜里了！我心想大爷可能没钱坐车，算了吧……一会售票员过来了，我又拿出两个硬币要递给售票员时，大爷从口袋掏出四个硬币，悠悠的来一句：这姑娘的车费我一起付了！大爷，您这是要闹哪样…… 3.商贩：“大姐，要黄瓜吗？刚掐秧的，嫩着呢，您看这颗粒，这毛刺，这手感，这分量……”正在挑拣菜的女的：“滚！老娘有男朋友！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:41:03.197" endtime="20181118 11:41:21.444"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:41:21.444" endtime="20181118 11:41:25.021"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:41:25.021" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:41:25.021" endtime="20181118 11:41:27.753"></status>
</kw>
<status status="PASS" starttime="20181118 11:41:02.847" endtime="20181118 11:41:27.753"></status>
</kw>
<kw name="${index} = 78" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:41:27.763" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:41:27.763" endtime="20181118 11:41:27.763"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:41:27.763" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:41:27.763" endtime="20181118 11:41:27.843"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:41:27.843" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:41:27.873" level="INFO">@{queryResults} = [ (1772, '37、今天去买西瓜顺便买了把刀。回来的公交上看见小偷在扒包，我上去提醒了一下，好么还有一个同伙上来要打我。我淡定的问了一句：带刀没有？俩小偷楞了说带刀干嘛。lz从西瓜袋子掏出西瓜刀说：我带了。然后人就跑了。全车大拇指。 刚刚经理找我谈话：小李，你来公司也有几个月了，表现都还不错。可是最近很多同事都向我反映，你说话的口气有问题，希望你改正下。我点了点头回到座位上，想到自己在公司一...</msg>
<status status="PASS" starttime="20181118 11:41:27.843" endtime="20181118 11:41:27.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:41:27.883" level="INFO">@{results} = [ 1772 | 37、今天去买西瓜顺便买了把刀。回来的公交上看见小偷在扒包，我上去提醒了一下，好么还有一个同伙上来要打我。我淡定的问了一句：带刀没有？俩小偷楞了说带刀干嘛。lz从西瓜袋子掏出西瓜刀说：我带了。然后人就跑了。全车大拇指。 刚刚经理找我谈话：小李，你来公司也有几个月了，表现都还不错。可是最近很多同事都向我反映，你说话的口气有问题，希望你改正下。我点了点头回到座位上，想到自己在公司一直...</msg>
<status status="PASS" starttime="20181118 11:41:27.873" endtime="20181118 11:41:27.883"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:41:27.883" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1772; </msg>
<status status="PASS" starttime="20181118 11:41:27.883" endtime="20181118 11:41:27.893"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:41:27.903" level="INFO">1772</msg>
<msg timestamp="20181118 11:41:27.903" level="INFO">37、今天去买西瓜顺便买了把刀。回来的公交上看见小偷在扒包，我上去提醒了一下，好么还有一个同伙上来要打我。我淡定的问了一句：带刀没有？俩小偷楞了说带刀干嘛。lz从西瓜袋子掏出西瓜刀说：我带了。然后人就跑了。全车大拇指。 刚刚经理找我谈话：小李，你来公司也有几个月了，表现都还不错。可是最近很多同事都向我反映，你说话的口气有问题，希望你改正下。我点了点头回到座位上，想到自己在公司一直都是小心翼翼，这样都会得罪人。难道这就是职场么？这么不受待见？越想越委屈，顺手又剥了个大蒜嚼了起来……</msg>
<status status="PASS" starttime="20181118 11:41:27.893" endtime="20181118 11:41:27.903"></status>
</kw>
<msg timestamp="20181118 11:41:27.903" level="INFO">${aJoke} = 37、今天去买西瓜顺便买了把刀。回来的公交上看见小偷在扒包，我上去提醒了一下，好么还有一个同伙上来要打我。我淡定的问了一句：带刀没有？俩小偷楞了说带刀干嘛。lz从西瓜袋子掏出西瓜刀说：我带了。然后人就跑了。全车大拇指。 刚刚经理找我谈话：小李，你来公司也有几个月了，表现都还不错。可是最近很多同事都向我反映，你说话的口气有问题，希望你改正下。我点了点头回到座位上，想到自己在公司一直都是小心翼翼，这样...</msg>
<status status="PASS" starttime="20181118 11:41:27.753" endtime="20181118 11:41:27.903"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:41:27.903" level="INFO">Typing text '37、今天去买西瓜顺便买了把刀。回来的公交上看见小偷在扒包，我上去提醒了一下，好么还有一个同伙上来要打我。我淡定的问了一句：带刀没有？俩小偷楞了说带刀干嘛。lz从西瓜袋子掏出西瓜刀说：我带了。然后人就跑了。全车大拇指。 刚刚经理找我谈话：小李，你来公司也有几个月了，表现都还不错。可是最近很多同事都向我反映，你说话的口气有问题，希望你改正下。我点了点头回到座位上，想到自己在公司一直都是小心翼翼，这样都会得罪人。难道这就是职场么？这么不受待见？越想越委屈，顺手又剥了个大蒜嚼了起来……' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:41:27.903" endtime="20181118 11:41:44.747"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:41:44.757" endtime="20181118 11:41:48.986"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:41:48.986" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:41:48.986" endtime="20181118 11:41:53.705"></status>
</kw>
<status status="PASS" starttime="20181118 11:41:27.753" endtime="20181118 11:41:53.705"></status>
</kw>
<kw name="${index} = 79" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:41:53.715" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:41:53.705" endtime="20181118 11:41:53.715"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:41:53.715" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:41:53.715" endtime="20181118 11:41:53.755"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:41:53.755" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:41:53.775" level="INFO">@{queryResults} = [ (1773, '1.学生课间去厕所，拉完发现没带纸，又等不到人，手机又欠费。绝望中他给10086打电话，请求帮助。。。据说那边沉默了很久，后来……他班同学上课时收到了这样一条短信：尊敬的中国移动用户你好，你的同学谁谁谁在厕所里，让你给他送手纸。详情请咨询10086 2.寝室在6楼，爬上来后发现钥匙未带，下楼问阿姨拿，再爬上来开门，下去还钥匙，再爬上来，发现门紧闭，隔壁一同学经过，问曰“看你门没...</msg>
<status status="PASS" starttime="20181118 11:41:53.755" endtime="20181118 11:41:53.775"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:41:53.775" level="INFO">@{results} = [ 1773 | 1.学生课间去厕所，拉完发现没带纸，又等不到人，手机又欠费。绝望中他给10086打电话，请求帮助。。。据说那边沉默了很久，后来……他班同学上课时收到了这样一条短信：尊敬的中国移动用户你好，你的同学谁谁谁在厕所里，让你给他送手纸。详情请咨询10086 2.寝室在6楼，爬上来后发现钥匙未带，下楼问阿姨拿，再爬上来开门，下去还钥匙，再爬上来，发现门紧闭，隔壁一同学经过，问曰“看你门没关...</msg>
<status status="PASS" starttime="20181118 11:41:53.775" endtime="20181118 11:41:53.775"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:41:53.785" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1773; </msg>
<status status="PASS" starttime="20181118 11:41:53.775" endtime="20181118 11:41:53.815"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:41:53.815" level="INFO">1773</msg>
<msg timestamp="20181118 11:41:53.815" level="INFO">1.学生课间去厕所，拉完发现没带纸，又等不到人，手机又欠费。绝望中他给10086打电话，请求帮助。。。据说那边沉默了很久，后来……他班同学上课时收到了这样一条短信：尊敬的中国移动用户你好，你的同学谁谁谁在厕所里，让你给他送手纸。详情请咨询10086 2.寝室在6楼，爬上来后发现钥匙未带，下楼问阿姨拿，再爬上来开门，下去还钥匙，再爬上来，发现门紧闭，隔壁一同学经过，问曰“看你门没关，我帮你关了。”…</msg>
<status status="PASS" starttime="20181118 11:41:53.815" endtime="20181118 11:41:53.815"></status>
</kw>
<msg timestamp="20181118 11:41:53.815" level="INFO">${aJoke} = 1.学生课间去厕所，拉完发现没带纸，又等不到人，手机又欠费。绝望中他给10086打电话，请求帮助。。。据说那边沉默了很久，后来……他班同学上课时收到了这样一条短信：尊敬的中国移动用户你好，你的同学谁谁谁在厕所里，让你给他送手纸。详情请咨询10086 2.寝室在6楼，爬上来后发现钥匙未带，下楼问阿姨拿，再爬上来开门，下去还钥匙，再爬上来，发现门紧闭，隔壁一同学经过，问曰“看你门没关，我帮你关了。”…</msg>
<status status="PASS" starttime="20181118 11:41:53.705" endtime="20181118 11:41:53.825"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:41:53.825" level="INFO">Typing text '1.学生课间去厕所，拉完发现没带纸，又等不到人，手机又欠费。绝望中他给10086打电话，请求帮助。。。据说那边沉默了很久，后来……他班同学上课时收到了这样一条短信：尊敬的中国移动用户你好，你的同学谁谁谁在厕所里，让你给他送手纸。详情请咨询10086 2.寝室在6楼，爬上来后发现钥匙未带，下楼问阿姨拿，再爬上来开门，下去还钥匙，再爬上来，发现门紧闭，隔壁一同学经过，问曰“看你门没关，我帮你关了。”…' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:41:53.825" endtime="20181118 11:42:10.009"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:42:10.009" endtime="20181118 11:42:14.123"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:42:14.133" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:42:14.133" endtime="20181118 11:42:17.629"></status>
</kw>
<status status="PASS" starttime="20181118 11:41:53.705" endtime="20181118 11:42:17.629"></status>
</kw>
<kw name="${index} = 80" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:42:17.639" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:42:17.629" endtime="20181118 11:42:17.639"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:42:17.639" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:42:17.639" endtime="20181118 11:42:17.709"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:42:17.709" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:42:17.749" level="INFO">@{queryResults} = [ (1774, '家门口公园有一群七、八岁的小孩玩，我见一个小男孩双手插袋跑来跑去，便喊他：“这样很危险的，摔倒了都没法扶！” 小男孩笑答：“可是我一会要和小遥手牵手回家，我手凉的话，就没法暖她的手啦~”说完眨眨眼跑开了…我顿时感觉这孩子已赢在了起跑线上…') ]</msg>
<status status="PASS" starttime="20181118 11:42:17.709" endtime="20181118 11:42:17.749"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:42:17.749" level="INFO">@{results} = [ 1774 | 家门口公园有一群七、八岁的小孩玩，我见一个小男孩双手插袋跑来跑去，便喊他：“这样很危险的，摔倒了都没法扶！” 小男孩笑答：“可是我一会要和小遥手牵手回家，我手凉的话，就没法暖她的手啦~”说完眨眨眼跑开了…我顿时感觉这孩子已赢在了起跑线上… ]</msg>
<status status="PASS" starttime="20181118 11:42:17.749" endtime="20181118 11:42:17.749"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:42:17.759" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1774; </msg>
<status status="PASS" starttime="20181118 11:42:17.759" endtime="20181118 11:42:18.069"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:42:18.069" level="INFO">1774</msg>
<msg timestamp="20181118 11:42:18.069" level="INFO">家门口公园有一群七、八岁的小孩玩，我见一个小男孩双手插袋跑来跑去，便喊他：“这样很危险的，摔倒了都没法扶！” 小男孩笑答：“可是我一会要和小遥手牵手回家，我手凉的话，就没法暖她的手啦~”说完眨眨眼跑开了…我顿时感觉这孩子已赢在了起跑线上…</msg>
<status status="PASS" starttime="20181118 11:42:18.069" endtime="20181118 11:42:18.069"></status>
</kw>
<msg timestamp="20181118 11:42:18.069" level="INFO">${aJoke} = 家门口公园有一群七、八岁的小孩玩，我见一个小男孩双手插袋跑来跑去，便喊他：“这样很危险的，摔倒了都没法扶！” 小男孩笑答：“可是我一会要和小遥手牵手回家，我手凉的话，就没法暖她的手啦~”说完眨眨眼跑开了…我顿时感觉这孩子已赢在了起跑线上…</msg>
<status status="PASS" starttime="20181118 11:42:17.629" endtime="20181118 11:42:18.069"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:42:18.079" level="INFO">Typing text '家门口公园有一群七、八岁的小孩玩，我见一个小男孩双手插袋跑来跑去，便喊他：“这样很危险的，摔倒了都没法扶！” 小男孩笑答：“可是我一会要和小遥手牵手回家，我手凉的话，就没法暖她的手啦~”说完眨眨眼跑开了…我顿时感觉这孩子已赢在了起跑线上…' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:42:18.069" endtime="20181118 11:42:30.928"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:42:30.928" endtime="20181118 11:42:35.220"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:42:35.220" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:42:35.220" endtime="20181118 11:42:39.321"></status>
</kw>
<status status="PASS" starttime="20181118 11:42:17.629" endtime="20181118 11:42:39.331"></status>
</kw>
<kw name="${index} = 81" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:42:39.331" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:42:39.331" endtime="20181118 11:42:39.341"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:42:39.341" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:42:39.341" endtime="20181118 11:42:39.361"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:42:39.371" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:42:39.382" level="INFO">@{queryResults} = [ (1775, '问:中国历史上谁最屌丝？是孙悟空啊禽兽！拥有透视眼，穿墙术，隐身术以及定身术。而拥有这些色狼们梦寐以求的神技的它，竟然他妈的跑去当和尚！！真是不可原谅啊！！！') ]</msg>
<status status="PASS" starttime="20181118 11:42:39.361" endtime="20181118 11:42:39.382"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:42:39.382" level="INFO">@{results} = [ 1775 | 问:中国历史上谁最屌丝？是孙悟空啊禽兽！拥有透视眼，穿墙术，隐身术以及定身术。而拥有这些色狼们梦寐以求的神技的它，竟然他妈的跑去当和尚！！真是不可原谅啊！！！ ]</msg>
<status status="PASS" starttime="20181118 11:42:39.382" endtime="20181118 11:42:39.382"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:42:39.392" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1775; </msg>
<status status="PASS" starttime="20181118 11:42:39.392" endtime="20181118 11:42:39.682"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:42:39.682" level="INFO">1775</msg>
<msg timestamp="20181118 11:42:39.682" level="INFO">问:中国历史上谁最屌丝？是孙悟空啊禽兽！拥有透视眼，穿墙术，隐身术以及定身术。而拥有这些色狼们梦寐以求的神技的它，竟然他妈的跑去当和尚！！真是不可原谅啊！！！</msg>
<status status="PASS" starttime="20181118 11:42:39.682" endtime="20181118 11:42:39.682"></status>
</kw>
<msg timestamp="20181118 11:42:39.682" level="INFO">${aJoke} = 问:中国历史上谁最屌丝？是孙悟空啊禽兽！拥有透视眼，穿墙术，隐身术以及定身术。而拥有这些色狼们梦寐以求的神技的它，竟然他妈的跑去当和尚！！真是不可原谅啊！！！</msg>
<status status="PASS" starttime="20181118 11:42:39.331" endtime="20181118 11:42:39.682"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:42:39.692" level="INFO">Typing text '问:中国历史上谁最屌丝？是孙悟空啊禽兽！拥有透视眼，穿墙术，隐身术以及定身术。而拥有这些色狼们梦寐以求的神技的它，竟然他妈的跑去当和尚！！真是不可原谅啊！！！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:42:39.692" endtime="20181118 11:42:51.055"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:42:51.055" endtime="20181118 11:42:54.596"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:42:54.596" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:42:54.596" endtime="20181118 11:42:57.370"></status>
</kw>
<status status="PASS" starttime="20181118 11:42:39.331" endtime="20181118 11:42:57.370"></status>
</kw>
<kw name="${index} = 82" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:42:57.380" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:42:57.370" endtime="20181118 11:42:57.380"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:42:57.380" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:42:57.380" endtime="20181118 11:42:57.410"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:42:57.420" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:42:57.430" level="INFO">@{queryResults} = [ (1776, '“听过这样一个传说吗，如果易拉罐的拉环拉断了却没能打开饮料，说明这个拉环是上天选中的，当做戒指戴手上能带来好运气。”“所以老板你是一定不会给我换一瓶了是么？”“是”') ]</msg>
<status status="PASS" starttime="20181118 11:42:57.410" endtime="20181118 11:42:57.430"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:42:57.430" level="INFO">@{results} = [ 1776 | “听过这样一个传说吗，如果易拉罐的拉环拉断了却没能打开饮料，说明这个拉环是上天选中的，当做戒指戴手上能带来好运气。”“所以老板你是一定不会给我换一瓶了是么？”“是” ]</msg>
<status status="PASS" starttime="20181118 11:42:57.430" endtime="20181118 11:42:57.430"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:42:57.430" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1776; </msg>
<status status="PASS" starttime="20181118 11:42:57.430" endtime="20181118 11:42:57.450"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:42:57.450" level="INFO">1776</msg>
<msg timestamp="20181118 11:42:57.460" level="INFO">“听过这样一个传说吗，如果易拉罐的拉环拉断了却没能打开饮料，说明这个拉环是上天选中的，当做戒指戴手上能带来好运气。”“所以老板你是一定不会给我换一瓶了是么？”“是”</msg>
<status status="PASS" starttime="20181118 11:42:57.450" endtime="20181118 11:42:57.460"></status>
</kw>
<msg timestamp="20181118 11:42:57.460" level="INFO">${aJoke} = “听过这样一个传说吗，如果易拉罐的拉环拉断了却没能打开饮料，说明这个拉环是上天选中的，当做戒指戴手上能带来好运气。”“所以老板你是一定不会给我换一瓶了是么？”“是”</msg>
<status status="PASS" starttime="20181118 11:42:57.370" endtime="20181118 11:42:57.460"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:42:57.460" level="INFO">Typing text '“听过这样一个传说吗，如果易拉罐的拉环拉断了却没能打开饮料，说明这个拉环是上天选中的，当做戒指戴手上能带来好运气。”“所以老板你是一定不会给我换一瓶了是么？”“是”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:42:57.460" endtime="20181118 11:43:09.219"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:43:09.219" endtime="20181118 11:43:15.612"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:43:15.612" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:43:15.612" endtime="20181118 11:43:21.170"></status>
</kw>
<status status="PASS" starttime="20181118 11:42:57.370" endtime="20181118 11:43:21.170"></status>
</kw>
<kw name="${index} = 83" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:43:21.180" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:43:21.180" endtime="20181118 11:43:21.180"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:43:21.180" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:43:21.180" endtime="20181118 11:43:21.200"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:43:21.210" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:43:21.220" level="INFO">@{queryResults} = [ (1777, '厕所碰到物理老师，紧张的尿不出来。物理老师开口了：假设你的机机距地面0.8m，初速度为10m/s，不考虑空气阻力，求你尿了多远？我脸红着问道：是从最前端算起吗？老师趴过来看了看，说：你这个可以忽略不计了.') ]</msg>
<status status="PASS" starttime="20181118 11:43:21.200" endtime="20181118 11:43:21.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:43:21.220" level="INFO">@{results} = [ 1777 | 厕所碰到物理老师，紧张的尿不出来。物理老师开口了：假设你的机机距地面0.8m，初速度为10m/s，不考虑空气阻力，求你尿了多远？我脸红着问道：是从最前端算起吗？老师趴过来看了看，说：你这个可以忽略不计了. ]</msg>
<status status="PASS" starttime="20181118 11:43:21.220" endtime="20181118 11:43:21.220"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:43:21.220" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1777; </msg>
<status status="PASS" starttime="20181118 11:43:21.220" endtime="20181118 11:43:21.520"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:43:21.520" level="INFO">1777</msg>
<msg timestamp="20181118 11:43:21.530" level="INFO">厕所碰到物理老师，紧张的尿不出来。物理老师开口了：假设你的机机距地面0.8m，初速度为10m/s，不考虑空气阻力，求你尿了多远？我脸红着问道：是从最前端算起吗？老师趴过来看了看，说：你这个可以忽略不计了.</msg>
<status status="PASS" starttime="20181118 11:43:21.520" endtime="20181118 11:43:21.530"></status>
</kw>
<msg timestamp="20181118 11:43:21.530" level="INFO">${aJoke} = 厕所碰到物理老师，紧张的尿不出来。物理老师开口了：假设你的机机距地面0.8m，初速度为10m/s，不考虑空气阻力，求你尿了多远？我脸红着问道：是从最前端算起吗？老师趴过来看了看，说：你这个可以忽略不计了.</msg>
<status status="PASS" starttime="20181118 11:43:21.180" endtime="20181118 11:43:21.530"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:43:21.530" level="INFO">Typing text '厕所碰到物理老师，紧张的尿不出来。物理老师开口了：假设你的机机距地面0.8m，初速度为10m/s，不考虑空气阻力，求你尿了多远？我脸红着问道：是从最前端算起吗？老师趴过来看了看，说：你这个可以忽略不计了.' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:43:21.530" endtime="20181118 11:43:34.275"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:43:34.275" endtime="20181118 11:43:39.841"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:43:39.841" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:43:39.841" endtime="20181118 11:43:43.263"></status>
</kw>
<status status="PASS" starttime="20181118 11:43:21.170" endtime="20181118 11:43:43.263"></status>
</kw>
<kw name="${index} = 84" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:43:43.273" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:43:43.263" endtime="20181118 11:43:43.273"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:43:43.273" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:43:43.273" endtime="20181118 11:43:43.333"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:43:43.333" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:43:43.343" level="INFO">@{queryResults} = [ (1778, '我们大学xx老师最看不惯上课不认真的人。一天。他看到一女肩上有一根细线。他以为是耳机线。于是他一个贱步冲上去。用力一扯。并说。上课不许听歌。于是。该妹子的A罩被全部扯出。然后。就木有然后了。') ]</msg>
<status status="PASS" starttime="20181118 11:43:43.333" endtime="20181118 11:43:43.343"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:43:43.343" level="INFO">@{results} = [ 1778 | 我们大学xx老师最看不惯上课不认真的人。一天。他看到一女肩上有一根细线。他以为是耳机线。于是他一个贱步冲上去。用力一扯。并说。上课不许听歌。于是。该妹子的A罩被全部扯出。然后。就木有然后了。 ]</msg>
<status status="PASS" starttime="20181118 11:43:43.343" endtime="20181118 11:43:43.343"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:43:43.353" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1778; </msg>
<status status="PASS" starttime="20181118 11:43:43.343" endtime="20181118 11:43:43.643"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:43:43.653" level="INFO">1778</msg>
<msg timestamp="20181118 11:43:43.653" level="INFO">我们大学xx老师最看不惯上课不认真的人。一天。他看到一女肩上有一根细线。他以为是耳机线。于是他一个贱步冲上去。用力一扯。并说。上课不许听歌。于是。该妹子的A罩被全部扯出。然后。就木有然后了。</msg>
<status status="PASS" starttime="20181118 11:43:43.643" endtime="20181118 11:43:43.653"></status>
</kw>
<msg timestamp="20181118 11:43:43.653" level="INFO">${aJoke} = 我们大学xx老师最看不惯上课不认真的人。一天。他看到一女肩上有一根细线。他以为是耳机线。于是他一个贱步冲上去。用力一扯。并说。上课不许听歌。于是。该妹子的A罩被全部扯出。然后。就木有然后了。</msg>
<status status="PASS" starttime="20181118 11:43:43.263" endtime="20181118 11:43:43.653"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:43:43.653" level="INFO">Typing text '我们大学xx老师最看不惯上课不认真的人。一天。他看到一女肩上有一根细线。他以为是耳机线。于是他一个贱步冲上去。用力一扯。并说。上课不许听歌。于是。该妹子的A罩被全部扯出。然后。就木有然后了。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:43:43.653" endtime="20181118 11:43:56.514"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:43:56.514" endtime="20181118 11:44:01.230"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:44:01.240" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:44:01.230" endtime="20181118 11:44:06.356"></status>
</kw>
<status status="PASS" starttime="20181118 11:43:43.263" endtime="20181118 11:44:06.356"></status>
</kw>
<kw name="${index} = 85" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:44:06.356" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:44:06.356" endtime="20181118 11:44:06.356"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:44:06.356" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:44:06.356" endtime="20181118 11:44:06.386"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:44:06.386" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:44:06.406" level="INFO">@{queryResults} = [ (1779, '哥们车展新买一辆车去4s店提车！各种手续都办好了。销售人员说，买车送保养和车膜！销售人员问哥们要什么样的车膜，那二货哥们想都不想，就说：要送就送个1米7以上，气质好的！') ]</msg>
<status status="PASS" starttime="20181118 11:44:06.386" endtime="20181118 11:44:06.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:44:06.406" level="INFO">@{results} = [ 1779 | 哥们车展新买一辆车去4s店提车！各种手续都办好了。销售人员说，买车送保养和车膜！销售人员问哥们要什么样的车膜，那二货哥们想都不想，就说：要送就送个1米7以上，气质好的！ ]</msg>
<status status="PASS" starttime="20181118 11:44:06.406" endtime="20181118 11:44:06.406"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:44:06.406" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1779; </msg>
<status status="PASS" starttime="20181118 11:44:06.406" endtime="20181118 11:44:06.716"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:44:06.716" level="INFO">1779</msg>
<msg timestamp="20181118 11:44:06.716" level="INFO">哥们车展新买一辆车去4s店提车！各种手续都办好了。销售人员说，买车送保养和车膜！销售人员问哥们要什么样的车膜，那二货哥们想都不想，就说：要送就送个1米7以上，气质好的！</msg>
<status status="PASS" starttime="20181118 11:44:06.716" endtime="20181118 11:44:06.716"></status>
</kw>
<msg timestamp="20181118 11:44:06.716" level="INFO">${aJoke} = 哥们车展新买一辆车去4s店提车！各种手续都办好了。销售人员说，买车送保养和车膜！销售人员问哥们要什么样的车膜，那二货哥们想都不想，就说：要送就送个1米7以上，气质好的！</msg>
<status status="PASS" starttime="20181118 11:44:06.356" endtime="20181118 11:44:06.716"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:44:06.726" level="INFO">Typing text '哥们车展新买一辆车去4s店提车！各种手续都办好了。销售人员说，买车送保养和车膜！销售人员问哥们要什么样的车膜，那二货哥们想都不想，就说：要送就送个1米7以上，气质好的！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:44:06.726" endtime="20181118 11:44:18.256"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:44:18.256" endtime="20181118 11:44:24.160"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:44:24.160" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:44:24.160" endtime="20181118 11:44:30.609"></status>
</kw>
<status status="PASS" starttime="20181118 11:44:06.356" endtime="20181118 11:44:30.609"></status>
</kw>
<kw name="${index} = 86" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:44:30.619" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:44:30.619" endtime="20181118 11:44:30.619"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:44:30.619" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:44:30.619" endtime="20181118 11:44:30.649"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:44:30.649" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:44:30.659" level="INFO">@{queryResults} = [ (1780, '有一个人患有严重的囗吃,每次跟人说话总是支支吾吾的. 有一天,他老婆再也受不了他的囗吃,便叫他去看医生. 到了医院, 挂完号,医生叫他进去後,他便对医生说: 医....生..,你...你...可不...可以...治..治疗...我....的囗...吃 。 经过医生对他仔细的检查之後,说：你的囗吃的病因是因为你的老二太大了,足足有四十公分,如果你要治愈你的囗吃的话,必须动手术切除...</msg>
<status status="PASS" starttime="20181118 11:44:30.649" endtime="20181118 11:44:30.669"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:44:30.669" level="INFO">@{results} = [ 1780 | 有一个人患有严重的囗吃,每次跟人说话总是支支吾吾的. 有一天,他老婆再也受不了他的囗吃,便叫他去看医生. 到了医院, 挂完号,医生叫他进去後,他便对医生说: 医....生..,你...你...可不...可以...治..治疗...我....的囗...吃 。 经过医生对他仔细的检查之後,说：你的囗吃的病因是因为你的老二太大了,足足有四十公分,如果你要治愈你的囗吃的话,必须动手术切除十...</msg>
<status status="PASS" starttime="20181118 11:44:30.669" endtime="20181118 11:44:30.669"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:44:30.669" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1780; </msg>
<status status="PASS" starttime="20181118 11:44:30.669" endtime="20181118 11:44:30.689"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:44:30.689" level="INFO">1780</msg>
<msg timestamp="20181118 11:44:30.699" level="INFO">有一个人患有严重的囗吃,每次跟人说话总是支支吾吾的. 有一天,他老婆再也受不了他的囗吃,便叫他去看医生. 到了医院, 挂完号,医生叫他进去後,他便对医生说: 医....生..,你...你...可不...可以...治..治疗...我....的囗...吃 。 经过医生对他仔细的检查之後,说：你的囗吃的病因是因为你的老二太大了,足足有四十公分,如果你要治愈你的囗吃的话,必须动手术切除十五公分。 为了治疗讨厌的囗吃, 他便接受切除手术,切除掉十五公分. 手术後果然他的囗吃不见了,说起话来也变溜了,他便很高兴地回家了. 老婆看到他的囗吃治好了也非常高兴,可是,当天晚上,当他们做完爱之後,他老 婆觉得非常不满足, 便对他说:我觉得你还是以前那样比较好,你明天再去拜托医生帮你接回来吧! 第二天,他又去医院,见到医生时便对他说:"医生,请你在动一次手术,我想将 我的老二接回原来的样子 结果医生对他说: 来...来...不及......了</msg>
<status status="PASS" starttime="20181118 11:44:30.689" endtime="20181118 11:44:30.699"></status>
</kw>
<msg timestamp="20181118 11:44:30.699" level="INFO">${aJoke} = 有一个人患有严重的囗吃,每次跟人说话总是支支吾吾的. 有一天,他老婆再也受不了他的囗吃,便叫他去看医生. 到了医院, 挂完号,医生叫他进去後,他便对医生说: 医....生..,你...你...可不...可以...治..治疗...我....的囗...吃 。 经过医生对他仔细的检查之後,说：你的囗吃的病因是因为你的老二太大了,足足有四十公分,如果你要治愈你的囗吃的话,必须动手术切除十五公分。 为了治疗...</msg>
<status status="PASS" starttime="20181118 11:44:30.619" endtime="20181118 11:44:30.699"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:44:30.709" level="INFO">Typing text '有一个人患有严重的囗吃,每次跟人说话总是支支吾吾的. 有一天,他老婆再也受不了他的囗吃,便叫他去看医生. 到了医院, 挂完号,医生叫他进去後,他便对医生说: 医....生..,你...你...可不...可以...治..治疗...我....的囗...吃 。 经过医生对他仔细的检查之後,说：你的囗吃的病因是因为你的老二太大了,足足有四十公分,如果你要治愈你的囗吃的话,必须动手术切除十五公分。 为了治疗讨厌的囗吃, 他便接受切除手术,切除掉十五公分. 手术後果然他的囗吃不见了,说起话来也变溜了,他便很高兴地回家了. 老婆看到他的囗吃治好了也非常高兴,可是,当天晚上,当他们做完爱之後,他老 婆觉得非常不满足, 便对他说:我觉得你还是以前那样比较好,你明天再去拜托医生帮你接回来吧! 第二天,他又去医院,见到医生时便对他说:"医生,请你在动一次手术,我想将 我的老二接回原来的样子 结果医生对他说: 来...来...不及......了' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:44:30.699" endtime="20181118 11:44:51.341"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:44:51.341" endtime="20181118 11:44:58.302"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:44:58.302" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:44:58.302" endtime="20181118 11:45:02.768"></status>
</kw>
<status status="PASS" starttime="20181118 11:44:30.619" endtime="20181118 11:45:02.778"></status>
</kw>
<kw name="${index} = 87" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:45:02.778" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:45:02.778" endtime="20181118 11:45:02.778"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:45:02.778" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:45:02.778" endtime="20181118 11:45:02.808"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:45:02.808" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:45:02.818" level="INFO">@{queryResults} = [ (1781, '上课的时候最喜欢听老师说的一句话就是“我们接下来点一下名啊”，每次听到这种话心里就会暗爽：哈哈这节课没白来。#存在感爆表#') ]</msg>
<status status="PASS" starttime="20181118 11:45:02.808" endtime="20181118 11:45:02.818"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:45:02.828" level="INFO">@{results} = [ 1781 | 上课的时候最喜欢听老师说的一句话就是“我们接下来点一下名啊”，每次听到这种话心里就会暗爽：哈哈这节课没白来。#存在感爆表# ]</msg>
<status status="PASS" starttime="20181118 11:45:02.818" endtime="20181118 11:45:02.828"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:45:02.828" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1781; </msg>
<status status="PASS" starttime="20181118 11:45:02.828" endtime="20181118 11:45:02.838"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:45:02.838" level="INFO">1781</msg>
<msg timestamp="20181118 11:45:02.848" level="INFO">上课的时候最喜欢听老师说的一句话就是“我们接下来点一下名啊”，每次听到这种话心里就会暗爽：哈哈这节课没白来。#存在感爆表#</msg>
<status status="PASS" starttime="20181118 11:45:02.838" endtime="20181118 11:45:02.849"></status>
</kw>
<msg timestamp="20181118 11:45:02.849" level="INFO">${aJoke} = 上课的时候最喜欢听老师说的一句话就是“我们接下来点一下名啊”，每次听到这种话心里就会暗爽：哈哈这节课没白来。#存在感爆表#</msg>
<status status="PASS" starttime="20181118 11:45:02.778" endtime="20181118 11:45:02.849"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:45:02.849" level="INFO">Typing text '上课的时候最喜欢听老师说的一句话就是“我们接下来点一下名啊”，每次听到这种话心里就会暗爽：哈哈这节课没白来。#存在感爆表#' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:45:02.849" endtime="20181118 11:45:13.773"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:45:13.773" endtime="20181118 11:45:19.963"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:45:19.963" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:45:19.963" endtime="20181118 11:45:25.126"></status>
</kw>
<status status="PASS" starttime="20181118 11:45:02.778" endtime="20181118 11:45:25.126"></status>
</kw>
<kw name="${index} = 88" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:45:25.136" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:45:25.136" endtime="20181118 11:45:25.136"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:45:25.136" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:45:25.136" endtime="20181118 11:45:25.156"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:45:25.156" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:45:25.176" level="INFO">@{queryResults} = [ (1782, '还记得学车的时候，一学弟开进隧道就被教练一掌＂该干什么？＂学弟检查了一通没说话，接着又是一掌＂还不知道！开灯啊＂学弟说我开了，教练看了仪表不言。出了隧道才说＂我就说嘛，怎么开了等还是黑，我墨镜都没摘，留下学弟凌乱，我们狂笑....') ]</msg>
<status status="PASS" starttime="20181118 11:45:25.156" endtime="20181118 11:45:25.176"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:45:25.176" level="INFO">@{results} = [ 1782 | 还记得学车的时候，一学弟开进隧道就被教练一掌＂该干什么？＂学弟检查了一通没说话，接着又是一掌＂还不知道！开灯啊＂学弟说我开了，教练看了仪表不言。出了隧道才说＂我就说嘛，怎么开了等还是黑，我墨镜都没摘，留下学弟凌乱，我们狂笑.... ]</msg>
<status status="PASS" starttime="20181118 11:45:25.176" endtime="20181118 11:45:25.176"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:45:25.176" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1782; </msg>
<status status="PASS" starttime="20181118 11:45:25.176" endtime="20181118 11:45:25.196"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:45:25.196" level="INFO">1782</msg>
<msg timestamp="20181118 11:45:25.196" level="INFO">还记得学车的时候，一学弟开进隧道就被教练一掌＂该干什么？＂学弟检查了一通没说话，接着又是一掌＂还不知道！开灯啊＂学弟说我开了，教练看了仪表不言。出了隧道才说＂我就说嘛，怎么开了等还是黑，我墨镜都没摘，留下学弟凌乱，我们狂笑....</msg>
<status status="PASS" starttime="20181118 11:45:25.196" endtime="20181118 11:45:25.196"></status>
</kw>
<msg timestamp="20181118 11:45:25.196" level="INFO">${aJoke} = 还记得学车的时候，一学弟开进隧道就被教练一掌＂该干什么？＂学弟检查了一通没说话，接着又是一掌＂还不知道！开灯啊＂学弟说我开了，教练看了仪表不言。出了隧道才说＂我就说嘛，怎么开了等还是黑，我墨镜都没摘，留下学弟凌乱，我们狂笑....</msg>
<status status="PASS" starttime="20181118 11:45:25.136" endtime="20181118 11:45:25.196"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:45:25.196" level="INFO">Typing text '还记得学车的时候，一学弟开进隧道就被教练一掌＂该干什么？＂学弟检查了一通没说话，接着又是一掌＂还不知道！开灯啊＂学弟说我开了，教练看了仪表不言。出了隧道才说＂我就说嘛，怎么开了等还是黑，我墨镜都没摘，留下学弟凌乱，我们狂笑....' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:45:25.196" endtime="20181118 11:45:36.482"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:45:36.482" endtime="20181118 11:45:40.090"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:45:40.100" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:45:40.090" endtime="20181118 11:45:42.519"></status>
</kw>
<status status="PASS" starttime="20181118 11:45:25.136" endtime="20181118 11:45:42.519"></status>
</kw>
<kw name="${index} = 89" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:45:42.519" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:45:42.519" endtime="20181118 11:45:42.519"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:45:42.529" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:45:42.519" endtime="20181118 11:45:42.579"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:45:42.579" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:45:42.589" level="INFO">@{queryResults} = [ (1783, '有一次，一个朋友问我认为历史上哪个男人最帅，我说是潘安，他很不屑的说是杨宗保，我问为什么？他一脸得意的说：“你不知道，人家花木兰第一眼见了他就爱上他了呀？”') ]</msg>
<status status="PASS" starttime="20181118 11:45:42.579" endtime="20181118 11:45:42.589"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:45:42.599" level="INFO">@{results} = [ 1783 | 有一次，一个朋友问我认为历史上哪个男人最帅，我说是潘安，他很不屑的说是杨宗保，我问为什么？他一脸得意的说：“你不知道，人家花木兰第一眼见了他就爱上他了呀？” ]</msg>
<status status="PASS" starttime="20181118 11:45:42.589" endtime="20181118 11:45:42.599"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:45:42.599" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1783; </msg>
<status status="PASS" starttime="20181118 11:45:42.599" endtime="20181118 11:45:42.900"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:45:42.900" level="INFO">1783</msg>
<msg timestamp="20181118 11:45:42.900" level="INFO">有一次，一个朋友问我认为历史上哪个男人最帅，我说是潘安，他很不屑的说是杨宗保，我问为什么？他一脸得意的说：“你不知道，人家花木兰第一眼见了他就爱上他了呀？”</msg>
<status status="PASS" starttime="20181118 11:45:42.900" endtime="20181118 11:45:42.900"></status>
</kw>
<msg timestamp="20181118 11:45:42.900" level="INFO">${aJoke} = 有一次，一个朋友问我认为历史上哪个男人最帅，我说是潘安，他很不屑的说是杨宗保，我问为什么？他一脸得意的说：“你不知道，人家花木兰第一眼见了他就爱上他了呀？”</msg>
<status status="PASS" starttime="20181118 11:45:42.519" endtime="20181118 11:45:42.910"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:45:42.910" level="INFO">Typing text '有一次，一个朋友问我认为历史上哪个男人最帅，我说是潘安，他很不屑的说是杨宗保，我问为什么？他一脸得意的说：“你不知道，人家花木兰第一眼见了他就爱上他了呀？”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:45:42.910" endtime="20181118 11:45:55.713"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:45:55.723" endtime="20181118 11:46:02.695"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:46:02.705" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:46:02.705" endtime="20181118 11:46:09.616"></status>
</kw>
<status status="PASS" starttime="20181118 11:45:42.519" endtime="20181118 11:46:09.616"></status>
</kw>
<kw name="${index} = 90" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:46:09.626" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:46:09.616" endtime="20181118 11:46:09.626"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:46:09.626" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:46:09.626" endtime="20181118 11:46:09.646"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:46:09.646" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:46:09.686" level="INFO">@{queryResults} = [ (1784, '大学的时候上模电实验课，用示波器观察整流电路的波形，我做完了就在实验室里转悠一个美眉拉住我说：“看看我的波好不好？”我立马脸红，才发现她用手指着示波器上的正弦波。 我慌乱中说： “你的波好是好，就是不够圆滑。”顺手就给她调了一下，谁知道一下个给弄成三角波了，美眉立马急了：“你陪我的波，陪我的波……”我落荒而逃。') ]</msg>
<status status="PASS" starttime="20181118 11:46:09.646" endtime="20181118 11:46:09.686"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:46:09.686" level="INFO">@{results} = [ 1784 | 大学的时候上模电实验课，用示波器观察整流电路的波形，我做完了就在实验室里转悠一个美眉拉住我说：“看看我的波好不好？”我立马脸红，才发现她用手指着示波器上的正弦波。 我慌乱中说： “你的波好是好，就是不够圆滑。”顺手就给她调了一下，谁知道一下个给弄成三角波了，美眉立马急了：“你陪我的波，陪我的波……”我落荒而逃。 ]</msg>
<status status="PASS" starttime="20181118 11:46:09.686" endtime="20181118 11:46:09.686"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:46:09.686" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1784; </msg>
<status status="PASS" starttime="20181118 11:46:09.686" endtime="20181118 11:46:09.986"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:46:09.986" level="INFO">1784</msg>
<msg timestamp="20181118 11:46:09.986" level="INFO">大学的时候上模电实验课，用示波器观察整流电路的波形，我做完了就在实验室里转悠一个美眉拉住我说：“看看我的波好不好？”我立马脸红，才发现她用手指着示波器上的正弦波。 我慌乱中说： “你的波好是好，就是不够圆滑。”顺手就给她调了一下，谁知道一下个给弄成三角波了，美眉立马急了：“你陪我的波，陪我的波……”我落荒而逃。</msg>
<status status="PASS" starttime="20181118 11:46:09.986" endtime="20181118 11:46:09.986"></status>
</kw>
<msg timestamp="20181118 11:46:09.996" level="INFO">${aJoke} = 大学的时候上模电实验课，用示波器观察整流电路的波形，我做完了就在实验室里转悠一个美眉拉住我说：“看看我的波好不好？”我立马脸红，才发现她用手指着示波器上的正弦波。 我慌乱中说： “你的波好是好，就是不够圆滑。”顺手就给她调了一下，谁知道一下个给弄成三角波了，美眉立马急了：“你陪我的波，陪我的波……”我落荒而逃。</msg>
<status status="PASS" starttime="20181118 11:46:09.616" endtime="20181118 11:46:09.996"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:46:09.996" level="INFO">Typing text '大学的时候上模电实验课，用示波器观察整流电路的波形，我做完了就在实验室里转悠一个美眉拉住我说：“看看我的波好不好？”我立马脸红，才发现她用手指着示波器上的正弦波。 我慌乱中说： “你的波好是好，就是不够圆滑。”顺手就给她调了一下，谁知道一下个给弄成三角波了，美眉立马急了：“你陪我的波，陪我的波……”我落荒而逃。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:46:09.996" endtime="20181118 11:46:22.997"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:46:22.997" endtime="20181118 11:46:26.819"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:46:26.830" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:46:26.829" endtime="20181118 11:46:30.042"></status>
</kw>
<status status="PASS" starttime="20181118 11:46:09.616" endtime="20181118 11:46:30.042"></status>
</kw>
<kw name="${index} = 91" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:46:30.052" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:46:30.052" endtime="20181118 11:46:30.052"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:46:30.062" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:46:30.052" endtime="20181118 11:46:30.122"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:46:30.122" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:46:30.132" level="INFO">@{queryResults} = [ (1785, '我同学的朋友，人比较呆滞，面相可能还好。前些年去考北影给考上了，回来我们问他考啥呢？他说主考官让装白痴呢，他们都装的可象了。我们说那你咋装的，他说：我没装啊，我就这么走了一圈就给选上了……') ]</msg>
<status status="PASS" starttime="20181118 11:46:30.122" endtime="20181118 11:46:30.132"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:46:30.132" level="INFO">@{results} = [ 1785 | 我同学的朋友，人比较呆滞，面相可能还好。前些年去考北影给考上了，回来我们问他考啥呢？他说主考官让装白痴呢，他们都装的可象了。我们说那你咋装的，他说：我没装啊，我就这么走了一圈就给选上了…… ]</msg>
<status status="PASS" starttime="20181118 11:46:30.132" endtime="20181118 11:46:30.132"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:46:30.142" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1785; </msg>
<status status="PASS" starttime="20181118 11:46:30.142" endtime="20181118 11:46:30.152"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:46:30.162" level="INFO">1785</msg>
<msg timestamp="20181118 11:46:30.162" level="INFO">我同学的朋友，人比较呆滞，面相可能还好。前些年去考北影给考上了，回来我们问他考啥呢？他说主考官让装白痴呢，他们都装的可象了。我们说那你咋装的，他说：我没装啊，我就这么走了一圈就给选上了……</msg>
<status status="PASS" starttime="20181118 11:46:30.152" endtime="20181118 11:46:30.162"></status>
</kw>
<msg timestamp="20181118 11:46:30.162" level="INFO">${aJoke} = 我同学的朋友，人比较呆滞，面相可能还好。前些年去考北影给考上了，回来我们问他考啥呢？他说主考官让装白痴呢，他们都装的可象了。我们说那你咋装的，他说：我没装啊，我就这么走了一圈就给选上了……</msg>
<status status="PASS" starttime="20181118 11:46:30.052" endtime="20181118 11:46:30.162"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:46:30.162" level="INFO">Typing text '我同学的朋友，人比较呆滞，面相可能还好。前些年去考北影给考上了，回来我们问他考啥呢？他说主考官让装白痴呢，他们都装的可象了。我们说那你咋装的，他说：我没装啊，我就这么走了一圈就给选上了……' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:46:30.162" endtime="20181118 11:46:42.547"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:46:42.557" endtime="20181118 11:46:47.647"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:46:47.657" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:46:47.657" endtime="20181118 11:46:53.034"></status>
</kw>
<status status="PASS" starttime="20181118 11:46:30.042" endtime="20181118 11:46:53.034"></status>
</kw>
<kw name="${index} = 92" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:46:53.044" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:46:53.034" endtime="20181118 11:46:53.044"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:46:53.044" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:46:53.044" endtime="20181118 11:46:53.074"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:46:53.074" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:46:53.084" level="INFO">@{queryResults} = [ (1786, '晚上怎么挑逗老公，老公都硬不起来，十分生气的别过脸去，二货老公在一旁幽幽的说：我这可是智能鸡啊，没有密码别想让它硬起来。我问老公密码是什么呀，老公一脸淫笑的说上下滑动十次解锁。') ]</msg>
<status status="PASS" starttime="20181118 11:46:53.074" endtime="20181118 11:46:53.084"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:46:53.084" level="INFO">@{results} = [ 1786 | 晚上怎么挑逗老公，老公都硬不起来，十分生气的别过脸去，二货老公在一旁幽幽的说：我这可是智能鸡啊，没有密码别想让它硬起来。我问老公密码是什么呀，老公一脸淫笑的说上下滑动十次解锁。 ]</msg>
<status status="PASS" starttime="20181118 11:46:53.084" endtime="20181118 11:46:53.084"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:46:53.134" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1786; </msg>
<status status="PASS" starttime="20181118 11:46:53.134" endtime="20181118 11:46:53.444"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:46:53.444" level="INFO">1786</msg>
<msg timestamp="20181118 11:46:53.444" level="INFO">晚上怎么挑逗老公，老公都硬不起来，十分生气的别过脸去，二货老公在一旁幽幽的说：我这可是智能鸡啊，没有密码别想让它硬起来。我问老公密码是什么呀，老公一脸淫笑的说上下滑动十次解锁。</msg>
<status status="PASS" starttime="20181118 11:46:53.444" endtime="20181118 11:46:53.444"></status>
</kw>
<msg timestamp="20181118 11:46:53.444" level="INFO">${aJoke} = 晚上怎么挑逗老公，老公都硬不起来，十分生气的别过脸去，二货老公在一旁幽幽的说：我这可是智能鸡啊，没有密码别想让它硬起来。我问老公密码是什么呀，老公一脸淫笑的说上下滑动十次解锁。</msg>
<status status="PASS" starttime="20181118 11:46:53.034" endtime="20181118 11:46:53.444"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:46:53.444" level="INFO">Typing text '晚上怎么挑逗老公，老公都硬不起来，十分生气的别过脸去，二货老公在一旁幽幽的说：我这可是智能鸡啊，没有密码别想让它硬起来。我问老公密码是什么呀，老公一脸淫笑的说上下滑动十次解锁。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:46:53.444" endtime="20181118 11:47:05.899"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:47:05.899" endtime="20181118 11:47:09.689"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:47:09.689" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:47:09.689" endtime="20181118 11:47:12.719"></status>
</kw>
<status status="PASS" starttime="20181118 11:46:53.034" endtime="20181118 11:47:12.719"></status>
</kw>
<kw name="${index} = 93" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:47:12.729" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:47:12.729" endtime="20181118 11:47:12.729"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:47:12.729" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:47:12.729" endtime="20181118 11:47:12.759"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:47:12.759" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:47:12.769" level="INFO">@{queryResults} = [ (1787, '一头公牛和一头母牛一起去逛街，正走到烧烤摊的时候，一个年轻人大声的喊了一句:老板，来一根牛鞭，话音刚落，公牛掉头就跑，母牛也跟着跑起来，这时公牛就纳闷了，就问:人家要烤牛鞭你跑什么？母牛回了一句，你不知道啊，现在的年轻人喝了几杯就喜欢吹牛逼。') ]</msg>
<status status="PASS" starttime="20181118 11:47:12.759" endtime="20181118 11:47:12.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:47:12.779" level="INFO">@{results} = [ 1787 | 一头公牛和一头母牛一起去逛街，正走到烧烤摊的时候，一个年轻人大声的喊了一句:老板，来一根牛鞭，话音刚落，公牛掉头就跑，母牛也跟着跑起来，这时公牛就纳闷了，就问:人家要烤牛鞭你跑什么？母牛回了一句，你不知道啊，现在的年轻人喝了几杯就喜欢吹牛逼。 ]</msg>
<status status="PASS" starttime="20181118 11:47:12.779" endtime="20181118 11:47:12.779"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:47:12.779" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1787; </msg>
<status status="PASS" starttime="20181118 11:47:12.779" endtime="20181118 11:47:13.069"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:47:13.069" level="INFO">1787</msg>
<msg timestamp="20181118 11:47:13.069" level="INFO">一头公牛和一头母牛一起去逛街，正走到烧烤摊的时候，一个年轻人大声的喊了一句:老板，来一根牛鞭，话音刚落，公牛掉头就跑，母牛也跟着跑起来，这时公牛就纳闷了，就问:人家要烤牛鞭你跑什么？母牛回了一句，你不知道啊，现在的年轻人喝了几杯就喜欢吹牛逼。</msg>
<status status="PASS" starttime="20181118 11:47:13.069" endtime="20181118 11:47:13.069"></status>
</kw>
<msg timestamp="20181118 11:47:13.069" level="INFO">${aJoke} = 一头公牛和一头母牛一起去逛街，正走到烧烤摊的时候，一个年轻人大声的喊了一句:老板，来一根牛鞭，话音刚落，公牛掉头就跑，母牛也跟着跑起来，这时公牛就纳闷了，就问:人家要烤牛鞭你跑什么？母牛回了一句，你不知道啊，现在的年轻人喝了几杯就喜欢吹牛逼。</msg>
<status status="PASS" starttime="20181118 11:47:12.729" endtime="20181118 11:47:13.069"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:47:13.079" level="INFO">Typing text '一头公牛和一头母牛一起去逛街，正走到烧烤摊的时候，一个年轻人大声的喊了一句:老板，来一根牛鞭，话音刚落，公牛掉头就跑，母牛也跟着跑起来，这时公牛就纳闷了，就问:人家要烤牛鞭你跑什么？母牛回了一句，你不知道啊，现在的年轻人喝了几杯就喜欢吹牛逼。' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:47:13.069" endtime="20181118 11:47:24.808"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:47:24.808" endtime="20181118 11:47:28.572"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:47:28.572" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:47:28.572" endtime="20181118 11:47:31.493"></status>
</kw>
<status status="PASS" starttime="20181118 11:47:12.729" endtime="20181118 11:47:31.493"></status>
</kw>
<kw name="${index} = 94" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:47:31.503" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:47:31.503" endtime="20181118 11:47:31.503"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:47:31.503" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:47:31.503" endtime="20181118 11:47:31.523"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:47:31.523" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:47:31.543" level="INFO">@{queryResults} = [ (1788, '第一次。 高中时有一次上英语课，班上一男同学趴着睡着，睡着睡着放了个响屁，全班哄笑。奇葩英语老师：这位童鞋，消化单词倒是挺快的！！') ]</msg>
<status status="PASS" starttime="20181118 11:47:31.523" endtime="20181118 11:47:31.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:47:31.543" level="INFO">@{results} = [ 1788 | 第一次。 高中时有一次上英语课，班上一男同学趴着睡着，睡着睡着放了个响屁，全班哄笑。奇葩英语老师：这位童鞋，消化单词倒是挺快的！！ ]</msg>
<status status="PASS" starttime="20181118 11:47:31.543" endtime="20181118 11:47:31.543"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:47:31.553" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1788; </msg>
<status status="PASS" starttime="20181118 11:47:31.553" endtime="20181118 11:47:31.593"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:47:31.593" level="INFO">1788</msg>
<msg timestamp="20181118 11:47:31.593" level="INFO">第一次。 高中时有一次上英语课，班上一男同学趴着睡着，睡着睡着放了个响屁，全班哄笑。奇葩英语老师：这位童鞋，消化单词倒是挺快的！！</msg>
<status status="PASS" starttime="20181118 11:47:31.593" endtime="20181118 11:47:31.593"></status>
</kw>
<msg timestamp="20181118 11:47:31.593" level="INFO">${aJoke} = 第一次。 高中时有一次上英语课，班上一男同学趴着睡着，睡着睡着放了个响屁，全班哄笑。奇葩英语老师：这位童鞋，消化单词倒是挺快的！！</msg>
<status status="PASS" starttime="20181118 11:47:31.493" endtime="20181118 11:47:31.593"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:47:31.603" level="INFO">Typing text '第一次。 高中时有一次上英语课，班上一男同学趴着睡着，睡着睡着放了个响屁，全班哄笑。奇葩英语老师：这位童鞋，消化单词倒是挺快的！！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:47:31.593" endtime="20181118 11:47:44.867"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:47:44.887" endtime="20181118 11:47:50.179"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:47:50.179" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:47:50.179" endtime="20181118 11:47:55.040"></status>
</kw>
<status status="PASS" starttime="20181118 11:47:31.493" endtime="20181118 11:47:55.050"></status>
</kw>
<kw name="${index} = 95" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:47:55.050" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:47:55.050" endtime="20181118 11:47:55.050"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:47:55.050" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:47:55.050" endtime="20181118 11:47:55.080"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:47:55.080" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:47:55.110" level="INFO">@{queryResults} = [ (1789, '有一对中年夫妇，育有二个非常美丽的女儿，但是他们一直向往生个儿子。他们终於决定做最後的尝试，经过几个月的努力，皇天不负苦心人，这位太太怀孕了，九个月之後，生下了一个健康的小男孩。这位快乐的爸爸冲到育婴室要去看他新生的儿子，却被他所看到的吓坏了，他的儿子竟然是他生平所见最丑的婴儿。他跑去见他老婆并告诉她，他绝对不可能是这个婴儿的父亲，并且很凶恶的责问他老婆：“你是不是背着我偷汉子...</msg>
<status status="PASS" starttime="20181118 11:47:55.080" endtime="20181118 11:47:55.110"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:47:55.110" level="INFO">@{results} = [ 1789 | 有一对中年夫妇，育有二个非常美丽的女儿，但是他们一直向往生个儿子。他们终於决定做最後的尝试，经过几个月的努力，皇天不负苦心人，这位太太怀孕了，九个月之後，生下了一个健康的小男孩。这位快乐的爸爸冲到育婴室要去看他新生的儿子，却被他所看到的吓坏了，他的儿子竟然是他生平所见最丑的婴儿。他跑去见他老婆并告诉她，他绝对不可能是这个婴儿的父亲，并且很凶恶的责问他老婆：“你是不是背着我偷汉子？...</msg>
<status status="PASS" starttime="20181118 11:47:55.110" endtime="20181118 11:47:55.110"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:47:55.110" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1789; </msg>
<status status="PASS" starttime="20181118 11:47:55.110" endtime="20181118 11:47:55.160"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:47:55.160" level="INFO">1789</msg>
<msg timestamp="20181118 11:47:55.170" level="INFO">有一对中年夫妇，育有二个非常美丽的女儿，但是他们一直向往生个儿子。他们终於决定做最後的尝试，经过几个月的努力，皇天不负苦心人，这位太太怀孕了，九个月之後，生下了一个健康的小男孩。这位快乐的爸爸冲到育婴室要去看他新生的儿子，却被他所看到的吓坏了，他的儿子竟然是他生平所见最丑的婴儿。他跑去见他老婆并告诉她，他绝对不可能是这个婴儿的父亲，并且很凶恶的责问他老婆：“你是不是背着我偷汉子？”他老婆很甜蜜的对他笑著说：“这一次没有。”</msg>
<status status="PASS" starttime="20181118 11:47:55.160" endtime="20181118 11:47:55.170"></status>
</kw>
<msg timestamp="20181118 11:47:55.170" level="INFO">${aJoke} = 有一对中年夫妇，育有二个非常美丽的女儿，但是他们一直向往生个儿子。他们终於决定做最後的尝试，经过几个月的努力，皇天不负苦心人，这位太太怀孕了，九个月之後，生下了一个健康的小男孩。这位快乐的爸爸冲到育婴室要去看他新生的儿子，却被他所看到的吓坏了，他的儿子竟然是他生平所见最丑的婴儿。他跑去见他老婆并告诉她，他绝对不可能是这个婴儿的父亲，并且很凶恶的责问他老婆：“你是不是背着我偷汉子？”他老婆很甜蜜的对...</msg>
<status status="PASS" starttime="20181118 11:47:55.050" endtime="20181118 11:47:55.170"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:47:55.170" level="INFO">Typing text '有一对中年夫妇，育有二个非常美丽的女儿，但是他们一直向往生个儿子。他们终於决定做最後的尝试，经过几个月的努力，皇天不负苦心人，这位太太怀孕了，九个月之後，生下了一个健康的小男孩。这位快乐的爸爸冲到育婴室要去看他新生的儿子，却被他所看到的吓坏了，他的儿子竟然是他生平所见最丑的婴儿。他跑去见他老婆并告诉她，他绝对不可能是这个婴儿的父亲，并且很凶恶的责问他老婆：“你是不是背着我偷汉子？”他老婆很甜蜜的对他笑著说：“这一次没有。”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:47:55.170" endtime="20181118 11:48:09.579"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:48:09.579" endtime="20181118 11:48:13.483"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:48:13.493" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:48:13.483" endtime="20181118 11:48:16.596"></status>
</kw>
<status status="PASS" starttime="20181118 11:47:55.050" endtime="20181118 11:48:16.596"></status>
</kw>
<kw name="${index} = 96" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:48:16.606" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:48:16.596" endtime="20181118 11:48:16.606"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:48:16.606" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:48:16.606" endtime="20181118 11:48:16.636"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:48:16.646" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:48:16.656" level="INFO">@{queryResults} = [ (1790, '刚刚看到令人非常愤慨的一幕！一个女孩子苦苦哀求一个男孩子不要分手，就差点跪下了，男孩子一脸漠然，身旁有另外一个女孩子，另外的这个女孩子还在斥责这个女的，说什么死缠烂打不要脸，他遇到我就不会再要你之类的。我实在气不过，上去摸着这个男人的耳垂说：你现在喜欢女人了？') ]</msg>
<status status="PASS" starttime="20181118 11:48:16.636" endtime="20181118 11:48:16.656"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:48:16.656" level="INFO">@{results} = [ 1790 | 刚刚看到令人非常愤慨的一幕！一个女孩子苦苦哀求一个男孩子不要分手，就差点跪下了，男孩子一脸漠然，身旁有另外一个女孩子，另外的这个女孩子还在斥责这个女的，说什么死缠烂打不要脸，他遇到我就不会再要你之类的。我实在气不过，上去摸着这个男人的耳垂说：你现在喜欢女人了？ ]</msg>
<status status="PASS" starttime="20181118 11:48:16.656" endtime="20181118 11:48:16.666"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:48:16.666" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1790; </msg>
<status status="PASS" starttime="20181118 11:48:16.666" endtime="20181118 11:48:16.956"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:48:16.966" level="INFO">1790</msg>
<msg timestamp="20181118 11:48:16.966" level="INFO">刚刚看到令人非常愤慨的一幕！一个女孩子苦苦哀求一个男孩子不要分手，就差点跪下了，男孩子一脸漠然，身旁有另外一个女孩子，另外的这个女孩子还在斥责这个女的，说什么死缠烂打不要脸，他遇到我就不会再要你之类的。我实在气不过，上去摸着这个男人的耳垂说：你现在喜欢女人了？</msg>
<status status="PASS" starttime="20181118 11:48:16.956" endtime="20181118 11:48:16.966"></status>
</kw>
<msg timestamp="20181118 11:48:16.966" level="INFO">${aJoke} = 刚刚看到令人非常愤慨的一幕！一个女孩子苦苦哀求一个男孩子不要分手，就差点跪下了，男孩子一脸漠然，身旁有另外一个女孩子，另外的这个女孩子还在斥责这个女的，说什么死缠烂打不要脸，他遇到我就不会再要你之类的。我实在气不过，上去摸着这个男人的耳垂说：你现在喜欢女人了？</msg>
<status status="PASS" starttime="20181118 11:48:16.596" endtime="20181118 11:48:16.966"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:48:16.966" level="INFO">Typing text '刚刚看到令人非常愤慨的一幕！一个女孩子苦苦哀求一个男孩子不要分手，就差点跪下了，男孩子一脸漠然，身旁有另外一个女孩子，另外的这个女孩子还在斥责这个女的，说什么死缠烂打不要脸，他遇到我就不会再要你之类的。我实在气不过，上去摸着这个男人的耳垂说：你现在喜欢女人了？' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:48:16.966" endtime="20181118 11:48:30.516"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:48:30.516" endtime="20181118 11:48:35.117"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:48:35.117" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:48:35.117" endtime="20181118 11:48:40.026"></status>
</kw>
<status status="PASS" starttime="20181118 11:48:16.596" endtime="20181118 11:48:40.026"></status>
</kw>
<kw name="${index} = 97" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:48:40.036" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:48:40.036" endtime="20181118 11:48:40.036"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:48:40.036" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:48:40.036" endtime="20181118 11:48:40.446"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:48:40.446" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:48:40.586" level="INFO">@{queryResults} = [ (1791, '正在博物馆展出的古埃及法老的木乃伊突然复活，抓住路过的一位年轻貌美的女游客。人们惊慌失措，不知道该怎么办才好。 正巧大导演斯皮尔伯格也在，只见他在法老耳边小声说了一句话，法老立刻放过那名貌似古埃及艳后的女子。 事后，人们纷纷猜测斯皮尔伯格究竟说了什么骇人听闻的咒语。 来自中国的知名女演员猜想，可能是这样一句话：“她身上的香水有毒。” 来自韩国的国际巨星猜想，一定是这样说的：“她...</msg>
<status status="PASS" starttime="20181118 11:48:40.446" endtime="20181118 11:48:40.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:48:40.596" level="INFO">@{results} = [ 1791 | 正在博物馆展出的古埃及法老的木乃伊突然复活，抓住路过的一位年轻貌美的女游客。人们惊慌失措，不知道该怎么办才好。 正巧大导演斯皮尔伯格也在，只见他在法老耳边小声说了一句话，法老立刻放过那名貌似古埃及艳后的女子。 事后，人们纷纷猜测斯皮尔伯格究竟说了什么骇人听闻的咒语。 来自中国的知名女演员猜想，可能是这样一句话：“她身上的香水有毒。” 来自韩国的国际巨星猜想，一定是这样说的：“她不...</msg>
<status status="PASS" starttime="20181118 11:48:40.596" endtime="20181118 11:48:40.596"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:48:40.596" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1791; </msg>
<status status="PASS" starttime="20181118 11:48:40.596" endtime="20181118 11:48:41.044"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:48:41.054" level="INFO">1791</msg>
<msg timestamp="20181118 11:48:41.054" level="INFO">正在博物馆展出的古埃及法老的木乃伊突然复活，抓住路过的一位年轻貌美的女游客。人们惊慌失措，不知道该怎么办才好。 正巧大导演斯皮尔伯格也在，只见他在法老耳边小声说了一句话，法老立刻放过那名貌似古埃及艳后的女子。 事后，人们纷纷猜测斯皮尔伯格究竟说了什么骇人听闻的咒语。 来自中国的知名女演员猜想，可能是这样一句话：“她身上的香水有毒。” 来自韩国的国际巨星猜想，一定是这样说的：“她不是淑女。” 来自日本的美女明星猜想：“你不要吓着她了。” 斯皮尔伯格闻言大笑，“其实，我只是这样说的：请注意自己的形象，你现在是个世界名人。”</msg>
<status status="PASS" starttime="20181118 11:48:41.044" endtime="20181118 11:48:41.054"></status>
</kw>
<msg timestamp="20181118 11:48:41.054" level="INFO">${aJoke} = 正在博物馆展出的古埃及法老的木乃伊突然复活，抓住路过的一位年轻貌美的女游客。人们惊慌失措，不知道该怎么办才好。 正巧大导演斯皮尔伯格也在，只见他在法老耳边小声说了一句话，法老立刻放过那名貌似古埃及艳后的女子。 事后，人们纷纷猜测斯皮尔伯格究竟说了什么骇人听闻的咒语。 来自中国的知名女演员猜想，可能是这样一句话：“她身上的香水有毒。” 来自韩国的国际巨星猜想，一定是这样说的：“她不是淑女。” 来自日...</msg>
<status status="PASS" starttime="20181118 11:48:40.036" endtime="20181118 11:48:41.054"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:48:41.054" level="INFO">Typing text '正在博物馆展出的古埃及法老的木乃伊突然复活，抓住路过的一位年轻貌美的女游客。人们惊慌失措，不知道该怎么办才好。 正巧大导演斯皮尔伯格也在，只见他在法老耳边小声说了一句话，法老立刻放过那名貌似古埃及艳后的女子。 事后，人们纷纷猜测斯皮尔伯格究竟说了什么骇人听闻的咒语。 来自中国的知名女演员猜想，可能是这样一句话：“她身上的香水有毒。” 来自韩国的国际巨星猜想，一定是这样说的：“她不是淑女。” 来自日本的美女明星猜想：“你不要吓着她了。” 斯皮尔伯格闻言大笑，“其实，我只是这样说的：请注意自己的形象，你现在是个世界名人。”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:48:41.054" endtime="20181118 11:48:57.894"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:48:57.904" endtime="20181118 11:49:02.971"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:49:02.981" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:49:02.981" endtime="20181118 11:49:09.007"></status>
</kw>
<status status="PASS" starttime="20181118 11:48:40.026" endtime="20181118 11:49:09.007"></status>
</kw>
<kw name="${index} = 98" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:49:09.017" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:49:09.017" endtime="20181118 11:49:09.017"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:49:09.017" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:49:09.017" endtime="20181118 11:49:09.757"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:49:09.767" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:49:10.047" level="INFO">@{queryResults} = [ (1792, '和朋友聊诺基亚被收购的事： 妈的，那么好的手机怎么就混不下去了！朋友答：就因为太好了，用不坏。尼玛......') ]</msg>
<status status="PASS" starttime="20181118 11:49:09.757" endtime="20181118 11:49:10.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:49:10.047" level="INFO">@{results} = [ 1792 | 和朋友聊诺基亚被收购的事： 妈的，那么好的手机怎么就混不下去了！朋友答：就因为太好了，用不坏。尼玛...... ]</msg>
<status status="PASS" starttime="20181118 11:49:10.047" endtime="20181118 11:49:10.047"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:49:10.057" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1792; </msg>
<status status="PASS" starttime="20181118 11:49:10.057" endtime="20181118 11:49:10.609"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:49:10.609" level="INFO">1792</msg>
<msg timestamp="20181118 11:49:10.609" level="INFO">和朋友聊诺基亚被收购的事： 妈的，那么好的手机怎么就混不下去了！朋友答：就因为太好了，用不坏。尼玛......</msg>
<status status="PASS" starttime="20181118 11:49:10.609" endtime="20181118 11:49:10.609"></status>
</kw>
<msg timestamp="20181118 11:49:10.609" level="INFO">${aJoke} = 和朋友聊诺基亚被收购的事： 妈的，那么好的手机怎么就混不下去了！朋友答：就因为太好了，用不坏。尼玛......</msg>
<status status="PASS" starttime="20181118 11:49:09.007" endtime="20181118 11:49:10.609"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:49:10.619" level="INFO">Typing text '和朋友聊诺基亚被收购的事： 妈的，那么好的手机怎么就混不下去了！朋友答：就因为太好了，用不坏。尼玛......' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:49:10.619" endtime="20181118 11:49:21.475"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:49:21.475" endtime="20181118 11:49:25.373"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:49:25.373" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:49:25.373" endtime="20181118 11:49:29.647"></status>
</kw>
<status status="PASS" starttime="20181118 11:49:09.007" endtime="20181118 11:49:29.647"></status>
</kw>
<kw name="${index} = 99" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:49:29.657" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:49:29.657" endtime="20181118 11:49:29.657"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:49:29.667" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:49:29.657" endtime="20181118 11:49:29.927"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:49:29.927" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:49:30.047" level="INFO">@{queryResults} = [ (1793, '记得有一次化学课，一哥们玩手机被发现了，老师把手机拿去做实验，那哥们泪了，下课老师把手机还给他，他一看，化学老师在上面果断镀金了！') ]</msg>
<status status="PASS" starttime="20181118 11:49:29.927" endtime="20181118 11:49:30.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:49:30.047" level="INFO">@{results} = [ 1793 | 记得有一次化学课，一哥们玩手机被发现了，老师把手机拿去做实验，那哥们泪了，下课老师把手机还给他，他一看，化学老师在上面果断镀金了！ ]</msg>
<status status="PASS" starttime="20181118 11:49:30.047" endtime="20181118 11:49:30.047"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:49:30.047" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1793; </msg>
<status status="PASS" starttime="20181118 11:49:30.047" endtime="20181118 11:49:30.227"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:49:30.227" level="INFO">1793</msg>
<msg timestamp="20181118 11:49:30.227" level="INFO">记得有一次化学课，一哥们玩手机被发现了，老师把手机拿去做实验，那哥们泪了，下课老师把手机还给他，他一看，化学老师在上面果断镀金了！</msg>
<status status="PASS" starttime="20181118 11:49:30.227" endtime="20181118 11:49:30.227"></status>
</kw>
<msg timestamp="20181118 11:49:30.227" level="INFO">${aJoke} = 记得有一次化学课，一哥们玩手机被发现了，老师把手机拿去做实验，那哥们泪了，下课老师把手机还给他，他一看，化学老师在上面果断镀金了！</msg>
<status status="PASS" starttime="20181118 11:49:29.657" endtime="20181118 11:49:30.237"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:49:30.237" level="INFO">Typing text '记得有一次化学课，一哥们玩手机被发现了，老师把手机拿去做实验，那哥们泪了，下课老师把手机还给他，他一看，化学老师在上面果断镀金了！' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:49:30.237" endtime="20181118 11:49:41.727"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:49:41.737" endtime="20181118 11:49:46.035"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:49:46.035" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:49:46.035" endtime="20181118 11:49:51.685"></status>
</kw>
<status status="PASS" starttime="20181118 11:49:29.647" endtime="20181118 11:49:51.685"></status>
</kw>
<kw name="${index} = 100" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:49:51.685" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:49:51.685" endtime="20181118 11:49:51.685"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:49:51.695" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:49:51.685" endtime="20181118 11:49:51.865"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:49:51.865" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:49:51.955" level="INFO">@{queryResults} = [ (1794, '刚才喝着奶茶在街上瞎溜达被一女叫住对我说：我是从xx来的钱包被人在车上偷了你能给我点钱买吃的么！哥看那女的手里领着包长得挺漂亮胸还挺大然后就善心大发把奶茶递到她手里那女的接着来句“我不喝！哥当时就怒了“谁TM说让你喝啦，我是让你先拿着我给你掏钱！”') ]</msg>
<status status="PASS" starttime="20181118 11:49:51.865" endtime="20181118 11:49:51.955"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:49:51.955" level="INFO">@{results} = [ 1794 | 刚才喝着奶茶在街上瞎溜达被一女叫住对我说：我是从xx来的钱包被人在车上偷了你能给我点钱买吃的么！哥看那女的手里领着包长得挺漂亮胸还挺大然后就善心大发把奶茶递到她手里那女的接着来句“我不喝！哥当时就怒了“谁TM说让你喝啦，我是让你先拿着我给你掏钱！” ]</msg>
<status status="PASS" starttime="20181118 11:49:51.955" endtime="20181118 11:49:51.955"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:49:51.955" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1794; </msg>
<status status="PASS" starttime="20181118 11:49:51.955" endtime="20181118 11:49:52.355"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:49:52.355" level="INFO">1794</msg>
<msg timestamp="20181118 11:49:52.355" level="INFO">刚才喝着奶茶在街上瞎溜达被一女叫住对我说：我是从xx来的钱包被人在车上偷了你能给我点钱买吃的么！哥看那女的手里领着包长得挺漂亮胸还挺大然后就善心大发把奶茶递到她手里那女的接着来句“我不喝！哥当时就怒了“谁TM说让你喝啦，我是让你先拿着我给你掏钱！”</msg>
<status status="PASS" starttime="20181118 11:49:52.355" endtime="20181118 11:49:52.355"></status>
</kw>
<msg timestamp="20181118 11:49:52.355" level="INFO">${aJoke} = 刚才喝着奶茶在街上瞎溜达被一女叫住对我说：我是从xx来的钱包被人在车上偷了你能给我点钱买吃的么！哥看那女的手里领着包长得挺漂亮胸还挺大然后就善心大发把奶茶递到她手里那女的接着来句“我不喝！哥当时就怒了“谁TM说让你喝啦，我是让你先拿着我给你掏钱！”</msg>
<status status="PASS" starttime="20181118 11:49:51.685" endtime="20181118 11:49:52.355"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:49:52.365" level="INFO">Typing text '刚才喝着奶茶在街上瞎溜达被一女叫住对我说：我是从xx来的钱包被人在车上偷了你能给我点钱买吃的么！哥看那女的手里领着包长得挺漂亮胸还挺大然后就善心大发把奶茶递到她手里那女的接着来句“我不喝！哥当时就怒了“谁TM说让你喝啦，我是让你先拿着我给你掏钱！”' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:49:52.355" endtime="20181118 11:50:05.886"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:50:05.886" endtime="20181118 11:50:10.949"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:50:10.949" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:50:10.949" endtime="20181118 11:50:15.220"></status>
</kw>
<status status="PASS" starttime="20181118 11:49:51.685" endtime="20181118 11:50:15.220"></status>
</kw>
<kw name="${index} = 101" type="foritem">
<kw name="从数据库获取一个笑话并更新改笑话状态为已使用">
<assign>
<var>${aJoke}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>aaa</arg>
</arguments>
<msg timestamp="20181118 11:50:15.230" level="INFO">aaa</msg>
<status status="PASS" starttime="20181118 11:50:15.230" endtime="20181118 11:50:15.230"></status>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306</arg>
</arguments>
<msg timestamp="20181118 11:50:15.230" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='adminserver', user='admin', password='Huawei123', host='192.168.1.112', port=3306)) </msg>
<status status="PASS" starttime="20181118 11:50:15.230" endtime="20181118 11:50:15.290"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>selectStatement=select id,content from lengxiaohua where status=0 limit 1;</arg>
</arguments>
<assign>
<var>@{queryResults}</var>
</assign>
<msg timestamp="20181118 11:50:15.290" level="INFO">Executing : Query  |  select id,content from lengxiaohua where status=0 limit 1; </msg>
<msg timestamp="20181118 11:50:15.320" level="INFO">@{queryResults} = [ (1795, '今天带儿子逛街，路过一个家具店时，儿子指着店里一个大衣柜说：“爸爸，我们能买那个大衣柜吗？咱家的大衣柜太小了。” 我说：“咱家大衣柜不小啊。”儿子说：“可是好几次我放学回家看见王叔叔站在里面显得很挤。”#爸爸赶紧给了儿子两百块：不要告诉你妈，好不？#妈妈，别扇了…') ]</msg>
<status status="PASS" starttime="20181118 11:50:15.290" endtime="20181118 11:50:15.320"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{queryResults}[0]</arg>
</arguments>
<assign>
<var>@{results}</var>
</assign>
<msg timestamp="20181118 11:50:15.330" level="INFO">@{results} = [ 1795 | 今天带儿子逛街，路过一个家具店时，儿子指着店里一个大衣柜说：“爸爸，我们能买那个大衣柜吗？咱家的大衣柜太小了。” 我说：“咱家大衣柜不小啊。”儿子说：“可是好几次我放学回家看见王叔叔站在里面显得很挤。”#爸爸赶紧给了儿子两百块：不要告诉你妈，好不？#妈妈，别扇了… ]</msg>
<status status="PASS" starttime="20181118 11:50:15.320" endtime="20181118 11:50:15.330"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>sqlString=update lengxiaohua set status=1 where id=@{results}[0];</arg>
</arguments>
<msg timestamp="20181118 11:50:15.330" level="INFO">Executing : Execute SQL String  |  update lengxiaohua set status=1 where id=1795; </msg>
<status status="PASS" starttime="20181118 11:50:15.330" endtime="20181118 11:50:15.630"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{results}[0]</arg>
<arg>@{results}[1]</arg>
</arguments>
<msg timestamp="20181118 11:50:15.640" level="INFO">1795</msg>
<msg timestamp="20181118 11:50:15.640" level="INFO">今天带儿子逛街，路过一个家具店时，儿子指着店里一个大衣柜说：“爸爸，我们能买那个大衣柜吗？咱家的大衣柜太小了。” 我说：“咱家大衣柜不小啊。”儿子说：“可是好几次我放学回家看见王叔叔站在里面显得很挤。”#爸爸赶紧给了儿子两百块：不要告诉你妈，好不？#妈妈，别扇了…</msg>
<status status="PASS" starttime="20181118 11:50:15.640" endtime="20181118 11:50:15.640"></status>
</kw>
<msg timestamp="20181118 11:50:15.640" level="INFO">${aJoke} = 今天带儿子逛街，路过一个家具店时，儿子指着店里一个大衣柜说：“爸爸，我们能买那个大衣柜吗？咱家的大衣柜太小了。” 我说：“咱家大衣柜不小啊。”儿子说：“可是好几次我放学回家看见王叔叔站在里面显得很挤。”#爸爸赶紧给了儿子两百块：不要告诉你妈，好不？#妈妈，别扇了…</msg>
<status status="PASS" starttime="20181118 11:50:15.220" endtime="20181118 11:50:15.640"></status>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/add_content</arg>
<arg>text=${aJoke}</arg>
</arguments>
<msg timestamp="20181118 11:50:15.640" level="INFO">Typing text '今天带儿子逛街，路过一个家具店时，儿子指着店里一个大衣柜说：“爸爸，我们能买那个大衣柜吗？咱家的大衣柜太小了。” 我说：“咱家大衣柜不小啊。”儿子说：“可是好几次我放学回家看见王叔叔站在里面显得很挤。”#爸爸赶紧给了儿子两百块：不要告诉你妈，好不？#妈妈，别扇了…' into text field 'com.bdvtt.www:id/add_content'</msg>
<status status="PASS" starttime="20181118 11:50:15.640" endtime="20181118 11:50:29.613"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<status status="PASS" starttime="20181118 11:50:29.613" endtime="20181118 11:50:33.489"></status>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>locator=com.bdvtt.www:id/btok</arg>
</arguments>
<msg timestamp="20181118 11:50:33.489" level="INFO">Clicking element 'com.bdvtt.www:id/btok'.</msg>
<status status="PASS" starttime="20181118 11:50:33.489" endtime="20181118 11:50:42.216"></status>
</kw>
<status status="PASS" starttime="20181118 11:50:15.220" endtime="20181118 11:50:42.216"></status>
</kw>
<status status="PASS" starttime="20181118 11:14:09.200" endtime="20181118 11:50:42.216"></status>
</kw>
<status status="PASS" starttime="20181118 11:12:44.956" endtime="20181118 11:50:42.216" critical="yes"></status>
</test>
<status status="PASS" starttime="20181118 11:12:43.964" endtime="20181118 11:50:42.226"></status>
</suite>
<status status="PASS" starttime="20181118 11:12:43.954" endtime="20181118 11:50:42.226"></status>
</suite>
<status status="PASS" starttime="20181118 11:12:43.854" endtime="20181118 11:50:42.236"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Projects">Projects</stat>
<stat pass="1" fail="0" id="s1-s1" name="9.0.0.0">Projects.9.0.0.0</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="remoteLibTest">Projects.9.0.0.0.remoteLibTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
